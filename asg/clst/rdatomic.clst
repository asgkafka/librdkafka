Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page     1
                                       * * * * *   P R O L O G   * * * * *
  Command options:
    Overriding Parameters . . . . : -DHOST_MVS -I. -fwarn_disable=2356,2357,2405,2610,2011,2282,2284,1130 -fc11 -fextended_variadic_
macros -fanonstruct -march=z7 -mlp64 -DSYSC=1 -frent -IC:\dignus\include -fpreinclude=sysc.h -flisting=../asg/clst/rdatomic.clst -o.
./asg/asm/rdatomic.asm C:\asgkafka\librdkafka\src\rdatomic.h
    Program name. . . . . . . . . : C:\asgkafka\librdkafka\src\rdatomic.h
Compiler options. . . . . . . : -DHOST_MVS -DSYSC=1 -I. -IC:\dignus\include -O0 -fnoaddh -falias_stmts -famode=64 -fanonstruct
                              : -fnoansi_bitfield_packing -fnoasciiout -fasmcomm=expanded -fnoasmlnno -fnoat -fnoatid -fc11 -fc99
                              : -fno_common -fctrlz_is_eof -fcxx_comments -fdfe -fnodfp -fnodollar -fno_dwarf_extern
                              : -fextended_variadic_macros -ffar=ao -fnofar_align -fno_fnio -ffplocal -fno_gnu89_inline
                              : -fnohfpfloatpromote -fnoignore_case -fnoincrepsuf -fnoincstripdir -fnoincstripsuf
                              : -finline=1:128:256 -fno_instrument_functions -flinkageospromote
                              : -flisting=../asg/clst/rdatomic.clst -fnollgrande -flnameaddr -flong_names -fnolowerh -fno_mapat
                              : -fnomargins -fmesg=microsoft -fmin_lm_reg=2 -fmin_stm_reg=2 -fnomrc -fnonint_bitfield -fpack=0 
                              : -fpagesize=60 -fnopatch -fnopic -fpreinclude=sysc.h -frent -fnosascdigraphs -fsave_dsa_over_call
                              : -fno_sched_inst -fsearchlocal -fshow_skipped -fshowinc -fsname -fsource_enc=ascii -fstructmap
                              : -fnostructmaphex -fno_test -fnotrim -funsigned_bitfields -funsigned_char -fuser_sys_hdrmap
                              : -fwarn_disable=2356,2357,2405,2610,2011,2282,2284,1130 -fwchar=4 -fnowchar_ucs -fno_xref
                              : -mno-decimal-floating-point-packed-conversion-facility -mno-distinct-operands
                              : -mno-fp-extensions -mno-high-word-facility -mno-load-store-on-condition
                              : -mno-misc-instruction-extensions-facility-1 -mno-misc-instruction-extensions-facility-2
                              : -mno-misc-instruction-extensions-facility-3 -mno-mvcle -mno-population-count-facility
                              : -mno-tpf-trace -mno-tpf-trace-skip -mno-transaction-facility -march=z7
                              : -mdecimal-floating-point-facility -mextended-immediate
                              : -mfloating-point-support-sign-handling-facility -mfp-support-extension -mfp16
                              : -mfpr-gr-transfer-facility -mgeneral-instructions-extension -mhfp-extensions
                              : -mhfp-multiply-add -mlong-displacement -mlong-double-128 -mlp64 -mpfpo -msquare-root
                              : -o ../asg/asm/rdatomic.asm
                                * * * * *   E N D   O F   P R O L O G   * * * * *
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page     2


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
*=Warning===> cc: #2181 license: license will expire in 3 days
     1       |//                                                                                               |     1     2
     2       |//  sysc.h                                                                                       |     2     2
     3       |//                                                                                               |     3     2
     4       |//  Created by Mike Arnold on 5/5/20.                                                            |     4     2
     5       |//  Copyright Â© 2020 Mike Arnold. All rights reserved.                                          |     5     2
     6       |//                                                                                               |     6     2
     7       |                                                                                                 |     7     2
     8       |#ifndef sysc_h                                                                                   |     8     2
     9       |#define sysc_h                                                                                   |     9     2
    10       |                                                                                                 |    10     2
    11       |#ifdef SYSC                                                                                      |    11     2
    12       |#define INLINE __inline                                                                          |    12     2
    13       |#define max(a,b) ({__typeof__ (a) _a = (a), _b = (b); _a > _b ? _a : _b; })                      |    13     2
    14       |#define min(a,b) ({__typeof__ (a) _a = (a), _b = (b); _a < _b ? _a : _b; })                      |    14     2
    15       |                                                                                                 |    15     2
    16       |#define __builtin_expect(x,y) (x)                                                                |    16     2
    17       |                                                                                                 |    17     2
    18       |#ifndef CLOCK_MONOTONIC                                                                          |    18     2
    19       |#define CLOCK_MONOTONIC CLOCK_REALTIME                                                           |    19     2
    20       |#endif                                                                                           |    20     2
    21       |#include <sys/types.h>                                                                           |    21     2
     1       |/* release 2.25.00 */                                                                            |    22     3
     2       |#pragma pack()                                                                                   |    23     3
     3       |/*-                                                                                              |    24     3
     4       | * Copyright (c) 1982, 1986, 1991, 1993, 1994                                                    |    25     3
     5       | *      The Regents of the University of California.  All rights reserved.                       |    26     3
     6       | * (c) UNIX System Laboratories, Inc.                                                            |    27     3
     7       | * All or some portions of this file are derived from material licensed                          |    28     3
     8       | * to the University of California by American Telephone and Telegraph                           |    29     3
     9       | * Co. or Unix System Laboratories, Inc. and are reproduced herein with                          |    30     3
    10       | * the permission of UNIX System Laboratories, Inc.                                              |    31     3
    11       | *                                                                                               |    32     3
    12       | * Redistribution and use in source and binary forms, with or without                            |    33     3
    13       | * modification, are permitted provided that the following conditions                            |    34     3
    14       | * are met:                                                                                      |    35     3
    15       | * 1. Redistributions of source code must retain the above copyright                             |    36     3
    16       | *    notice, this list of conditions and the following disclaimer.                              |    37     3
    17       | * 2. Redistributions in binary form must reproduce the above copyright                          |    38     3
    18       | *    notice, this list of conditions and the following disclaimer in the                        |    39     3
    19       | *    documentation and/or other materials provided with the distribution.                       |    40     3
    20       | * 4. Neither the name of the University nor the names of its contributors                       |    41     3
    21       | *    may be used to endorse or promote products derived from this software                      |    42     3
    22       | *    without specific prior written permission.                                                 |    43     3
    23       | *                                                                                               |    44     3
    24       | * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND                       |    45     3
    25       | * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE                         |    46     3
    26       | * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE                    |    47     3
    27       | * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE                      |    48     3
    28       | * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL                    |    49     3
    29       | * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS                       |    50     3
    30       | * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)                         |    51     3
    31       | * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT                    |    52     3
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page     3


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    32       | * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY                     |    53     3
    33       | * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF                        |    54     3
    34       | * SUCH DAMAGE.                                                                                  |    55     3
    35       | *                                                                                               |    56     3
    36       | *      @(#)types.h     8.6 (Berkeley) 2/19/95                                                   |    57     3
    37       | * $FreeBSD: src/sys/sys/types.h,v 1.92 2005/05/31 15:18:17 rodrigc Exp $                        |    58     3
    38       | */                                                                                              |    59     3
    39       |                                                                                                 |    60     3
    40       |#ifndef _SYS_TYPES_H_                                                                            |    61     3
    41       |#define _SYS_TYPES_H_                                                                            |    62     3
    42       |                                                                                                 |    63     3
    43       |#include <sys/cdefs.h>                                                                           |    64     3
     1       |/* release 2.25.00 */                                                                            |    65     4
     2       |#pragma pack()                                                                                   |    66     4
     3       |/*                                                                                               |    67     4
     4       | * Copyright (c) 1991, 1993                                                                      |    68     4
     5       | *      The Regents of the University of California.  All rights reserved.                       |    69     4
     6       | *                                                                                               |    70     4
     7       | * This code is derived from software contributed to Berkeley by                                 |    71     4
     8       | * Berkeley Software Design, Inc.                                                                |    72     4
     9       | *                                                                                               |    73     4
    10       | * Redistribution and use in source and binary forms, with or without                            |    74     4
    11       | * modification, are permitted provided that the following conditions                            |    75     4
    12       | * are met:                                                                                      |    76     4
    13       | * 1. Redistributions of source code must retain the above copyright                             |    77     4
    14       | *    notice, this list of conditions and the following disclaimer.                              |    78     4
    15       | * 2. Redistributions in binary form must reproduce the above copyright                          |    79     4
    16       | *    notice, this list of conditions and the following disclaimer in the                        |    80     4
    17       | *    documentation and/or other materials provided with the distribution.                       |    81     4
    18       | * 3. All advertising materials mentioning features or use of this software                      |    82     4
    19       | *    must display the following acknowledgement:                                                |    83     4
    20       | *      This product includes software developed by the University of                            |    84     4
    21       | *      California, Berkeley and its contributors.                                               |    85     4
    22       | * 4. Neither the name of the University nor the names of its contributors                       |    86     4
    23       | *    may be used to endorse or promote products derived from this software                      |    87     4
    24       | *    without specific prior written permission.                                                 |    88     4
    25       | *                                                                                               |    89     4
    26       | * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND                       |    90     4
    27       | * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE                         |    91     4
    28       | * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE                    |    92     4
    29       | * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE                      |    93     4
    30       | * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL                    |    94     4
    31       | * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS                       |    95     4
    32       | * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)                         |    96     4
    33       | * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT                    |    97     4
    34       | * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY                     |    98     4
    35       | * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF                        |    99     4
    36       | * SUCH DAMAGE.                                                                                  |   100     4
    37       | *                                                                                               |   101     4
    38       | *      @(#)cdefs.h     8.8 (Berkeley) 1/9/95                                                    |   102     4
    39       | */                                                                                              |   103     4
    40       |                                                                                                 |   104     4
    41       |#ifndef _SYS_CDEFS_H_                                                                            |   105     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page     4


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    42       |#define _SYS_CDEFS_H_                                                                            |   106     4
    43       |                                                                                                 |   107     4
    44       |#if defined(__cplusplus)                                                                         |   108     4
    45       |#define __BEGIN_DECLS   extern "C" {                                                             |   109     4
    46       |#define __END_DECLS     }                                                                        |   110     4
    47       |#else                                                                                            |   111     4
    48       |#define __BEGIN_DECLS                                                                            |   112     4
    49       |#define __END_DECLS                                                                              |   113     4
    50       |#endif                                                                                           |   114     4
    51       |                                                                                                 |   115     4
    52       |/*                                                                                               |   116     4
    53       | * This code has been put in place to help reduce the addition of                                |   117     4
    54       | * compiler specific defines in the code.  It helps to aid in                                    |   118     4
    55       | * having a compiler-agnostic source tree.                                                       |   119     4
    56       | */                                                                                              |   120     4
    57       |#define __CC_SUPPORTS_INLINE 1                                                                   |   121     4
    58       |#define __CC_SUPPORTS___INLINE 1                                                                 |   122     4
    59       |#define __CC_SUPPORTS___INLINE__ 1                                                               |   123     4
    60       |                                                                                                 |   124     4
    61       |#define __CC_SUPPORTS___FUNC__ 1                                                                 |   125     4
    62       |                                                                                                 |   126     4
    63       |                                                                                                 |   127     4
    64       |/*                                                                                               |   128     4
    65       | * The __CONCAT macro is used to concatenate parts of symbol names, e.g.                         |   129     4
    66       | * with "#define OLD(foo) __CONCAT(old,foo)", OLD(foo) produces oldfoo.                          |   130     4
    67       | * The __CONCAT macro is a bit tricky to use if it must work in non-ANSI                         |   131     4
    68       | * mode -- there must be no spaces between its arguments, and for nested                         |   132     4
    69       | * __CONCAT's, all the __CONCAT's must be at the left.  __CONCAT can also                        |   133     4
    70       | * concatenate double-quoted strings produced by the __STRING macro, but                         |   134     4
    71       | * this only works with ANSI C.                                                                  |   135     4
    72       | *                                                                                               |   136     4
    73       | * __XSTRING is like __STRING, but it expands any macros in its argument                         |   137     4
    74       | * first.  It is only available with ANSI C.                                                     |   138     4
    75       | */                                                                                              |   139     4
    76       |#if defined(__STDC__) || defined(__cplusplus)                                                    |   140     4
    77       |#define __P(protos)     protos          /* full-blown ANSI C */                                  |   141     4
    78       |#define __CONCAT1(x,y)  x ## y                                                                   |   142     4
    79       |#define __CONCAT(x,y)   __CONCAT1(x,y)                                                           |   143     4
    80       |#define __STRING(x)     #x              /* stringify without expanding x */                      |   144     4
    81       |#define __XSTRING(x)    __STRING(x)     /* expand x, then stringify */                           |   145     4
    82       |                                                                                                 |   146     4
    83       |#define __const         const           /* define reserved names to standard */                  |   147     4
    84       |#define __signed        signed                                                                   |   148     4
    85       |#define __volatile      volatile                                                                 |   149     4
    86       |#if defined(__cplusplus)                                                                         |   150     4
    87       |#define __inline        inline          /* convert to C++ keyword */                             |   151     4
    88       |#else                                                                                            |   152     4
    89       |#define __inline        __inline__      /* Use the Systems/C keyword */                          |   153     4
    90       |#endif /* !__cplusplus */                                                                        |   154     4
    91       |                                                                                                 |   155     4
    92       |#else   /* !(__STDC__ || __cplusplus) */                                                         |   156     4
    93       |#define __P(protos)     ()              /* traditional C preprocessor */                         |   157     4
    94       |#define __CONCAT(x,y)   x/**/y                                                                   |   158     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page     5


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    95       |#define __STRING(x)     "x"                                                                      |   159     4
    96       |                                                                                                 |   160     4
    97       |#define __const                         /* delete pseudo-ANSI C keywords */                      |   161     4
    98       |#define __inline                                                                                 |   162     4
    99       |#define __signed                                                                                 |   163     4
   100       |#define __volatile                                                                               |   164     4
   101       |/*                                                                                               |   165     4
   102       | * In non-ANSI C environments, new programs will want ANSI-only C keywords                       |   166     4
   103       | * deleted from the program and old programs will want them left alone.                          |   167     4
   104       | * When using a compiler other than Dignus, programs using the ANSI C keywords                   |   168     4
   105       | * const, inline etc. as normal identifiers should define -DNO_ANSI_KEYWORDS.                    |   169     4
   106       | */                                                                                              |   170     4
   107       |#ifndef NO_ANSI_KEYWORDS                                                                         |   171     4
   108       |#define const                           /* delete ANSI C keywords */                             |   172     4
   109       |#define inline                                                                                   |   173     4
   110       |#define signed                                                                                   |   174     4
   111       |#define volatile                                                                                 |   175     4
   112       |#endif  /* !NO_ANSI_KEYWORDS */                                                                  |   176     4
   113       |#endif  /* !(__STDC__ || __cplusplus) */                                                         |   177     4
   114       |                                                                                                 |   178     4
   115       |/*                                                                                               |   179     4
   116       | * Compiler-dependent macros to help declare dead (non-returning) and                            |   180     4
   117       | * pure (no side effects) functions, and unused variables.                                       |   181     4
   118       | */                                                                                              |   182     4
   119       |#define __dead2 __attribute__((__noreturn__))                                                    |   183     4
   120       |#define __pure  __attribute__((__pure__))                                                        |   184     4
   121       |#define __pure2 __attribute__((__const__))                                                       |   185     4
   122       |#define __unused                                                                                 |   186     4
   123       |#define __aligned(x)                                                                             |   187     4
   124       |#define __section(x)                                                                             |   188     4
   125       |#define __nonnull(x)                                                                             |   189     4
   126       |#define __used                                                                                   |   190     4
   127       |                                                                                                 |   191     4
   128       |#define __always_inline __attribute__((__always_inline__))                                       |   192     4
   129       |#define __noinline      __attribute__((__noinline__))                                            |   193     4
   130       |                                                                                                 |   194     4
   131       |#if __STDC_VERSION__ < 199901                                                                    |   195     4
   132       |#define __func__  NULL                                                                           |   196     4
   133       |#endif                                                                                           |   197     4
   134       |                                                                                                 |   198     4
   134       +                                                                                                 +   198     4
   135       |#if !defined(__STRICT_ANSI__) || __STDC_VERSION__ >= 199901                                      |   199     4
   136       |#define __LONG_LONG_SUPPORTED                                                                    |   200     4
   137       |#endif                                                                                           |   201     4
   138       |                                                                                                 |   202     4
   138       +                                                                                                 +   202     4
   139       |/* Systems/C recognizes they keyword __restrict__ in both                                        |   203     4
   140       | * ANSI and non-ANSI mode to indicate C99 restrict semantics.                                    |   204     4
   141       | **/                                                                                             |   205     4
   142       |#ifndef __cplusplus                                                                              |   206     4
   143       |#define __restrict __restrict__                                                                  |   207     4
   144       |#else                                                                                            |   208     4
   145       |/* Systems/C++ does not */                                                                       |   209     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page     6


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   146       |#define __restrict                                                                               |   210     4
   147       |#endif                                                                                           |   211     4
   148       |                                                                                                 |   212     4
   149       |/*                                                                                               |   213     4
   150       | * define-away GCC-specific branch-prediction markers                                            |   214     4
   151       | */                                                                                              |   215     4
   152       |#define __predict_true(exp)     (exp)                                                            |   216     4
   153       |#define __predict_false(exp)    (exp)                                                            |   217     4
   154       |                                                                                                 |   218     4
   155       |                                                                                                 |   219     4
   156       |/*                                                                                               |   220     4
   157       | * provide a definition of __offsetof(), <stddef.h> and                                          |   221     4
   158       | * <sys/types.h> reference __offsetof().                                                         |   222     4
   159       | *                                                                                               |   223     4
   160       | * For Systems/C, the C compiler recognizes __offsetof(),                                        |   224     4
   161       | * but we need a definition for versions of C++ prior to 1.85.52.                                |   225     4
   162       | */                                                                                              |   226     4
   163       |#if defined(__cplusplus) && (__SYSC_VER__ < (18600))                                             |   227     4
   164       |#undef __offsetof                                                                                |   228     4
   165       |#define __offsetof(type, field)  ((size_t)(&((type *)0)->field))                                 |   229     4
   166       |#endif                                                                                           |   230     4
   167       |                                                                                                 |   231     4
   167       +                                                                                                 +   231     4
   168       |/*                                                                                               |   232     4
   169       | * Compiler-dependent macros to declare that functions take printf-like                          |   233     4
   170       | * or scanf-like arguments.                                                                      |   234     4
   171       | */                                                                                              |   235     4
   172       |#define __printflike(fmtarg, firstvararg)                                                        |   236     4
   173       |#define __scanflike(fmtarg, firstvararg)                                                         |   237     4
   174       |#define __format_arg(fmtarg)                                                                     |   238     4
   175       |#define __printf0like(fmtarg, firstvararg)                                                       |   239     4
   176       |                                                                                                 |   240     4
   177       |/* Compiler-dependent macros that rely on specific extensions. */                                |   241     4
   178       |#define __printf0like(fmtarg, firstvararg)                                                       |   242     4
   179       |                                                                                                 |   243     4
   180       |  /* intended to generate a weak reference as an alias */                                        |   244     4
   181       |#define __weak_reference(sym,alias)                                                              |   245     4
   182       |  /* If this symbol is refrenced, cause the linker to emit "msg" */                              |   246     4
   183       |#define __warn_references(sym,msg)                                                               |   247     4
   184       |                                                                                                 |   248     4
   185       | /* This places the string into the resulting object.  It should */                              |   249     4
   186       | /* probably become #pragma ident */                                                             |   250     4
   187       |#define __IDSTRING(name,string) static const char name[] __unused = string                       |   251     4
   188       |                                                                                                 |   252     4
   189       |#ifndef __RCSID                                                                                  |   253     4
   190       |#define __RCSID(s)      __IDSTRING(rcsid,s)                                                      |   254     4
   191       |#endif                                                                                           |   255     4
   192       |                                                                                                 |   256     4
   193       |/*                                                                                               |   257     4
   194       | * Embed the rcs id of a source file in the resulting library.                                   |   258     4
   195       | * Usage:                                                                                        |   259     4
   196       | *      __SYSCID("Id: src/sys/sys/cdefs.h,v 1.28.2.8 2002/09/18                                  |   260     4
   197       |*                                            04:05:13 mikeh Exp $");                             |   261     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page     7


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   198       | */                                                                                              |   262     4
   199       |#ifndef __SYSCID                                                                                 |   263     4
   200       |#if !defined(lint) && !defined(STRIP_SYSCID)                                                     |   264     4
   201       |#define __SYSCID(s)     __IDSTRING(__CONCAT(__rcsid_,__LINE__),s)                                |   265     4
   202       |#else                                                                                            |   266     4
   203       |#define __SYSCID(s)     struct __hack                                                            |   267     4
   204       |#endif                                                                                           |   268     4
   205       |#endif                                                                                           |   269     4
   206       |                                                                                                 |   270     4
   207       |#ifndef __RCSID_SOURCE                                                                           |   271     4
   208       |#define __RCSID_SOURCE(s) __IDSTRING(rcsid_source,s)                                             |   272     4
   209       |#endif                                                                                           |   273     4
   210       |                                                                                                 |   274     4
   211       |#ifndef __COPYRIGHT                                                                              |   275     4
   212       |#define __COPYRIGHT(s)  __IDSTRING(copyright,s)                                                  |   276     4
   213       |#endif                                                                                           |   277     4
   214       |                                                                                                 |   278     4
   215       |                                                                                                 |   279     4
   216       |#ifndef __DECONST                                                                                |   280     4
   217       |#define __DECONST(type, var)    ((type)(uintptr_t)(const void *)(var))                           |   281     4
   218       |#endif                                                                                           |   282     4
   219       |                                                                                                 |   283     4
   220       |#ifndef __DEVOLATILE                                                                             |   284     4
   221       |#define __DEVOLATILE(type, var) ((type)(uintptr_t)(volatile void *)(var))                        |   285     4
   222       |#endif                                                                                           |   286     4
   223       |                                                                                                 |   287     4
   224       |#ifndef __DEQUALIFY                                                                              |   288     4
   225       |#define __DEQUALIFY(type, var)  ((type)(uintptr_t)(const volatile void *)(var))                  |   289     4
   226       |#endif                                                                                           |   290     4
   227       |                                                                                                 |   291     4
   228       |                                                                                                 |   292     4
   229       |/*-                                                                                              |   293     4
   230       | * The following definitions are an extension of the behavior originally                         |   294     4
   231       | * implemented in <sys/_posix.h>, but with a different level of granularity.                     |   295     4
   232       | * POSIX.1 requires that the macros we test be defined before any standard                       |   296     4
   233       | * header file is included.                                                                      |   297     4
   234       | *                                                                                               |   298     4
   235       | * Here's a quick run-down of the versions:                                                      |   299     4
   236       | *  defined(_POSIX_SOURCE)              1003.1-1988                                              |   300     4
   237       | *  _POSIX_C_SOURCE == 1                1003.1-1990                                              |   301     4
   238       | *  _POSIX_C_SOURCE == 2                1003.2-1992 C Language Binding Option                    |   302     4
   239       | *  _POSIX_C_SOURCE == 199309           1003.1b-1993                                             |   303     4
   240       | *  _POSIX_C_SOURCE == 199506           1003.1c-1995, 1003.1i-1995,                              |   304     4
   241       | *                                      and the omnibus ISO/IEC 9945-1: 1996                     |   305     4
   242       | *  _POSIX_C_SOURCE == 200112           1003.1-2001                                              |   306     4
   243       | *  _POSIX_C_SOURCE == 200809           1003.1-2008                                              |   307     4
   244       | *                                                                                               |   308     4
   245       | * In addition, the X/Open Portability Guide, which is now the Single UNIX                       |   309     4
   246       | * Specification, defines a feature-test macro which indicates the version of                    |   310     4
   247       | * that specification, and which subsumes _POSIX_C_SOURCE.                                       |   311     4
   248       | *                                                                                               |   312     4
   249       | * Our macros begin with two underscores to avoid namespace screwage.                            |   313     4
   250       | */                                                                                              |   314     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page     8


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   251       |                                                                                                 |   315     4
   252       |/*                                                                                               |   316     4
   253       | * If no special macro was specified, make the DragonFly extensions                              |   317     4
   254       | * available. Also make them available when requested so.                                        |   318     4
   255       | */                                                                                              |   319     4
   256       |#if (!defined(_POSIX_C_SOURCE) && !defined(_XOPEN_SOURCE) && \                                   |   320     4
   257       |    !defined(_ANSI_SOURCE) && !defined(_C99_SOURCE)) || \                                        |   321     4
   258       |    defined(_DRAGONFLY_SOURCE) || defined(_NETBSD_SOURCE)                                        |   322     4
   259       |#define __DF_VISIBLE    1                                                                        |   323     4
   260       |#else                                                                                            |   324     4
   261       |#define __DF_VISIBLE    0                                                                        |   325     4
   262       |#endif                                                                                           |   326     4
   263       |                                                                                                 |   327     4
   264       |/*-                                                                                              |   328     4
   265       | * The following definitions are an extension of the behavior originally                         |   329     4
   266       | * implemented in <sys/_posix.h>, but with a different level of granularity.                     |   330     4
   267       | * POSIX.1 requires that the macros we test be defined before any standard                       |   331     4
   268       | * header file is included.                                                                      |   332     4
   269       | *                                                                                               |   333     4
   270       | * Here's a quick run-down of the versions:                                                      |   334     4
   271       | *  defined(_POSIX_SOURCE)              1003.1-1988                                              |   335     4
   272       | *  _POSIX_C_SOURCE == 1                1003.1-1990                                              |   336     4
   273       | *  _POSIX_C_SOURCE == 2                1003.2-1992 C Language Binding Option                    |   337     4
   274       | *  _POSIX_C_SOURCE == 199309           1003.1b-1993                                             |   338     4
   275       | *  _POSIX_C_SOURCE == 199506           1003.1c-1995, 1003.1i-1995,                              |   339     4
   276       | *                                      and the omnibus ISO/IEC 9945-1: 1996                     |   340     4
   277       | *  _POSIX_C_SOURCE == 200112           1003.1-2001                                              |   341     4
   278       | *  _POSIX_C_SOURCE == 200809           1003.1-2008                                              |   342     4
   279       | *                                                                                               |   343     4
   280       | * In addition, the X/Open Portability Guide, which is now the Single UNIX                       |   344     4
   281       | * Specification, defines a feature-test macro which indicates the version of                    |   345     4
   282       | * that specification, and which subsumes _POSIX_C_SOURCE.                                       |   346     4
   283       | *                                                                                               |   347     4
   284       | * Our macros begin with two underscores to avoid namespace screwage.                            |   348     4
   285       | */                                                                                              |   349     4
   286       |                                                                                                 |   350     4
   287       |/* Deal with IEEE Std. 1003.1-1990, in which _POSIX_C_SOURCE == 1. */                            |   351     4
   288       |#if defined(_POSIX_C_SOURCE) && _POSIX_C_SOURCE == 1                                             |   352     4
   289       |#undef _POSIX_C_SOURCE          /* Probably illegal, but beyond caring now. */                   |   353     4
   290       |#define _POSIX_C_SOURCE         199009                                                           |   354     4
   291       |#endif                                                                                           |   355     4
   292       |                                                                                                 |   356     4
   293       |/* Deal with IEEE Std. 1003.2-1992, in which _POSIX_C_SOURCE == 2. */                            |   357     4
   294       |#if defined(_POSIX_C_SOURCE) && _POSIX_C_SOURCE == 2                                             |   358     4
   295       |#undef _POSIX_C_SOURCE                                                                           |   359     4
   296       |#define _POSIX_C_SOURCE         199209                                                           |   360     4
   297       |#endif                                                                                           |   361     4
   298       |                                                                                                 |   362     4
   299       |/* Deal with various X/Open Portability Guides and Single UNIX Spec. */                          |   363     4
   300       |#ifdef _XOPEN_SOURCE                                                                             |   364     4
   301       |#if _XOPEN_SOURCE - 0 >= 700                                                                     |   365     4
   302       |#define __XSI_VISIBLE           700                                                              |   366     4
   303       |#undef _POSIX_C_SOURCE                                                                           |   367     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page     9


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   304       |#define _POSIX_C_SOURCE         200809                                                           |   368     4
   305       |#elif _XOPEN_SOURCE - 0 >= 600                                                                   |   369     4
   306       |#define __XSI_VISIBLE           600                                                              |   370     4
   307       |#undef _POSIX_C_SOURCE                                                                           |   371     4
   308       |#define _POSIX_C_SOURCE         200112                                                           |   372     4
   309       |#elif _XOPEN_SOURCE - 0 >= 500                                                                   |   373     4
   310       |#define __XSI_VISIBLE           500                                                              |   374     4
   311       |#undef _POSIX_C_SOURCE                                                                           |   375     4
   312       |#define _POSIX_C_SOURCE         199506                                                           |   376     4
   313       |#endif                                                                                           |   377     4
   314       |#endif                                                                                           |   378     4
   315       |                                                                                                 |   379     4
   316       |/*                                                                                               |   380     4
   317       | * Deal with all versions of POSIX.  The ordering relative to the tests above is                 |   381     4
   318       | * important.                                                                                    |   382     4
   319       | */                                                                                              |   383     4
   320       |#if defined(_POSIX_SOURCE) && !defined(_POSIX_C_SOURCE)                                          |   384     4
   321       |#define _POSIX_C_SOURCE         198808                                                           |   385     4
   322       |#endif                                                                                           |   386     4
   323       |#ifdef _POSIX_C_SOURCE                                                                           |   387     4
   324       |#if _POSIX_C_SOURCE >= 200809                                                                    |   388     4
   325       |#define __POSIX_VISIBLE         200809                                                           |   389     4
   326       |#define __ISO_C_VISIBLE         1999                                                             |   390     4
   327       |#elif _POSIX_C_SOURCE >= 200112                                                                  |   391     4
   328       |#define __POSIX_VISIBLE         200112                                                           |   392     4
   329       |#define __ISO_C_VISIBLE         1999                                                             |   393     4
   330       |#elif _POSIX_C_SOURCE >= 199506                                                                  |   394     4
   331       |#define __POSIX_VISIBLE         199506                                                           |   395     4
   332       |#define __ISO_C_VISIBLE         1990                                                             |   396     4
   333       |#elif _POSIX_C_SOURCE >= 199309                                                                  |   397     4
   334       |#define __POSIX_VISIBLE         199309                                                           |   398     4
   335       |#define __ISO_C_VISIBLE         1990                                                             |   399     4
   336       |#elif _POSIX_C_SOURCE >= 199209                                                                  |   400     4
   337       |#define __POSIX_VISIBLE         199209                                                           |   401     4
   338       |#define __ISO_C_VISIBLE         1990                                                             |   402     4
   339       |#elif _POSIX_C_SOURCE >= 199009                                                                  |   403     4
   340       |#define __POSIX_VISIBLE         199009                                                           |   404     4
   341       |#define __ISO_C_VISIBLE         1990                                                             |   405     4
   342       |#else                                                                                            |   406     4
   343       |#define __POSIX_VISIBLE         198808                                                           |   407     4
   344       |#define __ISO_C_VISIBLE         0                                                                |   408     4
   345       |#endif /* _POSIX_C_SOURCE */                                                                     |   409     4
   346       |#else                                                                                            |   410     4
   347       |/*-                                                                                              |   411     4
   348       | * Deal with _ANSI_SOURCE:                                                                       |   412     4
   349       | * If it is defined, and no other compilation environment is explicitly                          |   413     4
   350       | * requested, then define our internal feature-test macros to zero.  This                        |   414     4
   351       | * makes no difference to the preprocessor (undefined symbols in preprocessing                   |   415     4
   352       | * expressions are defined to have value zero), but makes it more convenient for                 |   416     4
   353       | * a test program to print out the values.                                                       |   417     4
   354       | *                                                                                               |   418     4
   355       | * If a program mistakenly defines _ANSI_SOURCE and some other macro such as                     |   419     4
   356       | * _POSIX_C_SOURCE, we will assume that it wants the broader compilation                         |   420     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    10


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   357       | * environment (and in fact we will never get here).                                             |   421     4
   358       | */                                                                                              |   422     4
   359       |#if defined(_ANSI_SOURCE)       /* Hide almost everything. */                                    |   423     4
   360       |#define __POSIX_VISIBLE         0                                                                |   424     4
   361       |#define __XSI_VISIBLE           0                                                                |   425     4
   362       |#define __BSD_VISIBLE           0                                                                |   426     4
   363       |#define __ISO_C_VISIBLE         1990                                                             |   427     4
   364       |#define __EXT1_VISIBLE          0                                                                |   428     4
   365       |#elif defined(_C99_SOURCE)      /* Localism to specify strict C99 env. */                        |   429     4
   366       |#define __POSIX_VISIBLE         0                                                                |   430     4
   367       |#define __XSI_VISIBLE           0                                                                |   431     4
   368       |#define __BSD_VISIBLE           0                                                                |   432     4
   369       |#define __ISO_C_VISIBLE         1999                                                             |   433     4
   370       |#define __EXT1_VISIBLE          0                                                                |   434     4
   371       |#elif defined(_C11_SOURCE)      /* Localism to specify strict C11 env. */                        |   435     4
   372       |#define __POSIX_VISIBLE         0                                                                |   436     4
   373       |#define __XSI_VISIBLE           0                                                                |   437     4
   374       |#define __BSD_VISIBLE           0                                                                |   438     4
   375       |#define __ISO_C_VISIBLE         2011                                                             |   439     4
   376       |#define __EXT1_VISIBLE          0                                                                |   440     4
   377       |#else                           /* Default environment: show everything. */                      |   441     4
   378       |#define __POSIX_VISIBLE         200809                                                           |   442     4
   379       |#define __XSI_VISIBLE           700                                                              |   443     4
   380       |#define __BSD_VISIBLE           1                                                                |   444     4
   381       |#define __ISO_C_VISIBLE         2011                                                             |   445     4
   382       |#define __EXT1_VISIBLE          1                                                                |   446     4
   383       |#endif                                                                                           |   447     4
   384       |#endif                                                                                           |   448     4
   385       |                                                                                                 |   449     4
   386       |/* User override __EXT1_VISIBLE */                                                               |   450     4
   387       |#if defined(__STDC_WANT_LIB_EXT1__)                                                              |   451     4
   388       |#undef  __EXT1_VISIBLE                                                                           |   452     4
   389       |#if __STDC_WANT_LIB_EXT1__                                                                       |   453     4
   390       |#define __EXT1_VISIBLE          1                                                                |   454     4
   391       |#else                                                                                            |   455     4
   392       |#define __EXT1_VISIBLE          0                                                                |   456     4
   393       |#endif                                                                                           |   457     4
   394       |#endif /* __STDC_WANT_LIB_EXT1__ */                                                              |   458     4
   395       |                                                                                                 |   459     4
   396       |#if defined(__370__) || defined(__mips) || defined(__powerpc64__)                                |   460     4
   397       |#define __NO_TLS 1                                                                               |   461     4
   398       |#endif                                                                                           |   462     4
   399       |                                                                                                 |   463     4
   400       |                                                                                                 |   464     4
   401       |/* easier than stripping __FBSDID() from sources - Greg 2008/07/28 */                            |   465     4
   402       |#define __FBSDID(x)                                                                              |   466     4
   403       |                                                                                                 |   467     4
   404       |#endif /* !_SYS_CDEFS_H_ */                                                                      |   468     4
   405       |#pragma pack(reset)                                                                              |   469     4
    44       |                                                                                                 |   470     3
    45       |/* Machine type dependent parameters. */                                                         |   471     3
    46       |#include <machine/endian.h>                                                                      |   472     3
     1       |/* release 2.25.00 */                                                                            |   473     5
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    11


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
     2       |#pragma pack()                                                                                   |   474     5
     3       |/*-                                                                                              |   475     5
     4       | * Copyright (c) 1987, 1991 Regents of the University of California.                             |   476     5
     5       | * All rights reserved.                                                                          |   477     5
     6       | *                                                                                               |   478     5
     7       | * Redistribution and use in source and binary forms, with or without                            |   479     5
     8       | * modification, are permitted provided that the following conditions                            |   480     5
     9       | * are met:                                                                                      |   481     5
    10       | * 1. Redistributions of source code must retain the above copyright                             |   482     5
    11       | *    notice, this list of conditions and the following disclaimer.                              |   483     5
    12       | * 2. Redistributions in binary form must reproduce the above copyright                          |   484     5
    13       | *    notice, this list of conditions and the following disclaimer in the                        |   485     5
    14       | *    documentation and/or other materials provided with the distribution.                       |   486     5
    15       | * 4. Neither the name of the University nor the names of its contributors                       |   487     5
    16       | *    may be used to endorse or promote products derived from this software                      |   488     5
    17       | *    without specific prior written permission.                                                 |   489     5
    18       | *                                                                                               |   490     5
    19       | * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND                       |   491     5
    20       | * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE                         |   492     5
    21       | * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE                    |   493     5
    22       | * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE                      |   494     5
    23       | * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL                    |   495     5
    24       | * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS                       |   496     5
    25       | * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)                         |   497     5
    26       | * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT                    |   498     5
    27       | * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY                     |   499     5
    28       | * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF                        |   500     5
    29       | * SUCH DAMAGE.                                                                                  |   501     5
    30       | *                                                                                               |   502     5
    31       | *      @(#)endian.h    7.8 (Berkeley) 4/3/91                                                    |   503     5
    32       | */                                                                                              |   504     5
    33       |                                                                                                 |   505     5
    34       |#ifndef _MACHINE_ENDIAN_H_                                                                       |   506     5
    35       |#define _MACHINE_ENDIAN_H_                                                                       |   507     5
    36       |                                                                                                 |   508     5
    37       |#include <sys/cdefs.h>                                                                           |   509     5
     1       |/* release 2.25.00 */                                                                            |   510     4
     2       |#pragma pack()                                                                                   |   511     4
     3       |/*                                                                                               |   512     4
     4       | * Copyright (c) 1991, 1993                                                                      |   513     4
     5       | *      The Regents of the University of California.  All rights reserved.                       |   514     4
     6       | *                                                                                               |   515     4
     7       | * This code is derived from software contributed to Berkeley by                                 |   516     4
     8       | * Berkeley Software Design, Inc.                                                                |   517     4
     9       | *                                                                                               |   518     4
    10       | * Redistribution and use in source and binary forms, with or without                            |   519     4
    11       | * modification, are permitted provided that the following conditions                            |   520     4
    12       | * are met:                                                                                      |   521     4
    13       | * 1. Redistributions of source code must retain the above copyright                             |   522     4
    14       | *    notice, this list of conditions and the following disclaimer.                              |   523     4
    15       | * 2. Redistributions in binary form must reproduce the above copyright                          |   524     4
    16       | *    notice, this list of conditions and the following disclaimer in the                        |   525     4
    17       | *    documentation and/or other materials provided with the distribution.                       |   526     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    12


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    18       | * 3. All advertising materials mentioning features or use of this software                      |   527     4
    19       | *    must display the following acknowledgement:                                                |   528     4
    20       | *      This product includes software developed by the University of                            |   529     4
    21       | *      California, Berkeley and its contributors.                                               |   530     4
    22       | * 4. Neither the name of the University nor the names of its contributors                       |   531     4
    23       | *    may be used to endorse or promote products derived from this software                      |   532     4
    24       | *    without specific prior written permission.                                                 |   533     4
    25       | *                                                                                               |   534     4
    26       | * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND                       |   535     4
    27       | * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE                         |   536     4
    28       | * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE                    |   537     4
    29       | * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE                      |   538     4
    30       | * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL                    |   539     4
    31       | * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS                       |   540     4
    32       | * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)                         |   541     4
    33       | * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT                    |   542     4
    34       | * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY                     |   543     4
    35       | * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF                        |   544     4
    36       | * SUCH DAMAGE.                                                                                  |   545     4
    37       | *                                                                                               |   546     4
    38       | *      @(#)cdefs.h     8.8 (Berkeley) 1/9/95                                                    |   547     4
    39       | */                                                                                              |   548     4
    40       |                                                                                                 |   549     4
    41       |#ifndef _SYS_CDEFS_H_                                                                            |   550     4
    42       |#define _SYS_CDEFS_H_                                                                            |   551     4
    43       |                                                                                                 |   552     4
    44       |#if defined(__cplusplus)                                                                         |   553     4
    45       |#define __BEGIN_DECLS   extern "C" {                                                             |   554     4
    46       |#define __END_DECLS     }                                                                        |   555     4
    47       |#else                                                                                            |   556     4
    48       |#define __BEGIN_DECLS                                                                            |   557     4
    49       |#define __END_DECLS                                                                              |   558     4
    50       |#endif                                                                                           |   559     4
    51       |                                                                                                 |   560     4
    52       |/*                                                                                               |   561     4
    53       | * This code has been put in place to help reduce the addition of                                |   562     4
    54       | * compiler specific defines in the code.  It helps to aid in                                    |   563     4
    55       | * having a compiler-agnostic source tree.                                                       |   564     4
    56       | */                                                                                              |   565     4
    57       |#define __CC_SUPPORTS_INLINE 1                                                                   |   566     4
    58       |#define __CC_SUPPORTS___INLINE 1                                                                 |   567     4
    59       |#define __CC_SUPPORTS___INLINE__ 1                                                               |   568     4
    60       |                                                                                                 |   569     4
    61       |#define __CC_SUPPORTS___FUNC__ 1                                                                 |   570     4
    62       |                                                                                                 |   571     4
    63       |                                                                                                 |   572     4
    64       |/*                                                                                               |   573     4
    65       | * The __CONCAT macro is used to concatenate parts of symbol names, e.g.                         |   574     4
    66       | * with "#define OLD(foo) __CONCAT(old,foo)", OLD(foo) produces oldfoo.                          |   575     4
    67       | * The __CONCAT macro is a bit tricky to use if it must work in non-ANSI                         |   576     4
    68       | * mode -- there must be no spaces between its arguments, and for nested                         |   577     4
    69       | * __CONCAT's, all the __CONCAT's must be at the left.  __CONCAT can also                        |   578     4
    70       | * concatenate double-quoted strings produced by the __STRING macro, but                         |   579     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    13


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    71       | * this only works with ANSI C.                                                                  |   580     4
    72       | *                                                                                               |   581     4
    73       | * __XSTRING is like __STRING, but it expands any macros in its argument                         |   582     4
    74       | * first.  It is only available with ANSI C.                                                     |   583     4
    75       | */                                                                                              |   584     4
    76       |#if defined(__STDC__) || defined(__cplusplus)                                                    |   585     4
    77       |#define __P(protos)     protos          /* full-blown ANSI C */                                  |   586     4
    78       |#define __CONCAT1(x,y)  x ## y                                                                   |   587     4
    79       |#define __CONCAT(x,y)   __CONCAT1(x,y)                                                           |   588     4
    80       |#define __STRING(x)     #x              /* stringify without expanding x */                      |   589     4
    81       |#define __XSTRING(x)    __STRING(x)     /* expand x, then stringify */                           |   590     4
    82       |                                                                                                 |   591     4
    83       |#define __const         const           /* define reserved names to standard */                  |   592     4
    84       |#define __signed        signed                                                                   |   593     4
    85       |#define __volatile      volatile                                                                 |   594     4
    86       |#if defined(__cplusplus)                                                                         |   595     4
    87       |#define __inline        inline          /* convert to C++ keyword */                             |   596     4
    88       |#else                                                                                            |   597     4
    89       |#define __inline        __inline__      /* Use the Systems/C keyword */                          |   598     4
    90       |#endif /* !__cplusplus */                                                                        |   599     4
    91       |                                                                                                 |   600     4
    92       |#else   /* !(__STDC__ || __cplusplus) */                                                         |   601     4
    93       |#define __P(protos)     ()              /* traditional C preprocessor */                         |   602     4
    94       |#define __CONCAT(x,y)   x/**/y                                                                   |   603     4
    95       |#define __STRING(x)     "x"                                                                      |   604     4
    96       |                                                                                                 |   605     4
    97       |#define __const                         /* delete pseudo-ANSI C keywords */                      |   606     4
    98       |#define __inline                                                                                 |   607     4
    99       |#define __signed                                                                                 |   608     4
   100       |#define __volatile                                                                               |   609     4
   101       |/*                                                                                               |   610     4
   102       | * In non-ANSI C environments, new programs will want ANSI-only C keywords                       |   611     4
   103       | * deleted from the program and old programs will want them left alone.                          |   612     4
   104       | * When using a compiler other than Dignus, programs using the ANSI C keywords                   |   613     4
   105       | * const, inline etc. as normal identifiers should define -DNO_ANSI_KEYWORDS.                    |   614     4
   106       | */                                                                                              |   615     4
   107       |#ifndef NO_ANSI_KEYWORDS                                                                         |   616     4
   108       |#define const                           /* delete ANSI C keywords */                             |   617     4
   109       |#define inline                                                                                   |   618     4
   110       |#define signed                                                                                   |   619     4
   111       |#define volatile                                                                                 |   620     4
   112       |#endif  /* !NO_ANSI_KEYWORDS */                                                                  |   621     4
   113       |#endif  /* !(__STDC__ || __cplusplus) */                                                         |   622     4
   114       |                                                                                                 |   623     4
   115       |/*                                                                                               |   624     4
   116       | * Compiler-dependent macros to help declare dead (non-returning) and                            |   625     4
   117       | * pure (no side effects) functions, and unused variables.                                       |   626     4
   118       | */                                                                                              |   627     4
   119       |#define __dead2 __attribute__((__noreturn__))                                                    |   628     4
   120       |#define __pure  __attribute__((__pure__))                                                        |   629     4
   121       |#define __pure2 __attribute__((__const__))                                                       |   630     4
   122       |#define __unused                                                                                 |   631     4
   123       |#define __aligned(x)                                                                             |   632     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    14


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   124       |#define __section(x)                                                                             |   633     4
   125       |#define __nonnull(x)                                                                             |   634     4
   126       |#define __used                                                                                   |   635     4
   127       |                                                                                                 |   636     4
   128       |#define __always_inline __attribute__((__always_inline__))                                       |   637     4
   129       |#define __noinline      __attribute__((__noinline__))                                            |   638     4
   130       |                                                                                                 |   639     4
   131       |#if __STDC_VERSION__ < 199901                                                                    |   640     4
   132       |#define __func__  NULL                                                                           |   641     4
   133       |#endif                                                                                           |   642     4
   134       |                                                                                                 |   643     4
   135       |#if !defined(__STRICT_ANSI__) || __STDC_VERSION__ >= 199901                                      |   644     4
   136       |#define __LONG_LONG_SUPPORTED                                                                    |   645     4
   137       |#endif                                                                                           |   646     4
   138       |                                                                                                 |   647     4
   139       |/* Systems/C recognizes they keyword __restrict__ in both                                        |   648     4
   140       | * ANSI and non-ANSI mode to indicate C99 restrict semantics.                                    |   649     4
   141       | **/                                                                                             |   650     4
   142       |#ifndef __cplusplus                                                                              |   651     4
   143       |#define __restrict __restrict__                                                                  |   652     4
   144       |#else                                                                                            |   653     4
   145       |/* Systems/C++ does not */                                                                       |   654     4
   146       |#define __restrict                                                                               |   655     4
   147       |#endif                                                                                           |   656     4
   148       |                                                                                                 |   657     4
   149       |/*                                                                                               |   658     4
   150       | * define-away GCC-specific branch-prediction markers                                            |   659     4
   151       | */                                                                                              |   660     4
   152       |#define __predict_true(exp)     (exp)                                                            |   661     4
   153       |#define __predict_false(exp)    (exp)                                                            |   662     4
   154       |                                                                                                 |   663     4
   155       |                                                                                                 |   664     4
   156       |/*                                                                                               |   665     4
   157       | * provide a definition of __offsetof(), <stddef.h> and                                          |   666     4
   158       | * <sys/types.h> reference __offsetof().                                                         |   667     4
   159       | *                                                                                               |   668     4
   160       | * For Systems/C, the C compiler recognizes __offsetof(),                                        |   669     4
   161       | * but we need a definition for versions of C++ prior to 1.85.52.                                |   670     4
   162       | */                                                                                              |   671     4
   163       |#if defined(__cplusplus) && (__SYSC_VER__ < (18600))                                             |   672     4
   164       |#undef __offsetof                                                                                |   673     4
   165       |#define __offsetof(type, field)  ((size_t)(&((type *)0)->field))                                 |   674     4
   166       |#endif                                                                                           |   675     4
   167       |                                                                                                 |   676     4
   168       |/*                                                                                               |   677     4
   169       | * Compiler-dependent macros to declare that functions take printf-like                          |   678     4
   170       | * or scanf-like arguments.                                                                      |   679     4
   171       | */                                                                                              |   680     4
   172       |#define __printflike(fmtarg, firstvararg)                                                        |   681     4
   173       |#define __scanflike(fmtarg, firstvararg)                                                         |   682     4
   174       |#define __format_arg(fmtarg)                                                                     |   683     4
   175       |#define __printf0like(fmtarg, firstvararg)                                                       |   684     4
   176       |                                                                                                 |   685     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    15


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   177       |/* Compiler-dependent macros that rely on specific extensions. */                                |   686     4
   178       |#define __printf0like(fmtarg, firstvararg)                                                       |   687     4
   179       |                                                                                                 |   688     4
   180       |  /* intended to generate a weak reference as an alias */                                        |   689     4
   181       |#define __weak_reference(sym,alias)                                                              |   690     4
   182       |  /* If this symbol is refrenced, cause the linker to emit "msg" */                              |   691     4
   183       |#define __warn_references(sym,msg)                                                               |   692     4
   184       |                                                                                                 |   693     4
   185       | /* This places the string into the resulting object.  It should */                              |   694     4
   186       | /* probably become #pragma ident */                                                             |   695     4
   187       |#define __IDSTRING(name,string) static const char name[] __unused = string                       |   696     4
   188       |                                                                                                 |   697     4
   189       |#ifndef __RCSID                                                                                  |   698     4
   190       |#define __RCSID(s)      __IDSTRING(rcsid,s)                                                      |   699     4
   191       |#endif                                                                                           |   700     4
   192       |                                                                                                 |   701     4
   193       |/*                                                                                               |   702     4
   194       | * Embed the rcs id of a source file in the resulting library.                                   |   703     4
   195       | * Usage:                                                                                        |   704     4
   196       | *      __SYSCID("Id: src/sys/sys/cdefs.h,v 1.28.2.8 2002/09/18                                  |   705     4
   197       |*                                            04:05:13 mikeh Exp $");                             |   706     4
   198       | */                                                                                              |   707     4
   199       |#ifndef __SYSCID                                                                                 |   708     4
   200       |#if !defined(lint) && !defined(STRIP_SYSCID)                                                     |   709     4
   201       |#define __SYSCID(s)     __IDSTRING(__CONCAT(__rcsid_,__LINE__),s)                                |   710     4
   202       |#else                                                                                            |   711     4
   203       |#define __SYSCID(s)     struct __hack                                                            |   712     4
   204       |#endif                                                                                           |   713     4
   205       |#endif                                                                                           |   714     4
   206       |                                                                                                 |   715     4
   207       |#ifndef __RCSID_SOURCE                                                                           |   716     4
   208       |#define __RCSID_SOURCE(s) __IDSTRING(rcsid_source,s)                                             |   717     4
   209       |#endif                                                                                           |   718     4
   210       |                                                                                                 |   719     4
   211       |#ifndef __COPYRIGHT                                                                              |   720     4
   212       |#define __COPYRIGHT(s)  __IDSTRING(copyright,s)                                                  |   721     4
   213       |#endif                                                                                           |   722     4
   214       |                                                                                                 |   723     4
   215       |                                                                                                 |   724     4
   216       |#ifndef __DECONST                                                                                |   725     4
   217       |#define __DECONST(type, var)    ((type)(uintptr_t)(const void *)(var))                           |   726     4
   218       |#endif                                                                                           |   727     4
   219       |                                                                                                 |   728     4
   220       |#ifndef __DEVOLATILE                                                                             |   729     4
   221       |#define __DEVOLATILE(type, var) ((type)(uintptr_t)(volatile void *)(var))                        |   730     4
   222       |#endif                                                                                           |   731     4
   223       |                                                                                                 |   732     4
   224       |#ifndef __DEQUALIFY                                                                              |   733     4
   225       |#define __DEQUALIFY(type, var)  ((type)(uintptr_t)(const volatile void *)(var))                  |   734     4
   226       |#endif                                                                                           |   735     4
   227       |                                                                                                 |   736     4
   228       |                                                                                                 |   737     4
   229       |/*-                                                                                              |   738     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    16


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   230       | * The following definitions are an extension of the behavior originally                         |   739     4
   231       | * implemented in <sys/_posix.h>, but with a different level of granularity.                     |   740     4
   232       | * POSIX.1 requires that the macros we test be defined before any standard                       |   741     4
   233       | * header file is included.                                                                      |   742     4
   234       | *                                                                                               |   743     4
   235       | * Here's a quick run-down of the versions:                                                      |   744     4
   236       | *  defined(_POSIX_SOURCE)              1003.1-1988                                              |   745     4
   237       | *  _POSIX_C_SOURCE == 1                1003.1-1990                                              |   746     4
   238       | *  _POSIX_C_SOURCE == 2                1003.2-1992 C Language Binding Option                    |   747     4
   239       | *  _POSIX_C_SOURCE == 199309           1003.1b-1993                                             |   748     4
   240       | *  _POSIX_C_SOURCE == 199506           1003.1c-1995, 1003.1i-1995,                              |   749     4
   241       | *                                      and the omnibus ISO/IEC 9945-1: 1996                     |   750     4
   242       | *  _POSIX_C_SOURCE == 200112           1003.1-2001                                              |   751     4
   243       | *  _POSIX_C_SOURCE == 200809           1003.1-2008                                              |   752     4
   244       | *                                                                                               |   753     4
   245       | * In addition, the X/Open Portability Guide, which is now the Single UNIX                       |   754     4
   246       | * Specification, defines a feature-test macro which indicates the version of                    |   755     4
   247       | * that specification, and which subsumes _POSIX_C_SOURCE.                                       |   756     4
   248       | *                                                                                               |   757     4
   249       | * Our macros begin with two underscores to avoid namespace screwage.                            |   758     4
   250       | */                                                                                              |   759     4
   251       |                                                                                                 |   760     4
   252       |/*                                                                                               |   761     4
   253       | * If no special macro was specified, make the DragonFly extensions                              |   762     4
   254       | * available. Also make them available when requested so.                                        |   763     4
   255       | */                                                                                              |   764     4
   256       |#if (!defined(_POSIX_C_SOURCE) && !defined(_XOPEN_SOURCE) && \                                   |   765     4
   257       |    !defined(_ANSI_SOURCE) && !defined(_C99_SOURCE)) || \                                        |   766     4
   258       |    defined(_DRAGONFLY_SOURCE) || defined(_NETBSD_SOURCE)                                        |   767     4
   259       |#define __DF_VISIBLE    1                                                                        |   768     4
   260       |#else                                                                                            |   769     4
   261       |#define __DF_VISIBLE    0                                                                        |   770     4
   262       |#endif                                                                                           |   771     4
   263       |                                                                                                 |   772     4
   264       |/*-                                                                                              |   773     4
   265       | * The following definitions are an extension of the behavior originally                         |   774     4
   266       | * implemented in <sys/_posix.h>, but with a different level of granularity.                     |   775     4
   267       | * POSIX.1 requires that the macros we test be defined before any standard                       |   776     4
   268       | * header file is included.                                                                      |   777     4
   269       | *                                                                                               |   778     4
   270       | * Here's a quick run-down of the versions:                                                      |   779     4
   271       | *  defined(_POSIX_SOURCE)              1003.1-1988                                              |   780     4
   272       | *  _POSIX_C_SOURCE == 1                1003.1-1990                                              |   781     4
   273       | *  _POSIX_C_SOURCE == 2                1003.2-1992 C Language Binding Option                    |   782     4
   274       | *  _POSIX_C_SOURCE == 199309           1003.1b-1993                                             |   783     4
   275       | *  _POSIX_C_SOURCE == 199506           1003.1c-1995, 1003.1i-1995,                              |   784     4
   276       | *                                      and the omnibus ISO/IEC 9945-1: 1996                     |   785     4
   277       | *  _POSIX_C_SOURCE == 200112           1003.1-2001                                              |   786     4
   278       | *  _POSIX_C_SOURCE == 200809           1003.1-2008                                              |   787     4
   279       | *                                                                                               |   788     4
   280       | * In addition, the X/Open Portability Guide, which is now the Single UNIX                       |   789     4
   281       | * Specification, defines a feature-test macro which indicates the version of                    |   790     4
   282       | * that specification, and which subsumes _POSIX_C_SOURCE.                                       |   791     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    17


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   283       | *                                                                                               |   792     4
   284       | * Our macros begin with two underscores to avoid namespace screwage.                            |   793     4
   285       | */                                                                                              |   794     4
   286       |                                                                                                 |   795     4
   287       |/* Deal with IEEE Std. 1003.1-1990, in which _POSIX_C_SOURCE == 1. */                            |   796     4
   288       |#if defined(_POSIX_C_SOURCE) && _POSIX_C_SOURCE == 1                                             |   797     4
   289       |#undef _POSIX_C_SOURCE          /* Probably illegal, but beyond caring now. */                   |   798     4
   290       |#define _POSIX_C_SOURCE         199009                                                           |   799     4
   291       |#endif                                                                                           |   800     4
   292       |                                                                                                 |   801     4
   293       |/* Deal with IEEE Std. 1003.2-1992, in which _POSIX_C_SOURCE == 2. */                            |   802     4
   294       |#if defined(_POSIX_C_SOURCE) && _POSIX_C_SOURCE == 2                                             |   803     4
   295       |#undef _POSIX_C_SOURCE                                                                           |   804     4
   296       |#define _POSIX_C_SOURCE         199209                                                           |   805     4
   297       |#endif                                                                                           |   806     4
   298       |                                                                                                 |   807     4
   299       |/* Deal with various X/Open Portability Guides and Single UNIX Spec. */                          |   808     4
   300       |#ifdef _XOPEN_SOURCE                                                                             |   809     4
   301       |#if _XOPEN_SOURCE - 0 >= 700                                                                     |   810     4
   302       |#define __XSI_VISIBLE           700                                                              |   811     4
   303       |#undef _POSIX_C_SOURCE                                                                           |   812     4
   304       |#define _POSIX_C_SOURCE         200809                                                           |   813     4
   305       |#elif _XOPEN_SOURCE - 0 >= 600                                                                   |   814     4
   306       |#define __XSI_VISIBLE           600                                                              |   815     4
   307       |#undef _POSIX_C_SOURCE                                                                           |   816     4
   308       |#define _POSIX_C_SOURCE         200112                                                           |   817     4
   309       |#elif _XOPEN_SOURCE - 0 >= 500                                                                   |   818     4
   310       |#define __XSI_VISIBLE           500                                                              |   819     4
   311       |#undef _POSIX_C_SOURCE                                                                           |   820     4
   312       |#define _POSIX_C_SOURCE         199506                                                           |   821     4
   313       |#endif                                                                                           |   822     4
   314       |#endif                                                                                           |   823     4
   315       |                                                                                                 |   824     4
   316       |/*                                                                                               |   825     4
   317       | * Deal with all versions of POSIX.  The ordering relative to the tests above is                 |   826     4
   318       | * important.                                                                                    |   827     4
   319       | */                                                                                              |   828     4
   320       |#if defined(_POSIX_SOURCE) && !defined(_POSIX_C_SOURCE)                                          |   829     4
   321       |#define _POSIX_C_SOURCE         198808                                                           |   830     4
   322       |#endif                                                                                           |   831     4
   323       |#ifdef _POSIX_C_SOURCE                                                                           |   832     4
   324       |#if _POSIX_C_SOURCE >= 200809                                                                    |   833     4
   325       |#define __POSIX_VISIBLE         200809                                                           |   834     4
   326       |#define __ISO_C_VISIBLE         1999                                                             |   835     4
   327       |#elif _POSIX_C_SOURCE >= 200112                                                                  |   836     4
   328       |#define __POSIX_VISIBLE         200112                                                           |   837     4
   329       |#define __ISO_C_VISIBLE         1999                                                             |   838     4
   330       |#elif _POSIX_C_SOURCE >= 199506                                                                  |   839     4
   331       |#define __POSIX_VISIBLE         199506                                                           |   840     4
   332       |#define __ISO_C_VISIBLE         1990                                                             |   841     4
   333       |#elif _POSIX_C_SOURCE >= 199309                                                                  |   842     4
   334       |#define __POSIX_VISIBLE         199309                                                           |   843     4
   335       |#define __ISO_C_VISIBLE         1990                                                             |   844     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    18


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   336       |#elif _POSIX_C_SOURCE >= 199209                                                                  |   845     4
   337       |#define __POSIX_VISIBLE         199209                                                           |   846     4
   338       |#define __ISO_C_VISIBLE         1990                                                             |   847     4
   339       |#elif _POSIX_C_SOURCE >= 199009                                                                  |   848     4
   340       |#define __POSIX_VISIBLE         199009                                                           |   849     4
   341       |#define __ISO_C_VISIBLE         1990                                                             |   850     4
   342       |#else                                                                                            |   851     4
   343       |#define __POSIX_VISIBLE         198808                                                           |   852     4
   344       |#define __ISO_C_VISIBLE         0                                                                |   853     4
   345       |#endif /* _POSIX_C_SOURCE */                                                                     |   854     4
   346       |#else                                                                                            |   855     4
   347       |/*-                                                                                              |   856     4
   348       | * Deal with _ANSI_SOURCE:                                                                       |   857     4
   349       | * If it is defined, and no other compilation environment is explicitly                          |   858     4
   350       | * requested, then define our internal feature-test macros to zero.  This                        |   859     4
   351       | * makes no difference to the preprocessor (undefined symbols in preprocessing                   |   860     4
   352       | * expressions are defined to have value zero), but makes it more convenient for                 |   861     4
   353       | * a test program to print out the values.                                                       |   862     4
   354       | *                                                                                               |   863     4
   355       | * If a program mistakenly defines _ANSI_SOURCE and some other macro such as                     |   864     4
   356       | * _POSIX_C_SOURCE, we will assume that it wants the broader compilation                         |   865     4
   357       | * environment (and in fact we will never get here).                                             |   866     4
   358       | */                                                                                              |   867     4
   359       |#if defined(_ANSI_SOURCE)       /* Hide almost everything. */                                    |   868     4
   360       |#define __POSIX_VISIBLE         0                                                                |   869     4
   361       |#define __XSI_VISIBLE           0                                                                |   870     4
   362       |#define __BSD_VISIBLE           0                                                                |   871     4
   363       |#define __ISO_C_VISIBLE         1990                                                             |   872     4
   364       |#define __EXT1_VISIBLE          0                                                                |   873     4
   365       |#elif defined(_C99_SOURCE)      /* Localism to specify strict C99 env. */                        |   874     4
   366       |#define __POSIX_VISIBLE         0                                                                |   875     4
   367       |#define __XSI_VISIBLE           0                                                                |   876     4
   368       |#define __BSD_VISIBLE           0                                                                |   877     4
   369       |#define __ISO_C_VISIBLE         1999                                                             |   878     4
   370       |#define __EXT1_VISIBLE          0                                                                |   879     4
   371       |#elif defined(_C11_SOURCE)      /* Localism to specify strict C11 env. */                        |   880     4
   372       |#define __POSIX_VISIBLE         0                                                                |   881     4
   373       |#define __XSI_VISIBLE           0                                                                |   882     4
   374       |#define __BSD_VISIBLE           0                                                                |   883     4
   375       |#define __ISO_C_VISIBLE         2011                                                             |   884     4
   376       |#define __EXT1_VISIBLE          0                                                                |   885     4
   377       |#else                           /* Default environment: show everything. */                      |   886     4
   378       |#define __POSIX_VISIBLE         200809                                                           |   887     4
   379       |#define __XSI_VISIBLE           700                                                              |   888     4
   380       |#define __BSD_VISIBLE           1                                                                |   889     4
   381       |#define __ISO_C_VISIBLE         2011                                                             |   890     4
   382       |#define __EXT1_VISIBLE          1                                                                |   891     4
   383       |#endif                                                                                           |   892     4
   384       |#endif                                                                                           |   893     4
   385       |                                                                                                 |   894     4
   386       |/* User override __EXT1_VISIBLE */                                                               |   895     4
   387       |#if defined(__STDC_WANT_LIB_EXT1__)                                                              |   896     4
   388       |#undef  __EXT1_VISIBLE                                                                           |   897     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    19


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   389       |#if __STDC_WANT_LIB_EXT1__                                                                       |   898     4
   390       |#define __EXT1_VISIBLE          1                                                                |   899     4
   391       |#else                                                                                            |   900     4
   392       |#define __EXT1_VISIBLE          0                                                                |   901     4
   393       |#endif                                                                                           |   902     4
   394       |#endif /* __STDC_WANT_LIB_EXT1__ */                                                              |   903     4
   395       |                                                                                                 |   904     4
   396       |#if defined(__370__) || defined(__mips) || defined(__powerpc64__)                                |   905     4
   397       |#define __NO_TLS 1                                                                               |   906     4
   398       |#endif                                                                                           |   907     4
   399       |                                                                                                 |   908     4
   400       |                                                                                                 |   909     4
   401       |/* easier than stripping __FBSDID() from sources - Greg 2008/07/28 */                            |   910     4
   402       |#define __FBSDID(x)                                                                              |   911     4
   403       |                                                                                                 |   912     4
   404       |#endif /* !_SYS_CDEFS_H_ */                                                                      |   913     4
   405       |#pragma pack(reset)                                                                              |   914     4
    38       |#include <sys/_types.h>                                                                          |   915     5
     1       |/* release 2.25.00 */                                                                            |   916     6
     2       |#pragma pack()                                                                                   |   917     6
     3       |/*-                                                                                              |   918     6
     4       | * Copyright (c) 2002 Mike Barcroft <mike@FreeBSD.org>                                           |   919     6
     5       | * All rights reserved.                                                                          |   920     6
     6       | *                                                                                               |   921     6
     7       | * Redistribution and use in source and binary forms, with or without                            |   922     6
     8       | * modification, are permitted provided that the following conditions                            |   923     6
     9       | * are met:                                                                                      |   924     6
    10       | * 1. Redistributions of source code must retain the above copyright                             |   925     6
    11       | *    notice, this list of conditions and the following disclaimer.                              |   926     6
    12       | * 2. Redistributions in binary form must reproduce the above copyright                          |   927     6
    13       | *    notice, this list of conditions and the following disclaimer in the                        |   928     6
    14       | *    documentation and/or other materials provided with the distribution.                       |   929     6
    15       | *                                                                                               |   930     6
    16       | * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND                        |   931     6
    17       | * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE                         |   932     6
    18       | * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE                    |   933     6
    19       | * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE                       |   934     6
    20       | * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL                    |   935     6
    21       | * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS                       |   936     6
    22       | * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)                         |   937     6
    23       | * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT                    |   938     6
    24       | * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY                     |   939     6
    25       | * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF                        |   940     6
    26       | * SUCH DAMAGE.                                                                                  |   941     6
    27       | *                                                                                               |   942     6
    28       | * $FreeBSD: src/sys/sys/_types.h,v 1.21 2005/03/22 01:19:17 das Exp $                           |   943     6
    29       | */                                                                                              |   944     6
    30       |                                                                                                 |   945     6
    31       |#ifndef _SYS__TYPES_H_                                                                           |   946     6
    32       |#define _SYS__TYPES_H_                                                                           |   947     6
    33       |                                                                                                 |   948     6
    34       |#include <sys/cdefs.h>                                                                           |   949     6
     1       |/* release 2.25.00 */                                                                            |   950     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    20


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
     2       |#pragma pack()                                                                                   |   951     4
     3       |/*                                                                                               |   952     4
     4       | * Copyright (c) 1991, 1993                                                                      |   953     4
     5       | *      The Regents of the University of California.  All rights reserved.                       |   954     4
     6       | *                                                                                               |   955     4
     7       | * This code is derived from software contributed to Berkeley by                                 |   956     4
     8       | * Berkeley Software Design, Inc.                                                                |   957     4
     9       | *                                                                                               |   958     4
    10       | * Redistribution and use in source and binary forms, with or without                            |   959     4
    11       | * modification, are permitted provided that the following conditions                            |   960     4
    12       | * are met:                                                                                      |   961     4
    13       | * 1. Redistributions of source code must retain the above copyright                             |   962     4
    14       | *    notice, this list of conditions and the following disclaimer.                              |   963     4
    15       | * 2. Redistributions in binary form must reproduce the above copyright                          |   964     4
    16       | *    notice, this list of conditions and the following disclaimer in the                        |   965     4
    17       | *    documentation and/or other materials provided with the distribution.                       |   966     4
    18       | * 3. All advertising materials mentioning features or use of this software                      |   967     4
    19       | *    must display the following acknowledgement:                                                |   968     4
    20       | *      This product includes software developed by the University of                            |   969     4
    21       | *      California, Berkeley and its contributors.                                               |   970     4
    22       | * 4. Neither the name of the University nor the names of its contributors                       |   971     4
    23       | *    may be used to endorse or promote products derived from this software                      |   972     4
    24       | *    without specific prior written permission.                                                 |   973     4
    25       | *                                                                                               |   974     4
    26       | * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND                       |   975     4
    27       | * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE                         |   976     4
    28       | * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE                    |   977     4
    29       | * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE                      |   978     4
    30       | * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL                    |   979     4
    31       | * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS                       |   980     4
    32       | * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)                         |   981     4
    33       | * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT                    |   982     4
    34       | * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY                     |   983     4
    35       | * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF                        |   984     4
    36       | * SUCH DAMAGE.                                                                                  |   985     4
    37       | *                                                                                               |   986     4
    38       | *      @(#)cdefs.h     8.8 (Berkeley) 1/9/95                                                    |   987     4
    39       | */                                                                                              |   988     4
    40       |                                                                                                 |   989     4
    41       |#ifndef _SYS_CDEFS_H_                                                                            |   990     4
    42       |#define _SYS_CDEFS_H_                                                                            |   991     4
    43       |                                                                                                 |   992     4
    44       |#if defined(__cplusplus)                                                                         |   993     4
    45       |#define __BEGIN_DECLS   extern "C" {                                                             |   994     4
    46       |#define __END_DECLS     }                                                                        |   995     4
    47       |#else                                                                                            |   996     4
    48       |#define __BEGIN_DECLS                                                                            |   997     4
    49       |#define __END_DECLS                                                                              |   998     4
    50       |#endif                                                                                           |   999     4
    51       |                                                                                                 |  1000     4
    52       |/*                                                                                               |  1001     4
    53       | * This code has been put in place to help reduce the addition of                                |  1002     4
    54       | * compiler specific defines in the code.  It helps to aid in                                    |  1003     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    21


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    55       | * having a compiler-agnostic source tree.                                                       |  1004     4
    56       | */                                                                                              |  1005     4
    57       |#define __CC_SUPPORTS_INLINE 1                                                                   |  1006     4
    58       |#define __CC_SUPPORTS___INLINE 1                                                                 |  1007     4
    59       |#define __CC_SUPPORTS___INLINE__ 1                                                               |  1008     4
    60       |                                                                                                 |  1009     4
    61       |#define __CC_SUPPORTS___FUNC__ 1                                                                 |  1010     4
    62       |                                                                                                 |  1011     4
    63       |                                                                                                 |  1012     4
    64       |/*                                                                                               |  1013     4
    65       | * The __CONCAT macro is used to concatenate parts of symbol names, e.g.                         |  1014     4
    66       | * with "#define OLD(foo) __CONCAT(old,foo)", OLD(foo) produces oldfoo.                          |  1015     4
    67       | * The __CONCAT macro is a bit tricky to use if it must work in non-ANSI                         |  1016     4
    68       | * mode -- there must be no spaces between its arguments, and for nested                         |  1017     4
    69       | * __CONCAT's, all the __CONCAT's must be at the left.  __CONCAT can also                        |  1018     4
    70       | * concatenate double-quoted strings produced by the __STRING macro, but                         |  1019     4
    71       | * this only works with ANSI C.                                                                  |  1020     4
    72       | *                                                                                               |  1021     4
    73       | * __XSTRING is like __STRING, but it expands any macros in its argument                         |  1022     4
    74       | * first.  It is only available with ANSI C.                                                     |  1023     4
    75       | */                                                                                              |  1024     4
    76       |#if defined(__STDC__) || defined(__cplusplus)                                                    |  1025     4
    77       |#define __P(protos)     protos          /* full-blown ANSI C */                                  |  1026     4
    78       |#define __CONCAT1(x,y)  x ## y                                                                   |  1027     4
    79       |#define __CONCAT(x,y)   __CONCAT1(x,y)                                                           |  1028     4
    80       |#define __STRING(x)     #x              /* stringify without expanding x */                      |  1029     4
    81       |#define __XSTRING(x)    __STRING(x)     /* expand x, then stringify */                           |  1030     4
    82       |                                                                                                 |  1031     4
    83       |#define __const         const           /* define reserved names to standard */                  |  1032     4
    84       |#define __signed        signed                                                                   |  1033     4
    85       |#define __volatile      volatile                                                                 |  1034     4
    86       |#if defined(__cplusplus)                                                                         |  1035     4
    87       |#define __inline        inline          /* convert to C++ keyword */                             |  1036     4
    88       |#else                                                                                            |  1037     4
    89       |#define __inline        __inline__      /* Use the Systems/C keyword */                          |  1038     4
    90       |#endif /* !__cplusplus */                                                                        |  1039     4
    91       |                                                                                                 |  1040     4
    92       |#else   /* !(__STDC__ || __cplusplus) */                                                         |  1041     4
    93       |#define __P(protos)     ()              /* traditional C preprocessor */                         |  1042     4
    94       |#define __CONCAT(x,y)   x/**/y                                                                   |  1043     4
    95       |#define __STRING(x)     "x"                                                                      |  1044     4
    96       |                                                                                                 |  1045     4
    97       |#define __const                         /* delete pseudo-ANSI C keywords */                      |  1046     4
    98       |#define __inline                                                                                 |  1047     4
    99       |#define __signed                                                                                 |  1048     4
   100       |#define __volatile                                                                               |  1049     4
   101       |/*                                                                                               |  1050     4
   102       | * In non-ANSI C environments, new programs will want ANSI-only C keywords                       |  1051     4
   103       | * deleted from the program and old programs will want them left alone.                          |  1052     4
   104       | * When using a compiler other than Dignus, programs using the ANSI C keywords                   |  1053     4
   105       | * const, inline etc. as normal identifiers should define -DNO_ANSI_KEYWORDS.                    |  1054     4
   106       | */                                                                                              |  1055     4
   107       |#ifndef NO_ANSI_KEYWORDS                                                                         |  1056     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    22


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   108       |#define const                           /* delete ANSI C keywords */                             |  1057     4
   109       |#define inline                                                                                   |  1058     4
   110       |#define signed                                                                                   |  1059     4
   111       |#define volatile                                                                                 |  1060     4
   112       |#endif  /* !NO_ANSI_KEYWORDS */                                                                  |  1061     4
   113       |#endif  /* !(__STDC__ || __cplusplus) */                                                         |  1062     4
   114       |                                                                                                 |  1063     4
   115       |/*                                                                                               |  1064     4
   116       | * Compiler-dependent macros to help declare dead (non-returning) and                            |  1065     4
   117       | * pure (no side effects) functions, and unused variables.                                       |  1066     4
   118       | */                                                                                              |  1067     4
   119       |#define __dead2 __attribute__((__noreturn__))                                                    |  1068     4
   120       |#define __pure  __attribute__((__pure__))                                                        |  1069     4
   121       |#define __pure2 __attribute__((__const__))                                                       |  1070     4
   122       |#define __unused                                                                                 |  1071     4
   123       |#define __aligned(x)                                                                             |  1072     4
   124       |#define __section(x)                                                                             |  1073     4
   125       |#define __nonnull(x)                                                                             |  1074     4
   126       |#define __used                                                                                   |  1075     4
   127       |                                                                                                 |  1076     4
   128       |#define __always_inline __attribute__((__always_inline__))                                       |  1077     4
   129       |#define __noinline      __attribute__((__noinline__))                                            |  1078     4
   130       |                                                                                                 |  1079     4
   131       |#if __STDC_VERSION__ < 199901                                                                    |  1080     4
   132       |#define __func__  NULL                                                                           |  1081     4
   133       |#endif                                                                                           |  1082     4
   134       |                                                                                                 |  1083     4
   135       |#if !defined(__STRICT_ANSI__) || __STDC_VERSION__ >= 199901                                      |  1084     4
   136       |#define __LONG_LONG_SUPPORTED                                                                    |  1085     4
   137       |#endif                                                                                           |  1086     4
   138       |                                                                                                 |  1087     4
   139       |/* Systems/C recognizes they keyword __restrict__ in both                                        |  1088     4
   140       | * ANSI and non-ANSI mode to indicate C99 restrict semantics.                                    |  1089     4
   141       | **/                                                                                             |  1090     4
   142       |#ifndef __cplusplus                                                                              |  1091     4
   143       |#define __restrict __restrict__                                                                  |  1092     4
   144       |#else                                                                                            |  1093     4
   145       |/* Systems/C++ does not */                                                                       |  1094     4
   146       |#define __restrict                                                                               |  1095     4
   147       |#endif                                                                                           |  1096     4
   148       |                                                                                                 |  1097     4
   149       |/*                                                                                               |  1098     4
   150       | * define-away GCC-specific branch-prediction markers                                            |  1099     4
   151       | */                                                                                              |  1100     4
   152       |#define __predict_true(exp)     (exp)                                                            |  1101     4
   153       |#define __predict_false(exp)    (exp)                                                            |  1102     4
   154       |                                                                                                 |  1103     4
   155       |                                                                                                 |  1104     4
   156       |/*                                                                                               |  1105     4
   157       | * provide a definition of __offsetof(), <stddef.h> and                                          |  1106     4
   158       | * <sys/types.h> reference __offsetof().                                                         |  1107     4
   159       | *                                                                                               |  1108     4
   160       | * For Systems/C, the C compiler recognizes __offsetof(),                                        |  1109     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    23


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   161       | * but we need a definition for versions of C++ prior to 1.85.52.                                |  1110     4
   162       | */                                                                                              |  1111     4
   163       |#if defined(__cplusplus) && (__SYSC_VER__ < (18600))                                             |  1112     4
   164       |#undef __offsetof                                                                                |  1113     4
   165       |#define __offsetof(type, field)  ((size_t)(&((type *)0)->field))                                 |  1114     4
   166       |#endif                                                                                           |  1115     4
   167       |                                                                                                 |  1116     4
   168       |/*                                                                                               |  1117     4
   169       | * Compiler-dependent macros to declare that functions take printf-like                          |  1118     4
   170       | * or scanf-like arguments.                                                                      |  1119     4
   171       | */                                                                                              |  1120     4
   172       |#define __printflike(fmtarg, firstvararg)                                                        |  1121     4
   173       |#define __scanflike(fmtarg, firstvararg)                                                         |  1122     4
   174       |#define __format_arg(fmtarg)                                                                     |  1123     4
   175       |#define __printf0like(fmtarg, firstvararg)                                                       |  1124     4
   176       |                                                                                                 |  1125     4
   177       |/* Compiler-dependent macros that rely on specific extensions. */                                |  1126     4
   178       |#define __printf0like(fmtarg, firstvararg)                                                       |  1127     4
   179       |                                                                                                 |  1128     4
   180       |  /* intended to generate a weak reference as an alias */                                        |  1129     4
   181       |#define __weak_reference(sym,alias)                                                              |  1130     4
   182       |  /* If this symbol is refrenced, cause the linker to emit "msg" */                              |  1131     4
   183       |#define __warn_references(sym,msg)                                                               |  1132     4
   184       |                                                                                                 |  1133     4
   185       | /* This places the string into the resulting object.  It should */                              |  1134     4
   186       | /* probably become #pragma ident */                                                             |  1135     4
   187       |#define __IDSTRING(name,string) static const char name[] __unused = string                       |  1136     4
   188       |                                                                                                 |  1137     4
   189       |#ifndef __RCSID                                                                                  |  1138     4
   190       |#define __RCSID(s)      __IDSTRING(rcsid,s)                                                      |  1139     4
   191       |#endif                                                                                           |  1140     4
   192       |                                                                                                 |  1141     4
   193       |/*                                                                                               |  1142     4
   194       | * Embed the rcs id of a source file in the resulting library.                                   |  1143     4
   195       | * Usage:                                                                                        |  1144     4
   196       | *      __SYSCID("Id: src/sys/sys/cdefs.h,v 1.28.2.8 2002/09/18                                  |  1145     4
   197       |*                                            04:05:13 mikeh Exp $");                             |  1146     4
   198       | */                                                                                              |  1147     4
   199       |#ifndef __SYSCID                                                                                 |  1148     4
   200       |#if !defined(lint) && !defined(STRIP_SYSCID)                                                     |  1149     4
   201       |#define __SYSCID(s)     __IDSTRING(__CONCAT(__rcsid_,__LINE__),s)                                |  1150     4
   202       |#else                                                                                            |  1151     4
   203       |#define __SYSCID(s)     struct __hack                                                            |  1152     4
   204       |#endif                                                                                           |  1153     4
   205       |#endif                                                                                           |  1154     4
   206       |                                                                                                 |  1155     4
   207       |#ifndef __RCSID_SOURCE                                                                           |  1156     4
   208       |#define __RCSID_SOURCE(s) __IDSTRING(rcsid_source,s)                                             |  1157     4
   209       |#endif                                                                                           |  1158     4
   210       |                                                                                                 |  1159     4
   211       |#ifndef __COPYRIGHT                                                                              |  1160     4
   212       |#define __COPYRIGHT(s)  __IDSTRING(copyright,s)                                                  |  1161     4
   213       |#endif                                                                                           |  1162     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    24


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   214       |                                                                                                 |  1163     4
   215       |                                                                                                 |  1164     4
   216       |#ifndef __DECONST                                                                                |  1165     4
   217       |#define __DECONST(type, var)    ((type)(uintptr_t)(const void *)(var))                           |  1166     4
   218       |#endif                                                                                           |  1167     4
   219       |                                                                                                 |  1168     4
   220       |#ifndef __DEVOLATILE                                                                             |  1169     4
   221       |#define __DEVOLATILE(type, var) ((type)(uintptr_t)(volatile void *)(var))                        |  1170     4
   222       |#endif                                                                                           |  1171     4
   223       |                                                                                                 |  1172     4
   224       |#ifndef __DEQUALIFY                                                                              |  1173     4
   225       |#define __DEQUALIFY(type, var)  ((type)(uintptr_t)(const volatile void *)(var))                  |  1174     4
   226       |#endif                                                                                           |  1175     4
   227       |                                                                                                 |  1176     4
   228       |                                                                                                 |  1177     4
   229       |/*-                                                                                              |  1178     4
   230       | * The following definitions are an extension of the behavior originally                         |  1179     4
   231       | * implemented in <sys/_posix.h>, but with a different level of granularity.                     |  1180     4
   232       | * POSIX.1 requires that the macros we test be defined before any standard                       |  1181     4
   233       | * header file is included.                                                                      |  1182     4
   234       | *                                                                                               |  1183     4
   235       | * Here's a quick run-down of the versions:                                                      |  1184     4
   236       | *  defined(_POSIX_SOURCE)              1003.1-1988                                              |  1185     4
   237       | *  _POSIX_C_SOURCE == 1                1003.1-1990                                              |  1186     4
   238       | *  _POSIX_C_SOURCE == 2                1003.2-1992 C Language Binding Option                    |  1187     4
   239       | *  _POSIX_C_SOURCE == 199309           1003.1b-1993                                             |  1188     4
   240       | *  _POSIX_C_SOURCE == 199506           1003.1c-1995, 1003.1i-1995,                              |  1189     4
   241       | *                                      and the omnibus ISO/IEC 9945-1: 1996                     |  1190     4
   242       | *  _POSIX_C_SOURCE == 200112           1003.1-2001                                              |  1191     4
   243       | *  _POSIX_C_SOURCE == 200809           1003.1-2008                                              |  1192     4
   244       | *                                                                                               |  1193     4
   245       | * In addition, the X/Open Portability Guide, which is now the Single UNIX                       |  1194     4
   246       | * Specification, defines a feature-test macro which indicates the version of                    |  1195     4
   247       | * that specification, and which subsumes _POSIX_C_SOURCE.                                       |  1196     4
   248       | *                                                                                               |  1197     4
   249       | * Our macros begin with two underscores to avoid namespace screwage.                            |  1198     4
   250       | */                                                                                              |  1199     4
   251       |                                                                                                 |  1200     4
   252       |/*                                                                                               |  1201     4
   253       | * If no special macro was specified, make the DragonFly extensions                              |  1202     4
   254       | * available. Also make them available when requested so.                                        |  1203     4
   255       | */                                                                                              |  1204     4
   256       |#if (!defined(_POSIX_C_SOURCE) && !defined(_XOPEN_SOURCE) && \                                   |  1205     4
   257       |    !defined(_ANSI_SOURCE) && !defined(_C99_SOURCE)) || \                                        |  1206     4
   258       |    defined(_DRAGONFLY_SOURCE) || defined(_NETBSD_SOURCE)                                        |  1207     4
   259       |#define __DF_VISIBLE    1                                                                        |  1208     4
   260       |#else                                                                                            |  1209     4
   261       |#define __DF_VISIBLE    0                                                                        |  1210     4
   262       |#endif                                                                                           |  1211     4
   263       |                                                                                                 |  1212     4
   264       |/*-                                                                                              |  1213     4
   265       | * The following definitions are an extension of the behavior originally                         |  1214     4
   266       | * implemented in <sys/_posix.h>, but with a different level of granularity.                     |  1215     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    25


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   267       | * POSIX.1 requires that the macros we test be defined before any standard                       |  1216     4
   268       | * header file is included.                                                                      |  1217     4
   269       | *                                                                                               |  1218     4
   270       | * Here's a quick run-down of the versions:                                                      |  1219     4
   271       | *  defined(_POSIX_SOURCE)              1003.1-1988                                              |  1220     4
   272       | *  _POSIX_C_SOURCE == 1                1003.1-1990                                              |  1221     4
   273       | *  _POSIX_C_SOURCE == 2                1003.2-1992 C Language Binding Option                    |  1222     4
   274       | *  _POSIX_C_SOURCE == 199309           1003.1b-1993                                             |  1223     4
   275       | *  _POSIX_C_SOURCE == 199506           1003.1c-1995, 1003.1i-1995,                              |  1224     4
   276       | *                                      and the omnibus ISO/IEC 9945-1: 1996                     |  1225     4
   277       | *  _POSIX_C_SOURCE == 200112           1003.1-2001                                              |  1226     4
   278       | *  _POSIX_C_SOURCE == 200809           1003.1-2008                                              |  1227     4
   279       | *                                                                                               |  1228     4
   280       | * In addition, the X/Open Portability Guide, which is now the Single UNIX                       |  1229     4
   281       | * Specification, defines a feature-test macro which indicates the version of                    |  1230     4
   282       | * that specification, and which subsumes _POSIX_C_SOURCE.                                       |  1231     4
   283       | *                                                                                               |  1232     4
   284       | * Our macros begin with two underscores to avoid namespace screwage.                            |  1233     4
   285       | */                                                                                              |  1234     4
   286       |                                                                                                 |  1235     4
   287       |/* Deal with IEEE Std. 1003.1-1990, in which _POSIX_C_SOURCE == 1. */                            |  1236     4
   288       |#if defined(_POSIX_C_SOURCE) && _POSIX_C_SOURCE == 1                                             |  1237     4
   289       |#undef _POSIX_C_SOURCE          /* Probably illegal, but beyond caring now. */                   |  1238     4
   290       |#define _POSIX_C_SOURCE         199009                                                           |  1239     4
   291       |#endif                                                                                           |  1240     4
   292       |                                                                                                 |  1241     4
   293       |/* Deal with IEEE Std. 1003.2-1992, in which _POSIX_C_SOURCE == 2. */                            |  1242     4
   294       |#if defined(_POSIX_C_SOURCE) && _POSIX_C_SOURCE == 2                                             |  1243     4
   295       |#undef _POSIX_C_SOURCE                                                                           |  1244     4
   296       |#define _POSIX_C_SOURCE         199209                                                           |  1245     4
   297       |#endif                                                                                           |  1246     4
   298       |                                                                                                 |  1247     4
   299       |/* Deal with various X/Open Portability Guides and Single UNIX Spec. */                          |  1248     4
   300       |#ifdef _XOPEN_SOURCE                                                                             |  1249     4
   301       |#if _XOPEN_SOURCE - 0 >= 700                                                                     |  1250     4
   302       |#define __XSI_VISIBLE           700                                                              |  1251     4
   303       |#undef _POSIX_C_SOURCE                                                                           |  1252     4
   304       |#define _POSIX_C_SOURCE         200809                                                           |  1253     4
   305       |#elif _XOPEN_SOURCE - 0 >= 600                                                                   |  1254     4
   306       |#define __XSI_VISIBLE           600                                                              |  1255     4
   307       |#undef _POSIX_C_SOURCE                                                                           |  1256     4
   308       |#define _POSIX_C_SOURCE         200112                                                           |  1257     4
   309       |#elif _XOPEN_SOURCE - 0 >= 500                                                                   |  1258     4
   310       |#define __XSI_VISIBLE           500                                                              |  1259     4
   311       |#undef _POSIX_C_SOURCE                                                                           |  1260     4
   312       |#define _POSIX_C_SOURCE         199506                                                           |  1261     4
   313       |#endif                                                                                           |  1262     4
   314       |#endif                                                                                           |  1263     4
   315       |                                                                                                 |  1264     4
   316       |/*                                                                                               |  1265     4
   317       | * Deal with all versions of POSIX.  The ordering relative to the tests above is                 |  1266     4
   318       | * important.                                                                                    |  1267     4
   319       | */                                                                                              |  1268     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    26


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   320       |#if defined(_POSIX_SOURCE) && !defined(_POSIX_C_SOURCE)                                          |  1269     4
   321       |#define _POSIX_C_SOURCE         198808                                                           |  1270     4
   322       |#endif                                                                                           |  1271     4
   323       |#ifdef _POSIX_C_SOURCE                                                                           |  1272     4
   324       |#if _POSIX_C_SOURCE >= 200809                                                                    |  1273     4
   325       |#define __POSIX_VISIBLE         200809                                                           |  1274     4
   326       |#define __ISO_C_VISIBLE         1999                                                             |  1275     4
   327       |#elif _POSIX_C_SOURCE >= 200112                                                                  |  1276     4
   328       |#define __POSIX_VISIBLE         200112                                                           |  1277     4
   329       |#define __ISO_C_VISIBLE         1999                                                             |  1278     4
   330       |#elif _POSIX_C_SOURCE >= 199506                                                                  |  1279     4
   331       |#define __POSIX_VISIBLE         199506                                                           |  1280     4
   332       |#define __ISO_C_VISIBLE         1990                                                             |  1281     4
   333       |#elif _POSIX_C_SOURCE >= 199309                                                                  |  1282     4
   334       |#define __POSIX_VISIBLE         199309                                                           |  1283     4
   335       |#define __ISO_C_VISIBLE         1990                                                             |  1284     4
   336       |#elif _POSIX_C_SOURCE >= 199209                                                                  |  1285     4
   337       |#define __POSIX_VISIBLE         199209                                                           |  1286     4
   338       |#define __ISO_C_VISIBLE         1990                                                             |  1287     4
   339       |#elif _POSIX_C_SOURCE >= 199009                                                                  |  1288     4
   340       |#define __POSIX_VISIBLE         199009                                                           |  1289     4
   341       |#define __ISO_C_VISIBLE         1990                                                             |  1290     4
   342       |#else                                                                                            |  1291     4
   343       |#define __POSIX_VISIBLE         198808                                                           |  1292     4
   344       |#define __ISO_C_VISIBLE         0                                                                |  1293     4
   345       |#endif /* _POSIX_C_SOURCE */                                                                     |  1294     4
   346       |#else                                                                                            |  1295     4
   347       |/*-                                                                                              |  1296     4
   348       | * Deal with _ANSI_SOURCE:                                                                       |  1297     4
   349       | * If it is defined, and no other compilation environment is explicitly                          |  1298     4
   350       | * requested, then define our internal feature-test macros to zero.  This                        |  1299     4
   351       | * makes no difference to the preprocessor (undefined symbols in preprocessing                   |  1300     4
   352       | * expressions are defined to have value zero), but makes it more convenient for                 |  1301     4
   353       | * a test program to print out the values.                                                       |  1302     4
   354       | *                                                                                               |  1303     4
   355       | * If a program mistakenly defines _ANSI_SOURCE and some other macro such as                     |  1304     4
   356       | * _POSIX_C_SOURCE, we will assume that it wants the broader compilation                         |  1305     4
   357       | * environment (and in fact we will never get here).                                             |  1306     4
   358       | */                                                                                              |  1307     4
   359       |#if defined(_ANSI_SOURCE)       /* Hide almost everything. */                                    |  1308     4
   360       |#define __POSIX_VISIBLE         0                                                                |  1309     4
   361       |#define __XSI_VISIBLE           0                                                                |  1310     4
   362       |#define __BSD_VISIBLE           0                                                                |  1311     4
   363       |#define __ISO_C_VISIBLE         1990                                                             |  1312     4
   364       |#define __EXT1_VISIBLE          0                                                                |  1313     4
   365       |#elif defined(_C99_SOURCE)      /* Localism to specify strict C99 env. */                        |  1314     4
   366       |#define __POSIX_VISIBLE         0                                                                |  1315     4
   367       |#define __XSI_VISIBLE           0                                                                |  1316     4
   368       |#define __BSD_VISIBLE           0                                                                |  1317     4
   369       |#define __ISO_C_VISIBLE         1999                                                             |  1318     4
   370       |#define __EXT1_VISIBLE          0                                                                |  1319     4
   371       |#elif defined(_C11_SOURCE)      /* Localism to specify strict C11 env. */                        |  1320     4
   372       |#define __POSIX_VISIBLE         0                                                                |  1321     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    27


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   373       |#define __XSI_VISIBLE           0                                                                |  1322     4
   374       |#define __BSD_VISIBLE           0                                                                |  1323     4
   375       |#define __ISO_C_VISIBLE         2011                                                             |  1324     4
   376       |#define __EXT1_VISIBLE          0                                                                |  1325     4
   377       |#else                           /* Default environment: show everything. */                      |  1326     4
   378       |#define __POSIX_VISIBLE         200809                                                           |  1327     4
   379       |#define __XSI_VISIBLE           700                                                              |  1328     4
   380       |#define __BSD_VISIBLE           1                                                                |  1329     4
   381       |#define __ISO_C_VISIBLE         2011                                                             |  1330     4
   382       |#define __EXT1_VISIBLE          1                                                                |  1331     4
   383       |#endif                                                                                           |  1332     4
   384       |#endif                                                                                           |  1333     4
   385       |                                                                                                 |  1334     4
   386       |/* User override __EXT1_VISIBLE */                                                               |  1335     4
   387       |#if defined(__STDC_WANT_LIB_EXT1__)                                                              |  1336     4
   388       |#undef  __EXT1_VISIBLE                                                                           |  1337     4
   389       |#if __STDC_WANT_LIB_EXT1__                                                                       |  1338     4
   390       |#define __EXT1_VISIBLE          1                                                                |  1339     4
   391       |#else                                                                                            |  1340     4
   392       |#define __EXT1_VISIBLE          0                                                                |  1341     4
   393       |#endif                                                                                           |  1342     4
   394       |#endif /* __STDC_WANT_LIB_EXT1__ */                                                              |  1343     4
   395       |                                                                                                 |  1344     4
   396       |#if defined(__370__) || defined(__mips) || defined(__powerpc64__)                                |  1345     4
   397       |#define __NO_TLS 1                                                                               |  1346     4
   398       |#endif                                                                                           |  1347     4
   399       |                                                                                                 |  1348     4
   400       |                                                                                                 |  1349     4
   401       |/* easier than stripping __FBSDID() from sources - Greg 2008/07/28 */                            |  1350     4
   402       |#define __FBSDID(x)                                                                              |  1351     4
   403       |                                                                                                 |  1352     4
   404       |#endif /* !_SYS_CDEFS_H_ */                                                                      |  1353     4
   405       |#pragma pack(reset)                                                                              |  1354     4
    35       |#include <machine/_types.h>                                                                      |  1355     6
     1       |/* release 2.25.00 */                                                                            |  1356     7
     2       |#pragma pack()                                                                                   |  1357     7
     3       |/*-                                                                                              |  1358     7
     4       | * Copyright (c) 2002 Mike Barcroft <mike@FreeBSD.org>                                           |  1359     7
     5       | * Copyright (c) 1990, 1993                                                                      |  1360     7
     6       | *      The Regents of the University of California.  All rights reserved.                       |  1361     7
     7       | *                                                                                               |  1362     7
     8       | * Redistribution and use in source and binary forms, with or without                            |  1363     7
     9       | * modification, are permitted provided that the following conditions                            |  1364     7
    10       | * are met:                                                                                      |  1365     7
    11       | * 1. Redistributions of source code must retain the above copyright                             |  1366     7
    12       | *    notice, this list of conditions and the following disclaimer.                              |  1367     7
    13       | * 2. Redistributions in binary form must reproduce the above copyright                          |  1368     7
    14       | *    notice, this list of conditions and the following disclaimer in the                        |  1369     7
    15       | *    documentation and/or other materials provided with the distribution.                       |  1370     7
    16       | * 3. All advertising materials mentioning features or use of this software                      |  1371     7
    17       | *    must display the following acknowledgement:                                                |  1372     7
    18       | *      This product includes software developed by the University of                            |  1373     7
    19       | *      California, Berkeley and its contributors.                                               |  1374     7
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    28


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    20       | * 4. Neither the name of the University nor the names of its contributors                       |  1375     7
    21       | *    may be used to endorse or promote products derived from this software                      |  1376     7
    22       | *    without specific prior written permission.                                                 |  1377     7
    23       | *                                                                                               |  1378     7
    24       | * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND                       |  1379     7
    25       | * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE                         |  1380     7
    26       | * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE                    |  1381     7
    27       | * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE                      |  1382     7
    28       | * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL                    |  1383     7
    29       | * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS                       |  1384     7
    30       | * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)                         |  1385     7
    31       | * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT                    |  1386     7
    32       | * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY                     |  1387     7
    33       | * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF                        |  1388     7
    34       | * SUCH DAMAGE.                                                                                  |  1389     7
    35       | *                                                                                               |  1390     7
    36       | *      From: @(#)ansi.h        8.2 (Berkeley) 1/4/94                                            |  1391     7
    37       | *      From: @(#)types.h       8.3 (Berkeley) 1/5/94                                            |  1392     7
    38       | * $FreeBSD: src/sys/i386/include/_types.h,v 1.12 2005/07/02 23:13:31                            |  1393     7
    39       | *  thompsa Exp $                                                                                |  1394     7
    40       | */                                                                                              |  1395     7
    41       |                                                                                                 |  1396     7
    42       |#ifndef _MACHINE__TYPES_H_                                                                       |  1397     7
    43       |#define _MACHINE__TYPES_H_                                                                       |  1398     7
    44       |                                                                                                 |  1399     7
    45       |#ifndef _SYS_CDEFS_H_                                                                            |  1400     7
    46       |#error this file needs sys/cdefs.h as a prerequisite                                             |  1401     7
    47       |#endif                                                                                           |  1402     7
    48       |                                                                                                 |  1403     7
    49       |#define __NO_STRICT_ALIGNMENT                                                                    |  1404     7
    50       |                                                                                                 |  1405     7
    51       |/*                                                                                               |  1406     7
    52       | * Basic types upon which most other types are built.                                            |  1407     7
    53       | */                                                                                              |  1408     7
    54       |typedef __signed char           __int8_t;                                                        |  1409     7
    54       +typedef signed char             __int8_t;                                                        +  1409     7
    55       |typedef unsigned char           __uint8_t;                                                       |  1410     7
    56       |typedef short                   __int16_t;                                                       |  1411     7
    57       |typedef unsigned short          __uint16_t;                                                      |  1412     7
    58       |typedef int                     __int32_t;                                                       |  1413     7
    59       |typedef unsigned int            __uint32_t;                                                      |  1414     7
    60       |                                                                                                 |  1415     7
    61       |#if defined(lint)                                                                                |  1416     7
    62       |/* LONGLONG */                                                                                   |  1417     7
    63       |typedef long long               __int64_t;                                                       |  1418     7
    64       |/* LONGLONG */                                                                                   |  1419     7
    65       |typedef unsigned long long      __uint64_t;                                                      |  1420     7
    66       |#elif defined(__GNUCLIKE_ATTRIBUTE_MODE_DI)                                                      |  1421     7
    67       |typedef int __attribute__((__mode__(__DI__)))           __int64_t;                               |  1422     7
    68       |typedef unsigned int __attribute__((__mode__(__DI__)))  __uint64_t;                              |  1423     7
    69       |#else                                                                                            |  1424     7
    70       |/* LONGLONG */                                                                                   |  1425     7
    71       |typedef long long               __int64_t;                                                       |  1426     7
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    29


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    72       |/* LONGLONG */                                                                                   |  1427     7
    73       |typedef unsigned long long      __uint64_t;                                                      |  1428     7
    74       |#endif                                                                                           |  1429     7
    75       |                                                                                                 |  1430     7
    76       |/*                                                                                               |  1431     7
    77       | * Standard type definitions.                                                                    |  1432     7
    78       | */                                                                                              |  1433     7
    79       |typedef unsigned long   __clock_t;              /* clock()... */                                 |  1434     7
    80       |typedef unsigned int    __cpumask_t;                                                             |  1435     7
    81       |typedef __int32_t       __critical_t;                                                            |  1436     7
    82       |typedef double          __double_t;                                                              |  1437     7
    83       |typedef double          __float_t;                                                               |  1438     7
    84       |#ifdef __SYSC_64BIT__                                                                            |  1439     7
    85       |typedef __int64_t       __intfptr_t;                                                             |  1440     7
    86       |#else /* !__SYSC_64_BIT__: */                                                                    |  1441     7
    87       |typedef __int32_t       __intfptr_t;                                                             |  1442     7
    88       |#endif /* __SYSC_64_BIT__ */                                                                     |  1443     7
    89       |typedef __int64_t       __intmax_t;                                                              |  1444     7
    90       |typedef __int32_t       __int_fast8_t;                                                           |  1445     7
    91       |typedef __int32_t       __int_fast16_t;                                                          |  1446     7
    92       |typedef __int32_t       __int_fast32_t;                                                          |  1447     7
    93       |typedef __int64_t       __int_fast64_t;                                                          |  1448     7
    94       |typedef __int8_t        __int_least8_t;                                                          |  1449     7
    95       |typedef __int16_t       __int_least16_t;                                                         |  1450     7
    96       |typedef __int32_t       __int_least32_t;                                                         |  1451     7
    97       |typedef __int64_t       __int_least64_t;                                                         |  1452     7
    98       |#ifdef __SYSC_64BIT__                                                                            |  1453     7
    99       |typedef __int64_t       __ptrdiff_t;            /* ptr1 - ptr2 */                                |  1454     7
   100       |typedef __int64_t       __register_t;                                                            |  1455     7
   101       |typedef __int64_t       __segsz_t;              /* segment size (in pages) */                    |  1456     7
   102       |/* was "__uint64_t" for __size_t, but I am using "unsigned long" instead                         |  1457     7
   103       | * because it's what the C++ compiler prefers, and it should be the same.  Note                  |  1458     7
   104       | * that this will fall over if (pointer_is_64_bits && !long_is_64_bits), but                     |  1459     7
   105       | * that's not possible at the moment. - Greg 2008/09/24 */                                       |  1460     7
   106       |typedef unsigned long   __size_t;               /* sizeof() */                                   |  1461     7
   107       |typedef __int64_t       __ssize_t;              /* byte count or error */                        |  1462     7
   108       |typedef __int64_t       __time_t;               /* time()... */                                  |  1463     7
   109       |typedef __uint64_t      __uintfptr_t;                                                            |  1464     7
   110       |typedef __int64_t       __intptr_t;                                                              |  1465     7
   111       |typedef __uint64_t      __uintptr_t;                                                             |  1466     7
   112       |typedef __uint64_t      __u_register_t;                                                          |  1467     7
   113       |typedef __uint64_t      __vm_offset_t;                                                           |  1468     7
   114       |typedef __uint64_t      __vm_size_t;                                                             |  1469     7
   115       |#else /* !__SYSC_64_BIT__: */                                                                    |  1470     7
   116       |typedef __int32_t       __ptrdiff_t;            /* ptr1 - ptr2 */                                |  1471     7
   117       |typedef __int32_t       __register_t;                                                            |  1472     7
   118       |typedef __int32_t       __segsz_t;              /* segment size (in pages) */                    |  1473     7
   119       |typedef __uint32_t      __size_t;               /* sizeof() */                                   |  1474     7
   120       |typedef __int32_t       __ssize_t;              /* byte count or error */                        |  1475     7
   121       |typedef __int64_t       __time_t;               /* time()... */                                  |  1476     7
   122       |typedef __uint32_t      __uintfptr_t;                                                            |  1477     7
   123       |typedef __int32_t       __intptr_t;                                                              |  1478     7
   124       |typedef __uint32_t      __uintptr_t;                                                             |  1479     7
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    30


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   125       |typedef __uint32_t      __u_register_t;                                                          |  1480     7
   126       |typedef __uint32_t      __vm_offset_t;                                                           |  1481     7
   127       |typedef __uint32_t      __vm_size_t;                                                             |  1482     7
   128       |#endif /* __SYSC_64_BIT__ */                                                                     |  1483     7
   129       |typedef __uint64_t      __uintmax_t;                                                             |  1484     7
   130       |typedef __uint32_t      __uint_fast8_t;                                                          |  1485     7
   131       |typedef __uint32_t      __uint_fast16_t;                                                         |  1486     7
   132       |typedef __uint32_t      __uint_fast32_t;                                                         |  1487     7
   133       |typedef __uint64_t      __uint_fast64_t;                                                         |  1488     7
   134       |typedef __uint8_t       __uint_least8_t;                                                         |  1489     7
   135       |typedef __uint16_t      __uint_least16_t;                                                        |  1490     7
   136       |typedef __uint32_t      __uint_least32_t;                                                        |  1491     7
   137       |typedef __uint64_t      __uint_least64_t;                                                        |  1492     7
   138       |typedef __int64_t       __vm_ooffset_t;                                                          |  1493     7
   139       |#if defined(PAE) || defined(__SYSC_64BIT__)                                                      |  1494     7
   140       |typedef __uint64_t      __vm_paddr_t;                                                            |  1495     7
   141       |#else                                                                                            |  1496     7
   142       |typedef __uint32_t      __vm_paddr_t;                                                            |  1497     7
   143       |#endif                                                                                           |  1498     7
   144       |typedef __uint64_t      __vm_pindex_t;                                                           |  1499     7
   145       |                                                                                                 |  1500     7
   146       |/*                                                                                               |  1501     7
   147       | * Unusual type definitions.                                                                     |  1502     7
   148       | */                                                                                              |  1503     7
   149       |#ifdef __GNUCLIKE_BUILTIN_VARARGS                                                                |  1504     7
   150       |typedef __builtin_va_list       __va_list;      /* internally known to gcc */                    |  1505     7
   151       |#else                                                                                            |  1506     7
   152       |typedef char *                  __va_list;                                                       |  1507     7
   153       |#endif /* __GNUCLIKE_BUILTIN_VARARGS */                                                          |  1508     7
   154       |#if defined(__GNUC_VA_LIST_COMPATIBILITY) && !defined(__GNUC_VA_LIST) \                          |  1509     7
   155       |    && !defined(__NO_GNUC_VA_LIST)                                                               |  1510     7
   156       |#define __GNUC_VA_LIST                                                                           |  1511     7
   157       |typedef __va_list               __gnuc_va_list; /* compatibility w/GNU headers*/                 |  1512     7
   158       |#endif                                                                                           |  1513     7
   159       |                                                                                                 |  1514     7
   160       |#endif /* !_MACHINE__TYPES_H_ */                                                                 |  1515     7
   161       |#pragma pack(reset)                                                                              |  1516     7
    36       |                                                                                                 |  1517     6
    37       |/*                                                                                               |  1518     6
    38       | * Standard type definitions.                                                                    |  1519     6
    39       | */                                                                                              |  1520     6
    40       |typedef __int32_t       __blksize_t;    /* file block size */                                    |  1521     6
    41       |typedef __int64_t       __blkcnt_t;     /* file block count */                                   |  1522     6
    42       |typedef __int32_t       __clockid_t;    /* clock_gettime()... */                                 |  1523     6
    43       |typedef __uint32_t      __fflags_t;     /* file flags */                                         |  1524     6
    44       |typedef __uint64_t      __fsblkcnt_t;                                                            |  1525     6
    45       |typedef __uint64_t      __fsfilcnt_t;                                                            |  1526     6
    46       |typedef __uint32_t      __gid_t;                                                                 |  1527     6
    47       |typedef __int64_t       __id_t;         /* can hold a gid_t, pid_t, or uid_t */                  |  1528     6
    48       |typedef __uint32_t      __ino_t;        /* inode number */                                       |  1529     6
    49       |typedef long            __key_t;        /* IPC key (for Sys V IPC) */                            |  1530     6
    50       |typedef __int32_t       __lwpid_t;      /* Thread ID (a.k.a. LWP) */                             |  1531     6
    51       |typedef __uint16_t      __mode_t;       /* permissions */                                        |  1532     6
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    31


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    52       |typedef int             __nl_item;                                                               |  1533     6
    53       |typedef __uint16_t      __nlink_t;      /* link count */                                         |  1534     6
    54       |typedef __int64_t       __off_t;        /* file offset */                                        |  1535     6
    55       |typedef __int32_t       __pid_t;        /* process [group] */                                    |  1536     6
    56       |typedef __int64_t       __rlim_t;       /* resource limit - intentionally */                     |  1537     6
    57       |                                        /* signed, because of legacy code */                     |  1538     6
    58       |                                        /* that uses -1 for RLIM_INFINITY */                     |  1539     6
    59       |typedef __uint8_t       __sa_family_t;                                                           |  1540     6
    60       |typedef __uint32_t      __socklen_t;                                                             |  1541     6
    61       |typedef long            __suseconds_t;  /* microseconds (signed) */                              |  1542     6
    62       |typedef __int32_t       __timer_t;      /* timer_gettime()... */                                 |  1543     6
    63       |typedef __uint32_t      __uid_t;                                                                 |  1544     6
    64       |typedef unsigned int    __useconds_t;   /* microseconds (unsigned) */                            |  1545     6
    65       |                                                                                                 |  1546     6
    66       |/*                                                                                               |  1547     6
    67       | * Unusual type definitions.                                                                     |  1548     6
    68       | */                                                                                              |  1549     6
    69       |/*                                                                                               |  1550     6
    70       | * rune_t is declared to be an ``int'' instead of the more natural                               |  1551     6
    71       | * ``unsigned long'' or ``long''.  Two things are happening here.  It is not                     |  1552     6
    72       | * unsigned so that EOF (-1) can be naturally assigned to it and used.  Also,                    |  1553     6
    73       | * it looks like 10646 will be a 31 bit standard.  This means that if your                       |  1554     6
    74       | * ints cannot hold 32 bits, you will be in trouble.  The reason an int was                      |  1555     6
    75       | * chosen over a long is that the is*() and to*() routines take ints (says                       |  1556     6
    76       | * ANSI C), but they use __ct_rune_t instead of int.                                             |  1557     6
    77       | *                                                                                               |  1558     6
    78       | * NOTE: rune_t is not covered by ANSI nor other standards, and should not                       |  1559     6
    79       | * be instantiated outside of lib/libc/locale.  Use wchar_t.  wchar_t and                        |  1560     6
    80       | * rune_t must be the same type.  Also, wint_t must be no narrower than                          |  1561     6
    81       | * wchar_t, and should be able to hold all members of the largest                                |  1562     6
    82       | * character set plus one extra value (WEOF), and must be at least 16 bits.                      |  1563     6
    83       | */                                                                                              |  1564     6
    84       |#ifdef __cplusplus                                                                               |  1565     6
    85       |/* DCXX provides a builtin definition of wchar_t as a keyword, and it matters                    |  1566     6
    86       | * for parameter type matching even though it's the same type (4-byte signed) */                 |  1567     6
    87       |typedef wchar_t         __ct_rune_t;    /* arg type for ctype funcs */                           |  1568     6
    88       |#else                                                                                            |  1569     6
    89       |typedef int             __ct_rune_t;    /* arg type for ctype funcs */                           |  1570     6
    90       |#endif                                                                                           |  1571     6
    91       |typedef __ct_rune_t     __rune_t;       /* rune_t (see above) */                                 |  1572     6
    92       |typedef __ct_rune_t     __wchar_t;      /* wchar_t (see above) */                                |  1573     6
    93       |typedef __ct_rune_t     __wint_t;       /* wint_t (see above) */                                 |  1574     6
    94       |                                                                                                 |  1575     6
    95       |/* In C++11, char16_t and char32_t are builtin types */                                          |  1576     6
    96       |#if defined(__cplusplus) && __cplusplus >= 201103L                                               |  1577     6
    97       |#define _CHAR16_T_DECLARED                                                                       |  1578     6
    98       |#define _CHAR32_T_DECLARED                                                                       |  1579     6
    99       |#endif                                                                                           |  1580     6
   100       |                                                                                                 |  1581     6
   101       |#if !defined(__cplusplus)                                                                        |  1582     6
   102       |typedef __uint_least16_t __char16_t;                                                             |  1583     6
   103       |typedef __uint_least32_t __char32_t;                                                             |  1584     6
   104       |#endif                                                                                           |  1585     6
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    32


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   105       |                                                                                                 |  1586     6
   106       |                                                                                                 |  1587     6
   107       |typedef __uint32_t      __dev_t;        /* device number */                                      |  1588     6
   108       |                                                                                                 |  1589     6
   109       |typedef __uint32_t      __fixpt_t;      /* fixed point number */                                 |  1590     6
   110       |                                                                                                 |  1591     6
   111       |/*                                                                                               |  1592     6
   112       | * mbstate_t is an opaque object to keep conversion state during multibyte                       |  1593     6
   113       | * stream conversions.                                                                           |  1594     6
   114       | */                                                                                              |  1595     6
   115       |typedef union {                                                                                  |  1596     6
   116       |        char            __mbstate8[128];                                                         |  1597     6
   117       |        __int64_t       _mbstateL;      /* for alignment */                                      |  1598     6
   118       |} __mbstate_t;                                                                                   |  1599     6
   119       |                                                                                                 |  1600     6
   120       |#endif /* !_SYS__TYPES_H_ */                                                                     |  1601     6
   121       |#pragma pack(reset)                                                                              |  1602     6
    39       |                                                                                                 |  1603     5
    40       |#ifdef __cplusplus                                                                               |  1604     5
    41       |extern "C" {                                                                                     |  1605     5
    42       |#endif                                                                                           |  1606     5
    43       |                                                                                                 |  1607     5
    44       |/*                                                                                               |  1608     5
    45       | * Define the order of 32-bit words in 64-bit words.                                             |  1609     5
    46       | */                                                                                              |  1610     5
    47       |#define _QUAD_HIGHWORD 1                                                                         |  1611     5
    48       |#define _QUAD_LOWWORD 0                                                                          |  1612     5
    49       |                                                                                                 |  1613     5
    50       |/*                                                                                               |  1614     5
    51       | * Definitions for byte order, according to byte significance from low                           |  1615     5
    52       | * address to high.                                                                              |  1616     5
    53       | */                                                                                              |  1617     5
    54       |#define _LITTLE_ENDIAN  1234    /* LSB first: i386, vax */                                       |  1618     5
    55       |#define _BIG_ENDIAN     4321    /* MSB first: 68000, ibm, net */                                 |  1619     5
    56       |#define _PDP_ENDIAN     3412    /* LSB first in word, MSW first in long */                       |  1620     5
    57       |                                                                                                 |  1621     5
    58       |#define _BYTE_ORDER     _BIG_ENDIAN                                                              |  1622     5
    59       |                                                                                                 |  1623     5
    60       |/*                                                                                               |  1624     5
    61       | * Deprecated variants that don't have enough underscores to be useful in more                   |  1625     5
    62       | * strict namespaces.                                                                            |  1626     5
    63       | */                                                                                              |  1627     5
    64       |#if __BSD_VISIBLE                                                                                |  1628     5
    65       |#define LITTLE_ENDIAN   _LITTLE_ENDIAN                                                           |  1629     5
    66       |#define BIG_ENDIAN      _BIG_ENDIAN                                                              |  1630     5
    67       |#define PDP_ENDIAN      _PDP_ENDIAN                                                              |  1631     5
    68       |#define BYTE_ORDER      _BYTE_ORDER                                                              |  1632     5
    69       |#endif                                                                                           |  1633     5
    70       |                                                                                                 |  1634     5
    70       +                                                                                                 +  1634     5
    71       |/*                                                                                               |  1635     5
    72       | * The mainframe architecture is in "network" order, so there                                    |  1636     5
    73       | * is nothing for these macros to do.                                                            |  1637     5
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    33


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    74       | */                                                                                              |  1638     5
    75       |#define __htonl(x)      (x)                                                                      |  1639     5
    76       |#define __htons(x)      (x)                                                                      |  1640     5
    77       |#define __ntohl(x)      (x)                                                                      |  1641     5
    78       |#define __ntohs(x)      (x)                                                                      |  1642     5
    79       |                                                                                                 |  1643     5
    80       |#ifdef __cplusplus                                                                               |  1644     5
    81       |}                                                                                                |  1645     5
    82       |#endif                                                                                           |  1646     5
    83       |                                                                                                 |  1647     5
    84       |#endif /* !_MACHINE_ENDIAN_H_ */                                                                 |  1648     5
    85       |#pragma pack(reset)                                                                              |  1649     5
    47       |#include <sys/_types.h>                                                                          |  1650     3
     1       |/* release 2.25.00 */                                                                            |  1651     6
     2       |#pragma pack()                                                                                   |  1652     6
     3       |/*-                                                                                              |  1653     6
     4       | * Copyright (c) 2002 Mike Barcroft <mike@FreeBSD.org>                                           |  1654     6
     5       | * All rights reserved.                                                                          |  1655     6
     6       | *                                                                                               |  1656     6
     7       | * Redistribution and use in source and binary forms, with or without                            |  1657     6
     8       | * modification, are permitted provided that the following conditions                            |  1658     6
     9       | * are met:                                                                                      |  1659     6
    10       | * 1. Redistributions of source code must retain the above copyright                             |  1660     6
    11       | *    notice, this list of conditions and the following disclaimer.                              |  1661     6
    12       | * 2. Redistributions in binary form must reproduce the above copyright                          |  1662     6
    13       | *    notice, this list of conditions and the following disclaimer in the                        |  1663     6
    14       | *    documentation and/or other materials provided with the distribution.                       |  1664     6
    15       | *                                                                                               |  1665     6
    16       | * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND                        |  1666     6
    17       | * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE                         |  1667     6
    18       | * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE                    |  1668     6
    19       | * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE                       |  1669     6
    20       | * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL                    |  1670     6
    21       | * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS                       |  1671     6
    22       | * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)                         |  1672     6
    23       | * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT                    |  1673     6
    24       | * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY                     |  1674     6
    25       | * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF                        |  1675     6
    26       | * SUCH DAMAGE.                                                                                  |  1676     6
    27       | *                                                                                               |  1677     6
    28       | * $FreeBSD: src/sys/sys/_types.h,v 1.21 2005/03/22 01:19:17 das Exp $                           |  1678     6
    29       | */                                                                                              |  1679     6
    30       |                                                                                                 |  1680     6
    31       |#ifndef _SYS__TYPES_H_                                                                           |  1681     6
    32       |#define _SYS__TYPES_H_                                                                           |  1682     6
    33       |                                                                                                 |  1683     6
    34       |#include <sys/cdefs.h>                                                                           |  1684     6
    35       |#include <machine/_types.h>                                                                      |  1685     6
    36       |                                                                                                 |  1686     6
    37       |/*                                                                                               |  1687     6
    38       | * Standard type definitions.                                                                    |  1688     6
    39       | */                                                                                              |  1689     6
    40       |typedef __int32_t       __blksize_t;    /* file block size */                                    |  1690     6
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    34


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    41       |typedef __int64_t       __blkcnt_t;     /* file block count */                                   |  1691     6
    42       |typedef __int32_t       __clockid_t;    /* clock_gettime()... */                                 |  1692     6
    43       |typedef __uint32_t      __fflags_t;     /* file flags */                                         |  1693     6
    44       |typedef __uint64_t      __fsblkcnt_t;                                                            |  1694     6
    45       |typedef __uint64_t      __fsfilcnt_t;                                                            |  1695     6
    46       |typedef __uint32_t      __gid_t;                                                                 |  1696     6
    47       |typedef __int64_t       __id_t;         /* can hold a gid_t, pid_t, or uid_t */                  |  1697     6
    48       |typedef __uint32_t      __ino_t;        /* inode number */                                       |  1698     6
    49       |typedef long            __key_t;        /* IPC key (for Sys V IPC) */                            |  1699     6
    50       |typedef __int32_t       __lwpid_t;      /* Thread ID (a.k.a. LWP) */                             |  1700     6
    51       |typedef __uint16_t      __mode_t;       /* permissions */                                        |  1701     6
    52       |typedef int             __nl_item;                                                               |  1702     6
    53       |typedef __uint16_t      __nlink_t;      /* link count */                                         |  1703     6
    54       |typedef __int64_t       __off_t;        /* file offset */                                        |  1704     6
    55       |typedef __int32_t       __pid_t;        /* process [group] */                                    |  1705     6
    56       |typedef __int64_t       __rlim_t;       /* resource limit - intentionally */                     |  1706     6
    57       |                                        /* signed, because of legacy code */                     |  1707     6
    58       |                                        /* that uses -1 for RLIM_INFINITY */                     |  1708     6
    59       |typedef __uint8_t       __sa_family_t;                                                           |  1709     6
    60       |typedef __uint32_t      __socklen_t;                                                             |  1710     6
    61       |typedef long            __suseconds_t;  /* microseconds (signed) */                              |  1711     6
    62       |typedef __int32_t       __timer_t;      /* timer_gettime()... */                                 |  1712     6
    63       |typedef __uint32_t      __uid_t;                                                                 |  1713     6
    64       |typedef unsigned int    __useconds_t;   /* microseconds (unsigned) */                            |  1714     6
    65       |                                                                                                 |  1715     6
    66       |/*                                                                                               |  1716     6
    67       | * Unusual type definitions.                                                                     |  1717     6
    68       | */                                                                                              |  1718     6
    69       |/*                                                                                               |  1719     6
    70       | * rune_t is declared to be an ``int'' instead of the more natural                               |  1720     6
    71       | * ``unsigned long'' or ``long''.  Two things are happening here.  It is not                     |  1721     6
    72       | * unsigned so that EOF (-1) can be naturally assigned to it and used.  Also,                    |  1722     6
    73       | * it looks like 10646 will be a 31 bit standard.  This means that if your                       |  1723     6
    74       | * ints cannot hold 32 bits, you will be in trouble.  The reason an int was                      |  1724     6
    75       | * chosen over a long is that the is*() and to*() routines take ints (says                       |  1725     6
    76       | * ANSI C), but they use __ct_rune_t instead of int.                                             |  1726     6
    77       | *                                                                                               |  1727     6
    78       | * NOTE: rune_t is not covered by ANSI nor other standards, and should not                       |  1728     6
    79       | * be instantiated outside of lib/libc/locale.  Use wchar_t.  wchar_t and                        |  1729     6
    80       | * rune_t must be the same type.  Also, wint_t must be no narrower than                          |  1730     6
    81       | * wchar_t, and should be able to hold all members of the largest                                |  1731     6
    82       | * character set plus one extra value (WEOF), and must be at least 16 bits.                      |  1732     6
    83       | */                                                                                              |  1733     6
    84       |#ifdef __cplusplus                                                                               |  1734     6
    85       |/* DCXX provides a builtin definition of wchar_t as a keyword, and it matters                    |  1735     6
    86       | * for parameter type matching even though it's the same type (4-byte signed) */                 |  1736     6
    87       |typedef wchar_t         __ct_rune_t;    /* arg type for ctype funcs */                           |  1737     6
    88       |#else                                                                                            |  1738     6
    89       |typedef int             __ct_rune_t;    /* arg type for ctype funcs */                           |  1739     6
    90       |#endif                                                                                           |  1740     6
    91       |typedef __ct_rune_t     __rune_t;       /* rune_t (see above) */                                 |  1741     6
    92       |typedef __ct_rune_t     __wchar_t;      /* wchar_t (see above) */                                |  1742     6
    93       |typedef __ct_rune_t     __wint_t;       /* wint_t (see above) */                                 |  1743     6
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    35


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    94       |                                                                                                 |  1744     6
    95       |/* In C++11, char16_t and char32_t are builtin types */                                          |  1745     6
    96       |#if defined(__cplusplus) && __cplusplus >= 201103L                                               |  1746     6
    97       |#define _CHAR16_T_DECLARED                                                                       |  1747     6
    98       |#define _CHAR32_T_DECLARED                                                                       |  1748     6
    99       |#endif                                                                                           |  1749     6
   100       |                                                                                                 |  1750     6
   101       |#if !defined(__cplusplus)                                                                        |  1751     6
   102       |typedef __uint_least16_t __char16_t;                                                             |  1752     6
   103       |typedef __uint_least32_t __char32_t;                                                             |  1753     6
   104       |#endif                                                                                           |  1754     6
   105       |                                                                                                 |  1755     6
   106       |                                                                                                 |  1756     6
   107       |typedef __uint32_t      __dev_t;        /* device number */                                      |  1757     6
   108       |                                                                                                 |  1758     6
   109       |typedef __uint32_t      __fixpt_t;      /* fixed point number */                                 |  1759     6
   110       |                                                                                                 |  1760     6
   111       |/*                                                                                               |  1761     6
   112       | * mbstate_t is an opaque object to keep conversion state during multibyte                       |  1762     6
   113       | * stream conversions.                                                                           |  1763     6
   114       | */                                                                                              |  1764     6
   115       |typedef union {                                                                                  |  1765     6
   116       |        char            __mbstate8[128];                                                         |  1766     6
   117       |        __int64_t       _mbstateL;      /* for alignment */                                      |  1767     6
   118       |} __mbstate_t;                                                                                   |  1768     6
   119       |                                                                                                 |  1769     6
   120       |#endif /* !_SYS__TYPES_H_ */                                                                     |  1770     6
   121       |#pragma pack(reset)                                                                              |  1771     6
    48       |                                                                                                 |  1772     3
    49       |#include <sys/_pthreadtypes.h>                                                                   |  1773     3
     1       |/* release 2.25.00 */                                                                            |  1774     8
     2       |#pragma pack()                                                                                   |  1775     8
     3       |/*                                                                                               |  1776     8
     4       | * Copyright (c) 1993, 1994 by Chris Provenzano, proven@mit.edu                                  |  1777     8
     5       | * Copyright (c) 1995-1998 by John Birrell <jb@cimlogic.com.au>                                  |  1778     8
     6       | * All rights reserved.                                                                          |  1779     8
     7       | *                                                                                               |  1780     8
     8       | * Redistribution and use in source and binary forms, with or without                            |  1781     8
     9       | * modification, are permitted provided that the following conditions                            |  1782     8
    10       | * are met:                                                                                      |  1783     8
    11       | * 1. Redistributions of source code must retain the above copyright                             |  1784     8
    12       | *    notice, this list of conditions and the following disclaimer.                              |  1785     8
    13       | * 2. Redistributions in binary form must reproduce the above copyright                          |  1786     8
    14       | *    notice, this list of conditions and the following disclaimer in the                        |  1787     8
    15       | *    documentation and/or other materials provided with the distribution.                       |  1788     8
    16       | * 3. All advertising materials mentioning features or use of this software                      |  1789     8
    17       | *    must display the following acknowledgement:                                                |  1790     8
    18       | *  This product includes software developed by Chris Provenzano.                                |  1791     8
    19       | * 4. The name of Chris Provenzano may not be used to endorse or promote                         |  1792     8
    20       | *        products derived from this software without specific prior written                     |  1793     8
    21       | *        permission.                                                                            |  1794     8
    22       | *                                                                                               |  1795     8
    23       | * THIS SOFTWARE IS PROVIDED BY CHRIS PROVENZANO ``AS IS'' AND                                   |  1796     8
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    36


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    24       | * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE                         |  1797     8
    25       | * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE                    |  1798     8
    26       | * ARE DISCLAIMED.  IN NO EVENT SHALL CHRIS PROVENZANO BE LIABLE FOR ANY                         |  1799     8
    27       | * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES                    |  1800     8
    28       | * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR                            |  1801     8
    29       | * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER                    |  1802     8
    30       | * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT                            |  1803     8
    31       | * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY                     |  1804     8
    32       | * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF                        |  1805     8
    33       | * SUCH DAMAGE.                                                                                  |  1806     8
    34       | *                                                                                               |  1807     8
    35       | * $FreeBSD: src/sys/sys/_pthreadtypes.h,v 1.1 2005/05/31 15:18:17 rodrigc Exp $                 |  1808     8
    36       | */                                                                                              |  1809     8
    37       |                                                                                                 |  1810     8
    38       |#ifndef _SYS__PTHREADTYPES_H_                                                                    |  1811     8
    39       |#define _SYS__PTHREADTYPES_H_                                                                    |  1812     8
    40       |                                                                                                 |  1813     8
    41       |/*                                                                                               |  1814     8
    42       | * Forward structure definitions.                                                                |  1815     8
    43       | *                                                                                               |  1816     8
    44       | * These are mostly opaque to the user.                                                          |  1817     8
    45       | */                                                                                              |  1818     8
    46       |struct __pthread;                                                                                |  1819     8
    47       |struct pthread;                                                                                  |  1820     8
    48       |struct pthread_cond_attr;                                                                        |  1821     8
    49       |struct pthread_mutex_attr;                                                                       |  1822     8
    50       |struct pthread_once;                                                                             |  1823     8
    51       |struct pthread_rwlockattr;                                                                       |  1824     8
    52       |struct pthread_barrier_attr;                                                                     |  1825     8
    53       |struct pthread_spinlock;                                                                         |  1826     8
    54       |struct pthread_attr { union { int __i[16]; volatile int __vi[16];                                |  1827     8
    55       |                              unsigned long __s[8]; } __u; };                                    |  1828     8
    56       |struct pthread_mutex { union { int __i[10]; volatile int __vi[10];                               |  1829     8
    57       |                               volatile void *volatile __p[5]; } __u; };                         |  1830     8
    58       |struct pthread_cond { union { int __i[12]; volatile int __vi[12];                                |  1831     8
    59       |                              void *__p[6]; } __u; };                                            |  1832     8
    60       |struct pthread_rwlock { union { int __i[14]; volatile int __vi[14];                              |  1833     8
    61       |                                void *__p[7]; } __u; };                                          |  1834     8
    62       |struct pthread_barrier { union { int __i[8]; volatile int __vi[8];                               |  1835     8
    63       |                                 void *__p[4]; } __u; };                                         |  1836     8
    64       |                                                                                                 |  1837     8
    65       |                                                                                                 |  1838     8
    66       |/*                                                                                               |  1839     8
    67       | * Primitive system data type definitions required by P1003.1c.                                  |  1840     8
    68       | *                                                                                               |  1841     8
    69       | * Note that P1003.1c specifies that there are no defined comparison                             |  1842     8
    70       | * or assignment operators for the types pthread_attr_t, pthread_cond_t,                         |  1843     8
    71       | * pthread_condattr_t, pthread_mutex_t, pthread_mutexattr_t.                                     |  1844     8
    72       | */                                                                                              |  1845     8
    73       |#ifndef _PTHREAD_T_DECLARED                                                                      |  1846     8
    74       |typedef struct __pthread                        *pthread_t;                                      |  1847     8
    75       |#define _PTHREAD_T_DECLARED                                                                      |  1848     8
    76       |#endif                                                                                           |  1849     8
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    37


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    77       |typedef struct  pthread_attr            pthread_attr_t;                                          |  1850     8
    78       |typedef struct  pthread_mutex           pthread_mutex_t;                                         |  1851     8
    79       |typedef struct { unsigned __attr; }     pthread_mutexattr_t;                                     |  1852     8
    80       |typedef struct  pthread_cond            pthread_cond_t;                                          |  1853     8
    81       |typedef struct { unsigned __attr; }     pthread_condattr_t;                                      |  1854     8
    82       |typedef unsigned int                    pthread_key_t;                                           |  1855     8
    83       |typedef int                             pthread_once_t;                                          |  1856     8
    84       |typedef struct { union { int __i[14]; volatile int __vi[14];                                     |  1857     8
    85       |                         void *__p[7]; } __u; } pthread_rwlock_t;                                |  1858     8
    86       |typedef struct { unsigned __attr[2]; }  pthread_rwlockattr_t;                                    |  1859     8
    87       |typedef struct pthread_barrier          pthread_barrier_t;                                       |  1860     8
    88       |typedef struct { unsigned __attr; }     pthread_barrierattr_t;                                   |  1861     8
    89       |typedef int                             pthread_spinlock_t;                                      |  1862     8
    90       |                                                                                                 |  1863     8
    91       |/*                                                                                               |  1864     8
    92       | * Additional type definitions:                                                                  |  1865     8
    93       | *                                                                                               |  1866     8
    94       | * Note that P1003.1c reserves the prefixes pthread_ and PTHREAD_ for                            |  1867     8
    95       | * use in header symbols.                                                                        |  1868     8
    96       | */                                                                                              |  1869     8
    97       |typedef void    *pthread_addr_t;                                                                 |  1870     8
    98       |typedef void    *(*pthread_startroutine_t)(void *);                                              |  1871     8
    99       |                                                                                                 |  1872     8
   100       |#endif /* ! _SYS__PTHREADTYPES_H_ */                                                             |  1873     8
   101       |#pragma pack(reset)                                                                              |  1874     8
    50       |                                                                                                 |  1875     3
    51       |#if __BSD_VISIBLE                                                                                |  1876     3
    52       |typedef unsigned char   u_char;                                                                  |  1877     3
    52       +typedef unsigned char   u_char;                                                                  +  1877     3
    53       |typedef unsigned short  u_short;                                                                 |  1878     3
    54       |typedef unsigned int    u_int;                                                                   |  1879     3
    55       |typedef unsigned long   u_long;                                                                  |  1880     3
    56       |#ifndef _KERNEL                                                                                  |  1881     3
    57       |typedef unsigned short  ushort;         /* Sys V compatibility */                                |  1882     3
    58       |typedef unsigned int    uint;           /* Sys V compatibility */                                |  1883     3
    59       |#endif                                                                                           |  1884     3
    60       |#endif                                                                                           |  1885     3
    61       |                                                                                                 |  1886     3
    62       |/*                                                                                               |  1887     3
    63       | * XXX POSIX sized integrals that should appear only in <sys/stdint.h>.                          |  1888     3
    64       | */                                                                                              |  1889     3
    65       |#ifndef _INT8_T_DECLARED                                                                         |  1890     3
    66       |typedef __int8_t        int8_t;                                                                  |  1891     3
    67       |#define _INT8_T_DECLARED                                                                         |  1892     3
    68       |#endif                                                                                           |  1893     3
    69       |                                                                                                 |  1894     3
    70       |#ifndef _INT16_T_DECLARED                                                                        |  1895     3
    71       |typedef __int16_t       int16_t;                                                                 |  1896     3
    72       |#define _INT16_T_DECLARED                                                                        |  1897     3
    73       |#endif                                                                                           |  1898     3
    74       |                                                                                                 |  1899     3
    75       |#ifndef _INT32_T_DECLARED                                                                        |  1900     3
    76       |typedef __int32_t       int32_t;                                                                 |  1901     3
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    38


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    77       |#define _INT32_T_DECLARED                                                                        |  1902     3
    78       |#endif                                                                                           |  1903     3
    79       |                                                                                                 |  1904     3
    80       |#ifndef _INT64_T_DECLARED                                                                        |  1905     3
    81       |typedef __int64_t       int64_t;                                                                 |  1906     3
    82       |#define _INT64_T_DECLARED                                                                        |  1907     3
    83       |#endif                                                                                           |  1908     3
    84       |                                                                                                 |  1909     3
    85       |#ifndef _UINT8_T_DECLARED                                                                        |  1910     3
    86       |typedef __uint8_t       uint8_t;                                                                 |  1911     3
    87       |#define _UINT8_T_DECLARED                                                                        |  1912     3
    88       |#endif                                                                                           |  1913     3
    89       |                                                                                                 |  1914     3
    90       |#ifndef _UINT16_T_DECLARED                                                                       |  1915     3
    91       |typedef __uint16_t      uint16_t;                                                                |  1916     3
    92       |#define _UINT16_T_DECLARED                                                                       |  1917     3
    93       |#endif                                                                                           |  1918     3
    94       |                                                                                                 |  1919     3
    95       |#ifndef _UINT32_T_DECLARED                                                                       |  1920     3
    96       |typedef __uint32_t      uint32_t;                                                                |  1921     3
    97       |#define _UINT32_T_DECLARED                                                                       |  1922     3
    98       |#endif                                                                                           |  1923     3
    99       |                                                                                                 |  1924     3
   100       |#ifndef _UINT64_T_DECLARED                                                                       |  1925     3
   101       |typedef __uint64_t      uint64_t;                                                                |  1926     3
   102       |#define _UINT64_T_DECLARED                                                                       |  1927     3
   103       |#endif                                                                                           |  1928     3
   104       |                                                                                                 |  1929     3
   105       |#ifndef _INTPTR_T_DECLARED                                                                       |  1930     3
   106       |typedef __intptr_t      intptr_t;                                                                |  1931     3
   107       |typedef __uintptr_t     uintptr_t;                                                               |  1932     3
   108       |#define _INTPTR_T_DECLARED                                                                       |  1933     3
   109       |#endif                                                                                           |  1934     3
   110       |                                                                                                 |  1935     3
   111       |typedef __uint8_t       u_int8_t;       /* unsigned integrals (deprecated) */                    |  1936     3
   112       |typedef __uint16_t      u_int16_t;                                                               |  1937     3
   113       |typedef __uint32_t      u_int32_t;                                                               |  1938     3
   114       |typedef __uint64_t      u_int64_t;                                                               |  1939     3
   115       |                                                                                                 |  1940     3
   116       |typedef __uint64_t      u_quad_t;       /* quads (deprecated) */                                 |  1941     3
   117       |typedef __int64_t       quad_t;                                                                  |  1942     3
   118       |typedef quad_t *        qaddr_t;                                                                 |  1943     3
   119       |                                                                                                 |  1944     3
   120       |typedef char *          caddr_t;        /* core address */                                       |  1945     3
   121       |typedef __const char *  c_caddr_t;      /* core address, pointer to const */                     |  1946     3
   121       +typedef const char *    c_caddr_t;                                                               +  1946     3
   122       |typedef __volatile char *v_caddr_t;     /* core address, pointer to volatile */                  |  1947     3
   122       +typedef volatile char *v_caddr_t;                                                                +  1947     3
   123       |                                                                                                 |  1948     3
   124       |#ifndef _BLKSIZE_T_DECLARED                                                                      |  1949     3
   125       |typedef __blksize_t     blksize_t;                                                               |  1950     3
   126       |#define _BLKSIZE_T_DECLARED                                                                      |  1951     3
   127       |#endif                                                                                           |  1952     3
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    39


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   128       |                                                                                                 |  1953     3
   129       |#ifndef _BLKCNT_T_DECLARED                                                                       |  1954     3
   130       |typedef __blkcnt_t      blkcnt_t;                                                                |  1955     3
   131       |#define _BLKCNT_T_DECLARED                                                                       |  1956     3
   132       |#endif                                                                                           |  1957     3
   133       |                                                                                                 |  1958     3
   134       |#ifndef _CLOCK_T_DECLARED                                                                        |  1959     3
   135       |typedef __clock_t       clock_t;                                                                 |  1960     3
   136       |#define _CLOCK_T_DECLARED                                                                        |  1961     3
   137       |#endif                                                                                           |  1962     3
   138       |                                                                                                 |  1963     3
   139       |#ifndef _CLOCKID_T_DECLARED                                                                      |  1964     3
   140       |typedef __clockid_t     clockid_t;                                                               |  1965     3
   141       |#define _CLOCKID_T_DECLARED                                                                      |  1966     3
   142       |#endif                                                                                           |  1967     3
   143       |                                                                                                 |  1968     3
   144       |typedef __critical_t    critical_t;     /* Critical section value */                             |  1969     3
   145       |typedef __int64_t       daddr_t;        /* disk address */                                       |  1970     3
   146       |                                                                                                 |  1971     3
   147       |#ifndef _DEV_T_DECLARED                                                                          |  1972     3
   148       |typedef __dev_t         dev_t;          /* device number or struct cdev */                       |  1973     3
   149       |#define _DEV_T_DECLARED                                                                          |  1974     3
   150       |#endif                                                                                           |  1975     3
   151       |                                                                                                 |  1976     3
   152       |#ifndef _FFLAGS_T_DECLARED                                                                       |  1977     3
   153       |typedef __fflags_t      fflags_t;       /* file flags */                                         |  1978     3
   154       |#define _FFLAGS_T_DECLARED                                                                       |  1979     3
   155       |#endif                                                                                           |  1980     3
   156       |                                                                                                 |  1981     3
   157       |typedef __fixpt_t       fixpt_t;        /* fixed point number */                                 |  1982     3
   158       |                                                                                                 |  1983     3
   159       |#ifndef _FSBLKCNT_T_DECLARED            /* for statvfs() */                                      |  1984     3
   160       |typedef __fsblkcnt_t    fsblkcnt_t;                                                              |  1985     3
   161       |typedef __fsfilcnt_t    fsfilcnt_t;                                                              |  1986     3
   162       |#define _FSBLKCNT_T_DECLARED                                                                     |  1987     3
   163       |#endif                                                                                           |  1988     3
   164       |                                                                                                 |  1989     3
   165       |#ifndef _GID_T_DECLARED                                                                          |  1990     3
   166       |typedef __gid_t         gid_t;          /* group id */                                           |  1991     3
   167       |#define _GID_T_DECLARED                                                                          |  1992     3
   168       |#endif                                                                                           |  1993     3
   169       |                                                                                                 |  1994     3
   170       |#ifndef _IN_ADDR_T_DECLARED                                                                      |  1995     3
   171       |typedef __uint32_t      in_addr_t;      /* base type for internet address */                     |  1996     3
   172       |#define _IN_ADDR_T_DECLARED                                                                      |  1997     3
   173       |#endif                                                                                           |  1998     3
   174       |                                                                                                 |  1999     3
   175       |#ifndef _IN_PORT_T_DECLARED                                                                      |  2000     3
   176       |typedef __uint16_t      in_port_t;                                                               |  2001     3
   177       |#define _IN_PORT_T_DECLARED                                                                      |  2002     3
   178       |#endif                                                                                           |  2003     3
   179       |                                                                                                 |  2004     3
   180       |#ifndef _ID_T_DECLARED                                                                           |  2005     3
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    40


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   181       |typedef __id_t          id_t;           /* can hold a uid_t or pid_t */                          |  2006     3
   182       |#define _ID_T_DECLARED                                                                           |  2007     3
   183       |#endif                                                                                           |  2008     3
   184       |                                                                                                 |  2009     3
   185       |#ifndef _INO_T_DECLARED                                                                          |  2010     3
   186       |typedef __ino_t         ino_t;          /* inode number */                                       |  2011     3
   187       |#define _INO_T_DECLARED                                                                          |  2012     3
   188       |#endif                                                                                           |  2013     3
   189       |                                                                                                 |  2014     3
   190       |#ifndef _KEY_T_DECLARED                                                                          |  2015     3
   191       |typedef __key_t         key_t;          /* IPC key (for Sys V IPC) */                            |  2016     3
   192       |#define _KEY_T_DECLARED                                                                          |  2017     3
   193       |#endif                                                                                           |  2018     3
   194       |                                                                                                 |  2019     3
   195       |#ifndef _LWPID_T_DECLARED                                                                        |  2020     3
   196       |typedef __lwpid_t       lwpid_t;        /* Thread ID (a.k.a. LWP) */                             |  2021     3
   197       |#define _LWPID_T_DECLARED                                                                        |  2022     3
   198       |#endif                                                                                           |  2023     3
   199       |                                                                                                 |  2024     3
   200       |#ifndef _MODE_T_DECLARED                                                                         |  2025     3
   201       |typedef __mode_t        mode_t;         /* permissions */                                        |  2026     3
   202       |#define _MODE_T_DECLARED                                                                         |  2027     3
   203       |#endif                                                                                           |  2028     3
   204       |                                                                                                 |  2029     3
   205       |#ifndef _NLINK_T_DECLARED                                                                        |  2030     3
   206       |typedef __nlink_t       nlink_t;        /* link count */                                         |  2031     3
   207       |#define _NLINK_T_DECLARED                                                                        |  2032     3
   208       |#endif                                                                                           |  2033     3
   209       |                                                                                                 |  2034     3
   210       |#ifndef _OFF_T_DECLARED                                                                          |  2035     3
   211       |typedef __off_t         off_t;          /* file offset */                                        |  2036     3
   212       |#define _OFF_T_DECLARED                                                                          |  2037     3
   213       |#endif                                                                                           |  2038     3
   214       |                                                                                                 |  2039     3
   215       |#ifndef _PID_T_DECLARED                                                                          |  2040     3
   216       |typedef __pid_t         pid_t;          /* process id */                                         |  2041     3
   217       |#define _PID_T_DECLARED                                                                          |  2042     3
   218       |#endif                                                                                           |  2043     3
   219       |                                                                                                 |  2044     3
   220       |typedef __register_t    register_t;                                                              |  2045     3
   221       |                                                                                                 |  2046     3
   222       |#ifndef _RLIM_T_DECLARED                                                                         |  2047     3
   223       |typedef __rlim_t        rlim_t;         /* resource limit */                                     |  2048     3
   224       |#define _RLIM_T_DECLARED                                                                         |  2049     3
   225       |#endif                                                                                           |  2050     3
   226       |                                                                                                 |  2051     3
   227       |typedef __segsz_t       segsz_t;        /* segment size (in pages) */                            |  2052     3
   228       |                                                                                                 |  2053     3
   229       |#ifndef _SIZE_T_DECLARED                                                                         |  2054     3
   230       |typedef __size_t        size_t;                                                                  |  2055     3
   231       |#define _SIZE_T_DECLARED                                                                         |  2056     3
   232       |#endif                                                                                           |  2057     3
   233       |                                                                                                 |  2058     3
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    41


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   234       |#ifndef _SSIZE_T_DECLARED                                                                        |  2059     3
   235       |typedef __ssize_t       ssize_t;                                                                 |  2060     3
   236       |#define _SSIZE_T_DECLARED                                                                        |  2061     3
   237       |#endif                                                                                           |  2062     3
   238       |                                                                                                 |  2063     3
   239       |#ifndef _SUSECONDS_T_DECLARED                                                                    |  2064     3
   240       |typedef __suseconds_t   suseconds_t;    /* microseconds (signed) */                              |  2065     3
   241       |#define _SUSECONDS_T_DECLARED                                                                    |  2066     3
   242       |#endif                                                                                           |  2067     3
   243       |                                                                                                 |  2068     3
   244       |#ifndef _TIME_T_DECLARED                                                                         |  2069     3
   245       |typedef __time_t        time_t;                                                                  |  2070     3
   246       |#define _TIME_T_DECLARED                                                                         |  2071     3
   247       |#endif                                                                                           |  2072     3
   248       |                                                                                                 |  2073     3
   249       |#ifndef _TIMER_T_DECLARED                                                                        |  2074     3
   250       |typedef __timer_t       timer_t;                                                                 |  2075     3
   251       |#define _TIMER_T_DECLARED                                                                        |  2076     3
   252       |#endif                                                                                           |  2077     3
   253       |                                                                                                 |  2078     3
   254       |typedef __u_register_t  u_register_t;                                                            |  2079     3
   255       |                                                                                                 |  2080     3
   256       |#ifndef _UID_T_DECLARED                                                                          |  2081     3
   257       |typedef __uid_t         uid_t;          /* user id */                                            |  2082     3
   258       |#define _UID_T_DECLARED                                                                          |  2083     3
   259       |#endif                                                                                           |  2084     3
   260       |                                                                                                 |  2085     3
   261       |#ifndef _USECONDS_T_DECLARED                                                                     |  2086     3
   262       |typedef __useconds_t    useconds_t;     /* microseconds (unsigned) */                            |  2087     3
   263       |#define _USECONDS_T_DECLARED                                                                     |  2088     3
   264       |#endif                                                                                           |  2089     3
   265       |                                                                                                 |  2090     3
   266       |typedef __vm_offset_t   vm_offset_t;                                                             |  2091     3
   267       |typedef __vm_ooffset_t  vm_ooffset_t;                                                            |  2092     3
   268       |typedef __vm_paddr_t    vm_paddr_t;                                                              |  2093     3
   269       |typedef __vm_pindex_t   vm_pindex_t;                                                             |  2094     3
   270       |typedef __vm_size_t     vm_size_t;                                                               |  2095     3
   271       |                                                                                                 |  2096     3
   272       |#ifdef _KERNEL                                                                                   |  2097     3
   273       |typedef int             boolean_t;                                                               |  2098     3
   274       |typedef __cpumask_t     cpumask_t;                                                               |  2099     3
   275       |typedef __intfptr_t     intfptr_t;                                                               |  2100     3
   276       |                                                                                                 |  2101     3
   277       |/*-                                                                                              |  2102     3
   278       | * XXX this is fixed width for historical reasons.  It should have had type                      |  2103     3
   279       | * __int_fast32_t.  Fixed-width types should not be used unless binary                           |  2104     3
   280       | * compatibility is essential.  Least-width types should be used even less                       |  2105     3
   281       | * since they provide smaller benefits.                                                          |  2106     3
   282       | * XXX should be MD.                                                                             |  2107     3
   283       | * XXX this is bogus in -current, but still used for spl*().                                     |  2108     3
   284       | */                                                                                              |  2109     3
   285       |typedef __uint32_t      intrmask_t;     /* Interrupt mask (spl, xxx_imask...) */                 |  2110     3
   286       |                                                                                                 |  2111     3
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    42


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   287       |typedef __uintfptr_t    uintfptr_t;                                                              |  2112     3
   288       |typedef __uint64_t      uoff_t;                                                                  |  2113     3
   289       |typedef struct vm_page  *vm_page_t;                                                              |  2114     3
   290       |                                                                                                 |  2115     3
   291       |#define offsetof(type, field) __offsetof(type, field)                                            |  2116     3
   292       |                                                                                                 |  2117     3
   293       |#endif /* !_KERNEL */                                                                            |  2118     3
   294       |                                                                                                 |  2119     3
   295       |/*                                                                                               |  2120     3
   296       | * The following are all things that really shouldn't exist in this header,                      |  2121     3
   297       | * since its purpose is to provide typedefs, not miscellaneous doodads.                          |  2122     3
   298       | */                                                                                              |  2123     3
   299       |#if __BSD_VISIBLE                                                                                |  2124     3
   300       |                                                                                                 |  2125     3
   300       +                                                                                                 +  2125     3
   301       |#include <sys/select.h>                                                                          |  2126     3
     1       |/* release 2.25.00 */                                                                            |  2127     9
     2       |#pragma pack()                                                                                   |  2128     9
     3       |/*-                                                                                              |  2129     9
     4       | * Copyright (c) 1992, 1993                                                                      |  2130     9
     5       | *      The Regents of the University of California.  All rights reserved.                       |  2131     9
     6       | *                                                                                               |  2132     9
     7       | * Redistribution and use in source and binary forms, with or without                            |  2133     9
     8       | * modification, are permitted provided that the following conditions                            |  2134     9
     9       | * are met:                                                                                      |  2135     9
    10       | * 1. Redistributions of source code must retain the above copyright                             |  2136     9
    11       | *    notice, this list of conditions and the following disclaimer.                              |  2137     9
    12       | * 2. Redistributions in binary form must reproduce the above copyright                          |  2138     9
    13       | *    notice, this list of conditions and the following disclaimer in the                        |  2139     9
    14       | *    documentation and/or other materials provided with the distribution.                       |  2140     9
    15       | * 4. Neither the name of the University nor the names of its contributors                       |  2141     9
    16       | *    may be used to endorse or promote products derived from this software                      |  2142     9
    17       | *    without specific prior written permission.                                                 |  2143     9
    18       | *                                                                                               |  2144     9
    19       | * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND                       |  2145     9
    20       | * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE                         |  2146     9
    21       | * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE                    |  2147     9
    22       | * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE                      |  2148     9
    23       | * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL                    |  2149     9
    24       | * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS                       |  2150     9
    25       | * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)                         |  2151     9
    26       | * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT                    |  2152     9
    27       | * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY                     |  2153     9
    28       | * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF                        |  2154     9
    29       | * SUCH DAMAGE.                                                                                  |  2155     9
    30       | *                                                                                               |  2156     9
    31       | * $FreeBSD: src/sys/sys/select.h,v 1.19.8.1 2006/01/13 03:11:16 marcel Exp $                    |  2157     9
    32       | */                                                                                              |  2158     9
    33       |                                                                                                 |  2159     9
    34       |#ifndef _SYS_SELECT_H_                                                                           |  2160     9
    35       |#define _SYS_SELECT_H_                                                                           |  2161     9
    36       |                                                                                                 |  2162     9
    37       |#include <sys/cdefs.h>                                                                           |  2163     9
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    43


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
     1       |/* release 2.25.00 */                                                                            |  2164     4
     2       |#pragma pack()                                                                                   |  2165     4
     3       |/*                                                                                               |  2166     4
     4       | * Copyright (c) 1991, 1993                                                                      |  2167     4
     5       | *      The Regents of the University of California.  All rights reserved.                       |  2168     4
     6       | *                                                                                               |  2169     4
     7       | * This code is derived from software contributed to Berkeley by                                 |  2170     4
     8       | * Berkeley Software Design, Inc.                                                                |  2171     4
     9       | *                                                                                               |  2172     4
    10       | * Redistribution and use in source and binary forms, with or without                            |  2173     4
    11       | * modification, are permitted provided that the following conditions                            |  2174     4
    12       | * are met:                                                                                      |  2175     4
    13       | * 1. Redistributions of source code must retain the above copyright                             |  2176     4
    14       | *    notice, this list of conditions and the following disclaimer.                              |  2177     4
    15       | * 2. Redistributions in binary form must reproduce the above copyright                          |  2178     4
    16       | *    notice, this list of conditions and the following disclaimer in the                        |  2179     4
    17       | *    documentation and/or other materials provided with the distribution.                       |  2180     4
    18       | * 3. All advertising materials mentioning features or use of this software                      |  2181     4
    19       | *    must display the following acknowledgement:                                                |  2182     4
    20       | *      This product includes software developed by the University of                            |  2183     4
    21       | *      California, Berkeley and its contributors.                                               |  2184     4
    22       | * 4. Neither the name of the University nor the names of its contributors                       |  2185     4
    23       | *    may be used to endorse or promote products derived from this software                      |  2186     4
    24       | *    without specific prior written permission.                                                 |  2187     4
    25       | *                                                                                               |  2188     4
    26       | * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND                       |  2189     4
    27       | * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE                         |  2190     4
    28       | * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE                    |  2191     4
    29       | * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE                      |  2192     4
    30       | * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL                    |  2193     4
    31       | * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS                       |  2194     4
    32       | * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)                         |  2195     4
    33       | * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT                    |  2196     4
    34       | * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY                     |  2197     4
    35       | * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF                        |  2198     4
    36       | * SUCH DAMAGE.                                                                                  |  2199     4
    37       | *                                                                                               |  2200     4
    38       | *      @(#)cdefs.h     8.8 (Berkeley) 1/9/95                                                    |  2201     4
    39       | */                                                                                              |  2202     4
    40       |                                                                                                 |  2203     4
    41       |#ifndef _SYS_CDEFS_H_                                                                            |  2204     4
    42       |#define _SYS_CDEFS_H_                                                                            |  2205     4
    43       |                                                                                                 |  2206     4
    44       |#if defined(__cplusplus)                                                                         |  2207     4
    45       |#define __BEGIN_DECLS   extern "C" {                                                             |  2208     4
    46       |#define __END_DECLS     }                                                                        |  2209     4
    47       |#else                                                                                            |  2210     4
    48       |#define __BEGIN_DECLS                                                                            |  2211     4
    49       |#define __END_DECLS                                                                              |  2212     4
    50       |#endif                                                                                           |  2213     4
    51       |                                                                                                 |  2214     4
    52       |/*                                                                                               |  2215     4
    53       | * This code has been put in place to help reduce the addition of                                |  2216     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    44


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    54       | * compiler specific defines in the code.  It helps to aid in                                    |  2217     4
    55       | * having a compiler-agnostic source tree.                                                       |  2218     4
    56       | */                                                                                              |  2219     4
    57       |#define __CC_SUPPORTS_INLINE 1                                                                   |  2220     4
    58       |#define __CC_SUPPORTS___INLINE 1                                                                 |  2221     4
    59       |#define __CC_SUPPORTS___INLINE__ 1                                                               |  2222     4
    60       |                                                                                                 |  2223     4
    61       |#define __CC_SUPPORTS___FUNC__ 1                                                                 |  2224     4
    62       |                                                                                                 |  2225     4
    63       |                                                                                                 |  2226     4
    64       |/*                                                                                               |  2227     4
    65       | * The __CONCAT macro is used to concatenate parts of symbol names, e.g.                         |  2228     4
    66       | * with "#define OLD(foo) __CONCAT(old,foo)", OLD(foo) produces oldfoo.                          |  2229     4
    67       | * The __CONCAT macro is a bit tricky to use if it must work in non-ANSI                         |  2230     4
    68       | * mode -- there must be no spaces between its arguments, and for nested                         |  2231     4
    69       | * __CONCAT's, all the __CONCAT's must be at the left.  __CONCAT can also                        |  2232     4
    70       | * concatenate double-quoted strings produced by the __STRING macro, but                         |  2233     4
    71       | * this only works with ANSI C.                                                                  |  2234     4
    72       | *                                                                                               |  2235     4
    73       | * __XSTRING is like __STRING, but it expands any macros in its argument                         |  2236     4
    74       | * first.  It is only available with ANSI C.                                                     |  2237     4
    75       | */                                                                                              |  2238     4
    76       |#if defined(__STDC__) || defined(__cplusplus)                                                    |  2239     4
    77       |#define __P(protos)     protos          /* full-blown ANSI C */                                  |  2240     4
    78       |#define __CONCAT1(x,y)  x ## y                                                                   |  2241     4
    79       |#define __CONCAT(x,y)   __CONCAT1(x,y)                                                           |  2242     4
    80       |#define __STRING(x)     #x              /* stringify without expanding x */                      |  2243     4
    81       |#define __XSTRING(x)    __STRING(x)     /* expand x, then stringify */                           |  2244     4
    82       |                                                                                                 |  2245     4
    83       |#define __const         const           /* define reserved names to standard */                  |  2246     4
    84       |#define __signed        signed                                                                   |  2247     4
    85       |#define __volatile      volatile                                                                 |  2248     4
    86       |#if defined(__cplusplus)                                                                         |  2249     4
    87       |#define __inline        inline          /* convert to C++ keyword */                             |  2250     4
    88       |#else                                                                                            |  2251     4
    89       |#define __inline        __inline__      /* Use the Systems/C keyword */                          |  2252     4
    90       |#endif /* !__cplusplus */                                                                        |  2253     4
    91       |                                                                                                 |  2254     4
    92       |#else   /* !(__STDC__ || __cplusplus) */                                                         |  2255     4
    93       |#define __P(protos)     ()              /* traditional C preprocessor */                         |  2256     4
    94       |#define __CONCAT(x,y)   x/**/y                                                                   |  2257     4
    95       |#define __STRING(x)     "x"                                                                      |  2258     4
    96       |                                                                                                 |  2259     4
    97       |#define __const                         /* delete pseudo-ANSI C keywords */                      |  2260     4
    98       |#define __inline                                                                                 |  2261     4
    99       |#define __signed                                                                                 |  2262     4
   100       |#define __volatile                                                                               |  2263     4
   101       |/*                                                                                               |  2264     4
   102       | * In non-ANSI C environments, new programs will want ANSI-only C keywords                       |  2265     4
   103       | * deleted from the program and old programs will want them left alone.                          |  2266     4
   104       | * When using a compiler other than Dignus, programs using the ANSI C keywords                   |  2267     4
   105       | * const, inline etc. as normal identifiers should define -DNO_ANSI_KEYWORDS.                    |  2268     4
   106       | */                                                                                              |  2269     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    45


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   107       |#ifndef NO_ANSI_KEYWORDS                                                                         |  2270     4
   108       |#define const                           /* delete ANSI C keywords */                             |  2271     4
   109       |#define inline                                                                                   |  2272     4
   110       |#define signed                                                                                   |  2273     4
   111       |#define volatile                                                                                 |  2274     4
   112       |#endif  /* !NO_ANSI_KEYWORDS */                                                                  |  2275     4
   113       |#endif  /* !(__STDC__ || __cplusplus) */                                                         |  2276     4
   114       |                                                                                                 |  2277     4
   115       |/*                                                                                               |  2278     4
   116       | * Compiler-dependent macros to help declare dead (non-returning) and                            |  2279     4
   117       | * pure (no side effects) functions, and unused variables.                                       |  2280     4
   118       | */                                                                                              |  2281     4
   119       |#define __dead2 __attribute__((__noreturn__))                                                    |  2282     4
   120       |#define __pure  __attribute__((__pure__))                                                        |  2283     4
   121       |#define __pure2 __attribute__((__const__))                                                       |  2284     4
   122       |#define __unused                                                                                 |  2285     4
   123       |#define __aligned(x)                                                                             |  2286     4
   124       |#define __section(x)                                                                             |  2287     4
   125       |#define __nonnull(x)                                                                             |  2288     4
   126       |#define __used                                                                                   |  2289     4
   127       |                                                                                                 |  2290     4
   128       |#define __always_inline __attribute__((__always_inline__))                                       |  2291     4
   129       |#define __noinline      __attribute__((__noinline__))                                            |  2292     4
   130       |                                                                                                 |  2293     4
   131       |#if __STDC_VERSION__ < 199901                                                                    |  2294     4
   132       |#define __func__  NULL                                                                           |  2295     4
   133       |#endif                                                                                           |  2296     4
   134       |                                                                                                 |  2297     4
   135       |#if !defined(__STRICT_ANSI__) || __STDC_VERSION__ >= 199901                                      |  2298     4
   136       |#define __LONG_LONG_SUPPORTED                                                                    |  2299     4
   137       |#endif                                                                                           |  2300     4
   138       |                                                                                                 |  2301     4
   139       |/* Systems/C recognizes they keyword __restrict__ in both                                        |  2302     4
   140       | * ANSI and non-ANSI mode to indicate C99 restrict semantics.                                    |  2303     4
   141       | **/                                                                                             |  2304     4
   142       |#ifndef __cplusplus                                                                              |  2305     4
   143       |#define __restrict __restrict__                                                                  |  2306     4
   144       |#else                                                                                            |  2307     4
   145       |/* Systems/C++ does not */                                                                       |  2308     4
   146       |#define __restrict                                                                               |  2309     4
   147       |#endif                                                                                           |  2310     4
   148       |                                                                                                 |  2311     4
   149       |/*                                                                                               |  2312     4
   150       | * define-away GCC-specific branch-prediction markers                                            |  2313     4
   151       | */                                                                                              |  2314     4
   152       |#define __predict_true(exp)     (exp)                                                            |  2315     4
   153       |#define __predict_false(exp)    (exp)                                                            |  2316     4
   154       |                                                                                                 |  2317     4
   155       |                                                                                                 |  2318     4
   156       |/*                                                                                               |  2319     4
   157       | * provide a definition of __offsetof(), <stddef.h> and                                          |  2320     4
   158       | * <sys/types.h> reference __offsetof().                                                         |  2321     4
   159       | *                                                                                               |  2322     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    46


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   160       | * For Systems/C, the C compiler recognizes __offsetof(),                                        |  2323     4
   161       | * but we need a definition for versions of C++ prior to 1.85.52.                                |  2324     4
   162       | */                                                                                              |  2325     4
   163       |#if defined(__cplusplus) && (__SYSC_VER__ < (18600))                                             |  2326     4
   164       |#undef __offsetof                                                                                |  2327     4
   165       |#define __offsetof(type, field)  ((size_t)(&((type *)0)->field))                                 |  2328     4
   166       |#endif                                                                                           |  2329     4
   167       |                                                                                                 |  2330     4
   168       |/*                                                                                               |  2331     4
   169       | * Compiler-dependent macros to declare that functions take printf-like                          |  2332     4
   170       | * or scanf-like arguments.                                                                      |  2333     4
   171       | */                                                                                              |  2334     4
   172       |#define __printflike(fmtarg, firstvararg)                                                        |  2335     4
   173       |#define __scanflike(fmtarg, firstvararg)                                                         |  2336     4
   174       |#define __format_arg(fmtarg)                                                                     |  2337     4
   175       |#define __printf0like(fmtarg, firstvararg)                                                       |  2338     4
   176       |                                                                                                 |  2339     4
   177       |/* Compiler-dependent macros that rely on specific extensions. */                                |  2340     4
   178       |#define __printf0like(fmtarg, firstvararg)                                                       |  2341     4
   179       |                                                                                                 |  2342     4
   180       |  /* intended to generate a weak reference as an alias */                                        |  2343     4
   181       |#define __weak_reference(sym,alias)                                                              |  2344     4
   182       |  /* If this symbol is refrenced, cause the linker to emit "msg" */                              |  2345     4
   183       |#define __warn_references(sym,msg)                                                               |  2346     4
   184       |                                                                                                 |  2347     4
   185       | /* This places the string into the resulting object.  It should */                              |  2348     4
   186       | /* probably become #pragma ident */                                                             |  2349     4
   187       |#define __IDSTRING(name,string) static const char name[] __unused = string                       |  2350     4
   188       |                                                                                                 |  2351     4
   189       |#ifndef __RCSID                                                                                  |  2352     4
   190       |#define __RCSID(s)      __IDSTRING(rcsid,s)                                                      |  2353     4
   191       |#endif                                                                                           |  2354     4
   192       |                                                                                                 |  2355     4
   193       |/*                                                                                               |  2356     4
   194       | * Embed the rcs id of a source file in the resulting library.                                   |  2357     4
   195       | * Usage:                                                                                        |  2358     4
   196       | *      __SYSCID("Id: src/sys/sys/cdefs.h,v 1.28.2.8 2002/09/18                                  |  2359     4
   197       |*                                            04:05:13 mikeh Exp $");                             |  2360     4
   198       | */                                                                                              |  2361     4
   199       |#ifndef __SYSCID                                                                                 |  2362     4
   200       |#if !defined(lint) && !defined(STRIP_SYSCID)                                                     |  2363     4
   201       |#define __SYSCID(s)     __IDSTRING(__CONCAT(__rcsid_,__LINE__),s)                                |  2364     4
   202       |#else                                                                                            |  2365     4
   203       |#define __SYSCID(s)     struct __hack                                                            |  2366     4
   204       |#endif                                                                                           |  2367     4
   205       |#endif                                                                                           |  2368     4
   206       |                                                                                                 |  2369     4
   207       |#ifndef __RCSID_SOURCE                                                                           |  2370     4
   208       |#define __RCSID_SOURCE(s) __IDSTRING(rcsid_source,s)                                             |  2371     4
   209       |#endif                                                                                           |  2372     4
   210       |                                                                                                 |  2373     4
   211       |#ifndef __COPYRIGHT                                                                              |  2374     4
   212       |#define __COPYRIGHT(s)  __IDSTRING(copyright,s)                                                  |  2375     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    47


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   213       |#endif                                                                                           |  2376     4
   214       |                                                                                                 |  2377     4
   215       |                                                                                                 |  2378     4
   216       |#ifndef __DECONST                                                                                |  2379     4
   217       |#define __DECONST(type, var)    ((type)(uintptr_t)(const void *)(var))                           |  2380     4
   218       |#endif                                                                                           |  2381     4
   219       |                                                                                                 |  2382     4
   220       |#ifndef __DEVOLATILE                                                                             |  2383     4
   221       |#define __DEVOLATILE(type, var) ((type)(uintptr_t)(volatile void *)(var))                        |  2384     4
   222       |#endif                                                                                           |  2385     4
   223       |                                                                                                 |  2386     4
   224       |#ifndef __DEQUALIFY                                                                              |  2387     4
   225       |#define __DEQUALIFY(type, var)  ((type)(uintptr_t)(const volatile void *)(var))                  |  2388     4
   226       |#endif                                                                                           |  2389     4
   227       |                                                                                                 |  2390     4
   228       |                                                                                                 |  2391     4
   229       |/*-                                                                                              |  2392     4
   230       | * The following definitions are an extension of the behavior originally                         |  2393     4
   231       | * implemented in <sys/_posix.h>, but with a different level of granularity.                     |  2394     4
   232       | * POSIX.1 requires that the macros we test be defined before any standard                       |  2395     4
   233       | * header file is included.                                                                      |  2396     4
   234       | *                                                                                               |  2397     4
   235       | * Here's a quick run-down of the versions:                                                      |  2398     4
   236       | *  defined(_POSIX_SOURCE)              1003.1-1988                                              |  2399     4
   237       | *  _POSIX_C_SOURCE == 1                1003.1-1990                                              |  2400     4
   238       | *  _POSIX_C_SOURCE == 2                1003.2-1992 C Language Binding Option                    |  2401     4
   239       | *  _POSIX_C_SOURCE == 199309           1003.1b-1993                                             |  2402     4
   240       | *  _POSIX_C_SOURCE == 199506           1003.1c-1995, 1003.1i-1995,                              |  2403     4
   241       | *                                      and the omnibus ISO/IEC 9945-1: 1996                     |  2404     4
   242       | *  _POSIX_C_SOURCE == 200112           1003.1-2001                                              |  2405     4
   243       | *  _POSIX_C_SOURCE == 200809           1003.1-2008                                              |  2406     4
   244       | *                                                                                               |  2407     4
   245       | * In addition, the X/Open Portability Guide, which is now the Single UNIX                       |  2408     4
   246       | * Specification, defines a feature-test macro which indicates the version of                    |  2409     4
   247       | * that specification, and which subsumes _POSIX_C_SOURCE.                                       |  2410     4
   248       | *                                                                                               |  2411     4
   249       | * Our macros begin with two underscores to avoid namespace screwage.                            |  2412     4
   250       | */                                                                                              |  2413     4
   251       |                                                                                                 |  2414     4
   252       |/*                                                                                               |  2415     4
   253       | * If no special macro was specified, make the DragonFly extensions                              |  2416     4
   254       | * available. Also make them available when requested so.                                        |  2417     4
   255       | */                                                                                              |  2418     4
   256       |#if (!defined(_POSIX_C_SOURCE) && !defined(_XOPEN_SOURCE) && \                                   |  2419     4
   257       |    !defined(_ANSI_SOURCE) && !defined(_C99_SOURCE)) || \                                        |  2420     4
   258       |    defined(_DRAGONFLY_SOURCE) || defined(_NETBSD_SOURCE)                                        |  2421     4
   259       |#define __DF_VISIBLE    1                                                                        |  2422     4
   260       |#else                                                                                            |  2423     4
   261       |#define __DF_VISIBLE    0                                                                        |  2424     4
   262       |#endif                                                                                           |  2425     4
   263       |                                                                                                 |  2426     4
   264       |/*-                                                                                              |  2427     4
   265       | * The following definitions are an extension of the behavior originally                         |  2428     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    48


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   266       | * implemented in <sys/_posix.h>, but with a different level of granularity.                     |  2429     4
   267       | * POSIX.1 requires that the macros we test be defined before any standard                       |  2430     4
   268       | * header file is included.                                                                      |  2431     4
   269       | *                                                                                               |  2432     4
   270       | * Here's a quick run-down of the versions:                                                      |  2433     4
   271       | *  defined(_POSIX_SOURCE)              1003.1-1988                                              |  2434     4
   272       | *  _POSIX_C_SOURCE == 1                1003.1-1990                                              |  2435     4
   273       | *  _POSIX_C_SOURCE == 2                1003.2-1992 C Language Binding Option                    |  2436     4
   274       | *  _POSIX_C_SOURCE == 199309           1003.1b-1993                                             |  2437     4
   275       | *  _POSIX_C_SOURCE == 199506           1003.1c-1995, 1003.1i-1995,                              |  2438     4
   276       | *                                      and the omnibus ISO/IEC 9945-1: 1996                     |  2439     4
   277       | *  _POSIX_C_SOURCE == 200112           1003.1-2001                                              |  2440     4
   278       | *  _POSIX_C_SOURCE == 200809           1003.1-2008                                              |  2441     4
   279       | *                                                                                               |  2442     4
   280       | * In addition, the X/Open Portability Guide, which is now the Single UNIX                       |  2443     4
   281       | * Specification, defines a feature-test macro which indicates the version of                    |  2444     4
   282       | * that specification, and which subsumes _POSIX_C_SOURCE.                                       |  2445     4
   283       | *                                                                                               |  2446     4
   284       | * Our macros begin with two underscores to avoid namespace screwage.                            |  2447     4
   285       | */                                                                                              |  2448     4
   286       |                                                                                                 |  2449     4
   287       |/* Deal with IEEE Std. 1003.1-1990, in which _POSIX_C_SOURCE == 1. */                            |  2450     4
   288       |#if defined(_POSIX_C_SOURCE) && _POSIX_C_SOURCE == 1                                             |  2451     4
   289       |#undef _POSIX_C_SOURCE          /* Probably illegal, but beyond caring now. */                   |  2452     4
   290       |#define _POSIX_C_SOURCE         199009                                                           |  2453     4
   291       |#endif                                                                                           |  2454     4
   292       |                                                                                                 |  2455     4
   293       |/* Deal with IEEE Std. 1003.2-1992, in which _POSIX_C_SOURCE == 2. */                            |  2456     4
   294       |#if defined(_POSIX_C_SOURCE) && _POSIX_C_SOURCE == 2                                             |  2457     4
   295       |#undef _POSIX_C_SOURCE                                                                           |  2458     4
   296       |#define _POSIX_C_SOURCE         199209                                                           |  2459     4
   297       |#endif                                                                                           |  2460     4
   298       |                                                                                                 |  2461     4
   299       |/* Deal with various X/Open Portability Guides and Single UNIX Spec. */                          |  2462     4
   300       |#ifdef _XOPEN_SOURCE                                                                             |  2463     4
   301       |#if _XOPEN_SOURCE - 0 >= 700                                                                     |  2464     4
   302       |#define __XSI_VISIBLE           700                                                              |  2465     4
   303       |#undef _POSIX_C_SOURCE                                                                           |  2466     4
   304       |#define _POSIX_C_SOURCE         200809                                                           |  2467     4
   305       |#elif _XOPEN_SOURCE - 0 >= 600                                                                   |  2468     4
   306       |#define __XSI_VISIBLE           600                                                              |  2469     4
   307       |#undef _POSIX_C_SOURCE                                                                           |  2470     4
   308       |#define _POSIX_C_SOURCE         200112                                                           |  2471     4
   309       |#elif _XOPEN_SOURCE - 0 >= 500                                                                   |  2472     4
   310       |#define __XSI_VISIBLE           500                                                              |  2473     4
   311       |#undef _POSIX_C_SOURCE                                                                           |  2474     4
   312       |#define _POSIX_C_SOURCE         199506                                                           |  2475     4
   313       |#endif                                                                                           |  2476     4
   314       |#endif                                                                                           |  2477     4
   315       |                                                                                                 |  2478     4
   316       |/*                                                                                               |  2479     4
   317       | * Deal with all versions of POSIX.  The ordering relative to the tests above is                 |  2480     4
   318       | * important.                                                                                    |  2481     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    49


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   319       | */                                                                                              |  2482     4
   320       |#if defined(_POSIX_SOURCE) && !defined(_POSIX_C_SOURCE)                                          |  2483     4
   321       |#define _POSIX_C_SOURCE         198808                                                           |  2484     4
   322       |#endif                                                                                           |  2485     4
   323       |#ifdef _POSIX_C_SOURCE                                                                           |  2486     4
   324       |#if _POSIX_C_SOURCE >= 200809                                                                    |  2487     4
   325       |#define __POSIX_VISIBLE         200809                                                           |  2488     4
   326       |#define __ISO_C_VISIBLE         1999                                                             |  2489     4
   327       |#elif _POSIX_C_SOURCE >= 200112                                                                  |  2490     4
   328       |#define __POSIX_VISIBLE         200112                                                           |  2491     4
   329       |#define __ISO_C_VISIBLE         1999                                                             |  2492     4
   330       |#elif _POSIX_C_SOURCE >= 199506                                                                  |  2493     4
   331       |#define __POSIX_VISIBLE         199506                                                           |  2494     4
   332       |#define __ISO_C_VISIBLE         1990                                                             |  2495     4
   333       |#elif _POSIX_C_SOURCE >= 199309                                                                  |  2496     4
   334       |#define __POSIX_VISIBLE         199309                                                           |  2497     4
   335       |#define __ISO_C_VISIBLE         1990                                                             |  2498     4
   336       |#elif _POSIX_C_SOURCE >= 199209                                                                  |  2499     4
   337       |#define __POSIX_VISIBLE         199209                                                           |  2500     4
   338       |#define __ISO_C_VISIBLE         1990                                                             |  2501     4
   339       |#elif _POSIX_C_SOURCE >= 199009                                                                  |  2502     4
   340       |#define __POSIX_VISIBLE         199009                                                           |  2503     4
   341       |#define __ISO_C_VISIBLE         1990                                                             |  2504     4
   342       |#else                                                                                            |  2505     4
   343       |#define __POSIX_VISIBLE         198808                                                           |  2506     4
   344       |#define __ISO_C_VISIBLE         0                                                                |  2507     4
   345       |#endif /* _POSIX_C_SOURCE */                                                                     |  2508     4
   346       |#else                                                                                            |  2509     4
   347       |/*-                                                                                              |  2510     4
   348       | * Deal with _ANSI_SOURCE:                                                                       |  2511     4
   349       | * If it is defined, and no other compilation environment is explicitly                          |  2512     4
   350       | * requested, then define our internal feature-test macros to zero.  This                        |  2513     4
   351       | * makes no difference to the preprocessor (undefined symbols in preprocessing                   |  2514     4
   352       | * expressions are defined to have value zero), but makes it more convenient for                 |  2515     4
   353       | * a test program to print out the values.                                                       |  2516     4
   354       | *                                                                                               |  2517     4
   355       | * If a program mistakenly defines _ANSI_SOURCE and some other macro such as                     |  2518     4
   356       | * _POSIX_C_SOURCE, we will assume that it wants the broader compilation                         |  2519     4
   357       | * environment (and in fact we will never get here).                                             |  2520     4
   358       | */                                                                                              |  2521     4
   359       |#if defined(_ANSI_SOURCE)       /* Hide almost everything. */                                    |  2522     4
   360       |#define __POSIX_VISIBLE         0                                                                |  2523     4
   361       |#define __XSI_VISIBLE           0                                                                |  2524     4
   362       |#define __BSD_VISIBLE           0                                                                |  2525     4
   363       |#define __ISO_C_VISIBLE         1990                                                             |  2526     4
   364       |#define __EXT1_VISIBLE          0                                                                |  2527     4
   365       |#elif defined(_C99_SOURCE)      /* Localism to specify strict C99 env. */                        |  2528     4
   366       |#define __POSIX_VISIBLE         0                                                                |  2529     4
   367       |#define __XSI_VISIBLE           0                                                                |  2530     4
   368       |#define __BSD_VISIBLE           0                                                                |  2531     4
   369       |#define __ISO_C_VISIBLE         1999                                                             |  2532     4
   370       |#define __EXT1_VISIBLE          0                                                                |  2533     4
   371       |#elif defined(_C11_SOURCE)      /* Localism to specify strict C11 env. */                        |  2534     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    50


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   372       |#define __POSIX_VISIBLE         0                                                                |  2535     4
   373       |#define __XSI_VISIBLE           0                                                                |  2536     4
   374       |#define __BSD_VISIBLE           0                                                                |  2537     4
   375       |#define __ISO_C_VISIBLE         2011                                                             |  2538     4
   376       |#define __EXT1_VISIBLE          0                                                                |  2539     4
   377       |#else                           /* Default environment: show everything. */                      |  2540     4
   378       |#define __POSIX_VISIBLE         200809                                                           |  2541     4
   379       |#define __XSI_VISIBLE           700                                                              |  2542     4
   380       |#define __BSD_VISIBLE           1                                                                |  2543     4
   381       |#define __ISO_C_VISIBLE         2011                                                             |  2544     4
   382       |#define __EXT1_VISIBLE          1                                                                |  2545     4
   383       |#endif                                                                                           |  2546     4
   384       |#endif                                                                                           |  2547     4
   385       |                                                                                                 |  2548     4
   386       |/* User override __EXT1_VISIBLE */                                                               |  2549     4
   387       |#if defined(__STDC_WANT_LIB_EXT1__)                                                              |  2550     4
   388       |#undef  __EXT1_VISIBLE                                                                           |  2551     4
   389       |#if __STDC_WANT_LIB_EXT1__                                                                       |  2552     4
   390       |#define __EXT1_VISIBLE          1                                                                |  2553     4
   391       |#else                                                                                            |  2554     4
   392       |#define __EXT1_VISIBLE          0                                                                |  2555     4
   393       |#endif                                                                                           |  2556     4
   394       |#endif /* __STDC_WANT_LIB_EXT1__ */                                                              |  2557     4
   395       |                                                                                                 |  2558     4
   396       |#if defined(__370__) || defined(__mips) || defined(__powerpc64__)                                |  2559     4
   397       |#define __NO_TLS 1                                                                               |  2560     4
   398       |#endif                                                                                           |  2561     4
   399       |                                                                                                 |  2562     4
   400       |                                                                                                 |  2563     4
   401       |/* easier than stripping __FBSDID() from sources - Greg 2008/07/28 */                            |  2564     4
   402       |#define __FBSDID(x)                                                                              |  2565     4
   403       |                                                                                                 |  2566     4
   404       |#endif /* !_SYS_CDEFS_H_ */                                                                      |  2567     4
   405       |#pragma pack(reset)                                                                              |  2568     4
    38       |#include <sys/_types.h>                                                                          |  2569     9
     1       |/* release 2.25.00 */                                                                            |  2570     6
     2       |#pragma pack()                                                                                   |  2571     6
     3       |/*-                                                                                              |  2572     6
     4       | * Copyright (c) 2002 Mike Barcroft <mike@FreeBSD.org>                                           |  2573     6
     5       | * All rights reserved.                                                                          |  2574     6
     6       | *                                                                                               |  2575     6
     7       | * Redistribution and use in source and binary forms, with or without                            |  2576     6
     8       | * modification, are permitted provided that the following conditions                            |  2577     6
     9       | * are met:                                                                                      |  2578     6
    10       | * 1. Redistributions of source code must retain the above copyright                             |  2579     6
    11       | *    notice, this list of conditions and the following disclaimer.                              |  2580     6
    12       | * 2. Redistributions in binary form must reproduce the above copyright                          |  2581     6
    13       | *    notice, this list of conditions and the following disclaimer in the                        |  2582     6
    14       | *    documentation and/or other materials provided with the distribution.                       |  2583     6
    15       | *                                                                                               |  2584     6
    16       | * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND                        |  2585     6
    17       | * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE                         |  2586     6
    18       | * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE                    |  2587     6
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    51


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    19       | * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE                       |  2588     6
    20       | * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL                    |  2589     6
    21       | * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS                       |  2590     6
    22       | * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)                         |  2591     6
    23       | * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT                    |  2592     6
    24       | * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY                     |  2593     6
    25       | * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF                        |  2594     6
    26       | * SUCH DAMAGE.                                                                                  |  2595     6
    27       | *                                                                                               |  2596     6
    28       | * $FreeBSD: src/sys/sys/_types.h,v 1.21 2005/03/22 01:19:17 das Exp $                           |  2597     6
    29       | */                                                                                              |  2598     6
    30       |                                                                                                 |  2599     6
    31       |#ifndef _SYS__TYPES_H_                                                                           |  2600     6
    32       |#define _SYS__TYPES_H_                                                                           |  2601     6
    33       |                                                                                                 |  2602     6
    34       |#include <sys/cdefs.h>                                                                           |  2603     6
    35       |#include <machine/_types.h>                                                                      |  2604     6
    36       |                                                                                                 |  2605     6
    37       |/*                                                                                               |  2606     6
    38       | * Standard type definitions.                                                                    |  2607     6
    39       | */                                                                                              |  2608     6
    40       |typedef __int32_t       __blksize_t;    /* file block size */                                    |  2609     6
    41       |typedef __int64_t       __blkcnt_t;     /* file block count */                                   |  2610     6
    42       |typedef __int32_t       __clockid_t;    /* clock_gettime()... */                                 |  2611     6
    43       |typedef __uint32_t      __fflags_t;     /* file flags */                                         |  2612     6
    44       |typedef __uint64_t      __fsblkcnt_t;                                                            |  2613     6
    45       |typedef __uint64_t      __fsfilcnt_t;                                                            |  2614     6
    46       |typedef __uint32_t      __gid_t;                                                                 |  2615     6
    47       |typedef __int64_t       __id_t;         /* can hold a gid_t, pid_t, or uid_t */                  |  2616     6
    48       |typedef __uint32_t      __ino_t;        /* inode number */                                       |  2617     6
    49       |typedef long            __key_t;        /* IPC key (for Sys V IPC) */                            |  2618     6
    50       |typedef __int32_t       __lwpid_t;      /* Thread ID (a.k.a. LWP) */                             |  2619     6
    51       |typedef __uint16_t      __mode_t;       /* permissions */                                        |  2620     6
    52       |typedef int             __nl_item;                                                               |  2621     6
    53       |typedef __uint16_t      __nlink_t;      /* link count */                                         |  2622     6
    54       |typedef __int64_t       __off_t;        /* file offset */                                        |  2623     6
    55       |typedef __int32_t       __pid_t;        /* process [group] */                                    |  2624     6
    56       |typedef __int64_t       __rlim_t;       /* resource limit - intentionally */                     |  2625     6
    57       |                                        /* signed, because of legacy code */                     |  2626     6
    58       |                                        /* that uses -1 for RLIM_INFINITY */                     |  2627     6
    59       |typedef __uint8_t       __sa_family_t;                                                           |  2628     6
    60       |typedef __uint32_t      __socklen_t;                                                             |  2629     6
    61       |typedef long            __suseconds_t;  /* microseconds (signed) */                              |  2630     6
    62       |typedef __int32_t       __timer_t;      /* timer_gettime()... */                                 |  2631     6
    63       |typedef __uint32_t      __uid_t;                                                                 |  2632     6
    64       |typedef unsigned int    __useconds_t;   /* microseconds (unsigned) */                            |  2633     6
    65       |                                                                                                 |  2634     6
    66       |/*                                                                                               |  2635     6
    67       | * Unusual type definitions.                                                                     |  2636     6
    68       | */                                                                                              |  2637     6
    69       |/*                                                                                               |  2638     6
    70       | * rune_t is declared to be an ``int'' instead of the more natural                               |  2639     6
    71       | * ``unsigned long'' or ``long''.  Two things are happening here.  It is not                     |  2640     6
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    52


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    72       | * unsigned so that EOF (-1) can be naturally assigned to it and used.  Also,                    |  2641     6
    73       | * it looks like 10646 will be a 31 bit standard.  This means that if your                       |  2642     6
    74       | * ints cannot hold 32 bits, you will be in trouble.  The reason an int was                      |  2643     6
    75       | * chosen over a long is that the is*() and to*() routines take ints (says                       |  2644     6
    76       | * ANSI C), but they use __ct_rune_t instead of int.                                             |  2645     6
    77       | *                                                                                               |  2646     6
    78       | * NOTE: rune_t is not covered by ANSI nor other standards, and should not                       |  2647     6
    79       | * be instantiated outside of lib/libc/locale.  Use wchar_t.  wchar_t and                        |  2648     6
    80       | * rune_t must be the same type.  Also, wint_t must be no narrower than                          |  2649     6
    81       | * wchar_t, and should be able to hold all members of the largest                                |  2650     6
    82       | * character set plus one extra value (WEOF), and must be at least 16 bits.                      |  2651     6
    83       | */                                                                                              |  2652     6
    84       |#ifdef __cplusplus                                                                               |  2653     6
    85       |/* DCXX provides a builtin definition of wchar_t as a keyword, and it matters                    |  2654     6
    86       | * for parameter type matching even though it's the same type (4-byte signed) */                 |  2655     6
    87       |typedef wchar_t         __ct_rune_t;    /* arg type for ctype funcs */                           |  2656     6
    88       |#else                                                                                            |  2657     6
    89       |typedef int             __ct_rune_t;    /* arg type for ctype funcs */                           |  2658     6
    90       |#endif                                                                                           |  2659     6
    91       |typedef __ct_rune_t     __rune_t;       /* rune_t (see above) */                                 |  2660     6
    92       |typedef __ct_rune_t     __wchar_t;      /* wchar_t (see above) */                                |  2661     6
    93       |typedef __ct_rune_t     __wint_t;       /* wint_t (see above) */                                 |  2662     6
    94       |                                                                                                 |  2663     6
    95       |/* In C++11, char16_t and char32_t are builtin types */                                          |  2664     6
    96       |#if defined(__cplusplus) && __cplusplus >= 201103L                                               |  2665     6
    97       |#define _CHAR16_T_DECLARED                                                                       |  2666     6
    98       |#define _CHAR32_T_DECLARED                                                                       |  2667     6
    99       |#endif                                                                                           |  2668     6
   100       |                                                                                                 |  2669     6
   101       |#if !defined(__cplusplus)                                                                        |  2670     6
   102       |typedef __uint_least16_t __char16_t;                                                             |  2671     6
   103       |typedef __uint_least32_t __char32_t;                                                             |  2672     6
   104       |#endif                                                                                           |  2673     6
   105       |                                                                                                 |  2674     6
   106       |                                                                                                 |  2675     6
   107       |typedef __uint32_t      __dev_t;        /* device number */                                      |  2676     6
   108       |                                                                                                 |  2677     6
   109       |typedef __uint32_t      __fixpt_t;      /* fixed point number */                                 |  2678     6
   110       |                                                                                                 |  2679     6
   111       |/*                                                                                               |  2680     6
   112       | * mbstate_t is an opaque object to keep conversion state during multibyte                       |  2681     6
   113       | * stream conversions.                                                                           |  2682     6
   114       | */                                                                                              |  2683     6
   115       |typedef union {                                                                                  |  2684     6
   116       |        char            __mbstate8[128];                                                         |  2685     6
   117       |        __int64_t       _mbstateL;      /* for alignment */                                      |  2686     6
   118       |} __mbstate_t;                                                                                   |  2687     6
   119       |                                                                                                 |  2688     6
   120       |#endif /* !_SYS__TYPES_H_ */                                                                     |  2689     6
   121       |#pragma pack(reset)                                                                              |  2690     6
    39       |                                                                                                 |  2691     9
    40       |#include <sys/_sigset.h>                                                                         |  2692     9
     1       |/* release 2.25.00 */                                                                            |  2693    10
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    53


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
     2       |#pragma pack()                                                                                   |  2694    10
     3       |/*-                                                                                              |  2695    10
     4       | * Copyright (c) 1982, 1986, 1989, 1991, 1993                                                    |  2696    10
     5       | *      The Regents of the University of California.  All rights reserved.                       |  2697    10
     6       | * (c) UNIX System Laboratories, Inc.                                                            |  2698    10
     7       | * All or some portions of this file are derived from material licensed                          |  2699    10
     8       | * to the University of California by American Telephone and Telegraph                           |  2700    10
     9       | * Co. or Unix System Laboratories, Inc. and are reproduced herein with                          |  2701    10
    10       | * the permission of UNIX System Laboratories, Inc.                                              |  2702    10
    11       | *                                                                                               |  2703    10
    12       | * Redistribution and use in source and binary forms, with or without                            |  2704    10
    13       | * modification, are permitted provided that the following conditions                            |  2705    10
    14       | * are met:                                                                                      |  2706    10
    15       | * 1. Redistributions of source code must retain the above copyright                             |  2707    10
    16       | *    notice, this list of conditions and the following disclaimer.                              |  2708    10
    17       | * 2. Redistributions in binary form must reproduce the above copyright                          |  2709    10
    18       | *    notice, this list of conditions and the following disclaimer in the                        |  2710    10
    19       | *    documentation and/or other materials provided with the distribution.                       |  2711    10
    20       | * 4. Neither the name of the University nor the names of its contributors                       |  2712    10
    21       | *    may be used to endorse or promote products derived from this software                      |  2713    10
    22       | *    without specific prior written permission.                                                 |  2714    10
    23       | *                                                                                               |  2715    10
    24       | * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND                       |  2716    10
    25       | * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE                         |  2717    10
    26       | * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE                    |  2718    10
    27       | * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE                      |  2719    10
    28       | * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL                    |  2720    10
    29       | * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS                       |  2721    10
    30       | * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)                         |  2722    10
    31       | * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT                    |  2723    10
    32       | * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY                     |  2724    10
    33       | * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF                        |  2725    10
    34       | * SUCH DAMAGE.                                                                                  |  2726    10
    35       | *                                                                                               |  2727    10
    36       | *      @(#)signal.h    8.4 (Berkeley) 5/4/95                                                    |  2728    10
    37       | * $FreeBSD: src/sys/sys/_sigset.h,v 1.36 2005/01/07 02:29:23 imp Exp $                          |  2729    10
    38       | */                                                                                              |  2730    10
    39       |                                                                                                 |  2731    10
    40       |#ifndef _SYS__SIGSET_H_                                                                          |  2732    10
    41       |#define _SYS__SIGSET_H_                                                                          |  2733    10
    42       |                                                                                                 |  2734    10
    43       |/*                                                                                               |  2735    10
    44       | * sigset_t macros.                                                                              |  2736    10
    45       | */                                                                                              |  2737    10
    46       |#define _SIG_WORDS      4                                                                        |  2738    10
    47       |#define _SIG_MAXSIG     128                                                                      |  2739    10
    48       |#define _SIG_IDX(sig)   ((sig) - 1)                                                              |  2740    10
    49       |#define _SIG_WORD(sig)  (_SIG_IDX(sig) >> 5)                                                     |  2741    10
    50       |#define _SIG_BIT(sig)   (1 << (_SIG_IDX(sig) & 31))                                              |  2742    10
    51       |#define _SIG_VALID(sig) ((sig) <= _SIG_MAXSIG && (sig) > 0)                                      |  2743    10
    52       |                                                                                                 |  2744    10
    53       |typedef struct __sigset {                                                                        |  2745    10
    54       |        __uint32_t __bits[_SIG_WORDS];                                                           |  2746    10
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    54


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    54       +                __uint32_t __bits[4];                                                            +  2746    10
    55       |} __sigset_t;                                                                                    |  2747    10
    56       |                                                                                                 |  2748    10
    57       |#if defined(_KERNEL) && defined(COMPAT_43)                                                       |  2749    10
    58       |typedef unsigned int osigset_t;                                                                  |  2750    10
    59       |#endif                                                                                           |  2751    10
    60       |                                                                                                 |  2752    10
    61       |#endif /* !_SYS__SIGSET_H_ */                                                                    |  2753    10
    62       |#pragma pack(reset)                                                                              |  2754    10
    41       |#include <sys/_timeval.h>                                                                        |  2755     9
     1       |/* release 2.25.00 */                                                                            |  2756    11
     2       |#pragma pack()                                                                                   |  2757    11
     3       |/*-                                                                                              |  2758    11
     4       | * Copyright (c) 2002 Mike Barcroft <mike@FreeBSD.org>                                           |  2759    11
     5       | * All rights reserved.                                                                          |  2760    11
     6       | *                                                                                               |  2761    11
     7       | * Redistribution and use in source and binary forms, with or without                            |  2762    11
     8       | * modification, are permitted provided that the following conditions                            |  2763    11
     9       | * are met:                                                                                      |  2764    11
    10       | * 1. Redistributions of source code must retain the above copyright                             |  2765    11
    11       | *    notice, this list of conditions and the following disclaimer.                              |  2766    11
    12       | * 2. Redistributions in binary form must reproduce the above copyright                          |  2767    11
    13       | *    notice, this list of conditions and the following disclaimer in the                        |  2768    11
    14       | *    documentation and/or other materials provided with the distribution.                       |  2769    11
    15       | *                                                                                               |  2770    11
    16       | * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND                        |  2771    11
    17       | * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE                         |  2772    11
    18       | * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE                    |  2773    11
    19       | * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE                       |  2774    11
    20       | * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL                    |  2775    11
    21       | * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS                       |  2776    11
    22       | * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)                         |  2777    11
    23       | * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT                    |  2778    11
    24       | * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY                     |  2779    11
    25       | * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF                        |  2780    11
    26       | * SUCH DAMAGE.                                                                                  |  2781    11
    27       | *                                                                                               |  2782    11
    28       | * $FreeBSD: src/sys/sys/_timeval.h,v 1.1.12.1 2006/06/23 23:41:05 cognet Exp $                  |  2783    11
    29       | */                                                                                              |  2784    11
    30       |                                                                                                 |  2785    11
    31       |#ifndef _SYS__TIMEVAL_H_                                                                         |  2786    11
    32       |#define _SYS__TIMEVAL_H_                                                                         |  2787    11
    33       |                                                                                                 |  2788    11
    34       |#include <sys/_types.h>                                                                          |  2789    11
     1       |/* release 2.25.00 */                                                                            |  2790     6
     2       |#pragma pack()                                                                                   |  2791     6
     3       |/*-                                                                                              |  2792     6
     4       | * Copyright (c) 2002 Mike Barcroft <mike@FreeBSD.org>                                           |  2793     6
     5       | * All rights reserved.                                                                          |  2794     6
     6       | *                                                                                               |  2795     6
     7       | * Redistribution and use in source and binary forms, with or without                            |  2796     6
     8       | * modification, are permitted provided that the following conditions                            |  2797     6
     9       | * are met:                                                                                      |  2798     6
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    55


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    10       | * 1. Redistributions of source code must retain the above copyright                             |  2799     6
    11       | *    notice, this list of conditions and the following disclaimer.                              |  2800     6
    12       | * 2. Redistributions in binary form must reproduce the above copyright                          |  2801     6
    13       | *    notice, this list of conditions and the following disclaimer in the                        |  2802     6
    14       | *    documentation and/or other materials provided with the distribution.                       |  2803     6
    15       | *                                                                                               |  2804     6
    16       | * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND                        |  2805     6
    17       | * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE                         |  2806     6
    18       | * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE                    |  2807     6
    19       | * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE                       |  2808     6
    20       | * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL                    |  2809     6
    21       | * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS                       |  2810     6
    22       | * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)                         |  2811     6
    23       | * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT                    |  2812     6
    24       | * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY                     |  2813     6
    25       | * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF                        |  2814     6
    26       | * SUCH DAMAGE.                                                                                  |  2815     6
    27       | *                                                                                               |  2816     6
    28       | * $FreeBSD: src/sys/sys/_types.h,v 1.21 2005/03/22 01:19:17 das Exp $                           |  2817     6
    29       | */                                                                                              |  2818     6
    30       |                                                                                                 |  2819     6
    31       |#ifndef _SYS__TYPES_H_                                                                           |  2820     6
    32       |#define _SYS__TYPES_H_                                                                           |  2821     6
    33       |                                                                                                 |  2822     6
    34       |#include <sys/cdefs.h>                                                                           |  2823     6
    35       |#include <machine/_types.h>                                                                      |  2824     6
    36       |                                                                                                 |  2825     6
    37       |/*                                                                                               |  2826     6
    38       | * Standard type definitions.                                                                    |  2827     6
    39       | */                                                                                              |  2828     6
    40       |typedef __int32_t       __blksize_t;    /* file block size */                                    |  2829     6
    41       |typedef __int64_t       __blkcnt_t;     /* file block count */                                   |  2830     6
    42       |typedef __int32_t       __clockid_t;    /* clock_gettime()... */                                 |  2831     6
    43       |typedef __uint32_t      __fflags_t;     /* file flags */                                         |  2832     6
    44       |typedef __uint64_t      __fsblkcnt_t;                                                            |  2833     6
    45       |typedef __uint64_t      __fsfilcnt_t;                                                            |  2834     6
    46       |typedef __uint32_t      __gid_t;                                                                 |  2835     6
    47       |typedef __int64_t       __id_t;         /* can hold a gid_t, pid_t, or uid_t */                  |  2836     6
    48       |typedef __uint32_t      __ino_t;        /* inode number */                                       |  2837     6
    49       |typedef long            __key_t;        /* IPC key (for Sys V IPC) */                            |  2838     6
    50       |typedef __int32_t       __lwpid_t;      /* Thread ID (a.k.a. LWP) */                             |  2839     6
    51       |typedef __uint16_t      __mode_t;       /* permissions */                                        |  2840     6
    52       |typedef int             __nl_item;                                                               |  2841     6
    53       |typedef __uint16_t      __nlink_t;      /* link count */                                         |  2842     6
    54       |typedef __int64_t       __off_t;        /* file offset */                                        |  2843     6
    55       |typedef __int32_t       __pid_t;        /* process [group] */                                    |  2844     6
    56       |typedef __int64_t       __rlim_t;       /* resource limit - intentionally */                     |  2845     6
    57       |                                        /* signed, because of legacy code */                     |  2846     6
    58       |                                        /* that uses -1 for RLIM_INFINITY */                     |  2847     6
    59       |typedef __uint8_t       __sa_family_t;                                                           |  2848     6
    60       |typedef __uint32_t      __socklen_t;                                                             |  2849     6
    61       |typedef long            __suseconds_t;  /* microseconds (signed) */                              |  2850     6
    62       |typedef __int32_t       __timer_t;      /* timer_gettime()... */                                 |  2851     6
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    56


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    63       |typedef __uint32_t      __uid_t;                                                                 |  2852     6
    64       |typedef unsigned int    __useconds_t;   /* microseconds (unsigned) */                            |  2853     6
    65       |                                                                                                 |  2854     6
    66       |/*                                                                                               |  2855     6
    67       | * Unusual type definitions.                                                                     |  2856     6
    68       | */                                                                                              |  2857     6
    69       |/*                                                                                               |  2858     6
    70       | * rune_t is declared to be an ``int'' instead of the more natural                               |  2859     6
    71       | * ``unsigned long'' or ``long''.  Two things are happening here.  It is not                     |  2860     6
    72       | * unsigned so that EOF (-1) can be naturally assigned to it and used.  Also,                    |  2861     6
    73       | * it looks like 10646 will be a 31 bit standard.  This means that if your                       |  2862     6
    74       | * ints cannot hold 32 bits, you will be in trouble.  The reason an int was                      |  2863     6
    75       | * chosen over a long is that the is*() and to*() routines take ints (says                       |  2864     6
    76       | * ANSI C), but they use __ct_rune_t instead of int.                                             |  2865     6
    77       | *                                                                                               |  2866     6
    78       | * NOTE: rune_t is not covered by ANSI nor other standards, and should not                       |  2867     6
    79       | * be instantiated outside of lib/libc/locale.  Use wchar_t.  wchar_t and                        |  2868     6
    80       | * rune_t must be the same type.  Also, wint_t must be no narrower than                          |  2869     6
    81       | * wchar_t, and should be able to hold all members of the largest                                |  2870     6
    82       | * character set plus one extra value (WEOF), and must be at least 16 bits.                      |  2871     6
    83       | */                                                                                              |  2872     6
    84       |#ifdef __cplusplus                                                                               |  2873     6
    85       |/* DCXX provides a builtin definition of wchar_t as a keyword, and it matters                    |  2874     6
    86       | * for parameter type matching even though it's the same type (4-byte signed) */                 |  2875     6
    87       |typedef wchar_t         __ct_rune_t;    /* arg type for ctype funcs */                           |  2876     6
    88       |#else                                                                                            |  2877     6
    89       |typedef int             __ct_rune_t;    /* arg type for ctype funcs */                           |  2878     6
    90       |#endif                                                                                           |  2879     6
    91       |typedef __ct_rune_t     __rune_t;       /* rune_t (see above) */                                 |  2880     6
    92       |typedef __ct_rune_t     __wchar_t;      /* wchar_t (see above) */                                |  2881     6
    93       |typedef __ct_rune_t     __wint_t;       /* wint_t (see above) */                                 |  2882     6
    94       |                                                                                                 |  2883     6
    95       |/* In C++11, char16_t and char32_t are builtin types */                                          |  2884     6
    96       |#if defined(__cplusplus) && __cplusplus >= 201103L                                               |  2885     6
    97       |#define _CHAR16_T_DECLARED                                                                       |  2886     6
    98       |#define _CHAR32_T_DECLARED                                                                       |  2887     6
    99       |#endif                                                                                           |  2888     6
   100       |                                                                                                 |  2889     6
   101       |#if !defined(__cplusplus)                                                                        |  2890     6
   102       |typedef __uint_least16_t __char16_t;                                                             |  2891     6
   103       |typedef __uint_least32_t __char32_t;                                                             |  2892     6
   104       |#endif                                                                                           |  2893     6
   105       |                                                                                                 |  2894     6
   106       |                                                                                                 |  2895     6
   107       |typedef __uint32_t      __dev_t;        /* device number */                                      |  2896     6
   108       |                                                                                                 |  2897     6
   109       |typedef __uint32_t      __fixpt_t;      /* fixed point number */                                 |  2898     6
   110       |                                                                                                 |  2899     6
   111       |/*                                                                                               |  2900     6
   112       | * mbstate_t is an opaque object to keep conversion state during multibyte                       |  2901     6
   113       | * stream conversions.                                                                           |  2902     6
   114       | */                                                                                              |  2903     6
   115       |typedef union {                                                                                  |  2904     6
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    57


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   116       |        char            __mbstate8[128];                                                         |  2905     6
   117       |        __int64_t       _mbstateL;      /* for alignment */                                      |  2906     6
   118       |} __mbstate_t;                                                                                   |  2907     6
   119       |                                                                                                 |  2908     6
   120       |#endif /* !_SYS__TYPES_H_ */                                                                     |  2909     6
   121       |#pragma pack(reset)                                                                              |  2910     6
    35       |                                                                                                 |  2911    11
    36       |#ifndef _SUSECONDS_T_DECLARED                                                                    |  2912    11
    37       |typedef __suseconds_t   suseconds_t;                                                             |  2913    11
    38       |#define _SUSECONDS_T_DECLARED                                                                    |  2914    11
    39       |#endif                                                                                           |  2915    11
    40       |                                                                                                 |  2916    11
    41       |#ifndef _TIME_T_DECLARED                                                                         |  2917    11
    42       |typedef __time_t        time_t;                                                                  |  2918    11
    43       |#define _TIME_T_DECLARED                                                                         |  2919    11
    44       |#endif                                                                                           |  2920    11
    45       |                                                                                                 |  2921    11
    46       |/*                                                                                               |  2922    11
    47       | * Structure returned by gettimeofday(2) system call, and used in other calls.                   |  2923    11
    48       | */                                                                                              |  2924    11
    49       |struct timeval {                                                                                 |  2925    11
    50       |        time_t          tv_sec;                                                                  |  2926    11
    51       |        suseconds_t     tv_usec;        /* and microseconds */                                   |  2927    11
    52       |};                                                                                               |  2928    11
    53       |                                                                                                 |  2929    11
    54       |#endif /* !_SYS__TIMEVAL_H_ */                                                                   |  2930    11
    55       |#pragma pack(reset)                                                                              |  2931    11
    42       |#include <sys/timespec.h>                                                                        |  2932     9
     1       |/* release 2.25.00 */                                                                            |  2933    12
     2       |#pragma pack()                                                                                   |  2934    12
     3       |/*-                                                                                              |  2935    12
     4       | * Copyright (c) 1982, 1986, 1993                                                                |  2936    12
     5       | *      The Regents of the University of California.  All rights reserved.                       |  2937    12
     6       | *                                                                                               |  2938    12
     7       | * Redistribution and use in source and binary forms, with or without                            |  2939    12
     8       | * modification, are permitted provided that the following conditions                            |  2940    12
     9       | * are met:                                                                                      |  2941    12
    10       | * 1. Redistributions of source code must retain the above copyright                             |  2942    12
    11       | *    notice, this list of conditions and the following disclaimer.                              |  2943    12
    12       | * 2. Redistributions in binary form must reproduce the above copyright                          |  2944    12
    13       | *    notice, this list of conditions and the following disclaimer in the                        |  2945    12
    14       | *    documentation and/or other materials provided with the distribution.                       |  2946    12
    15       | * 4. Neither the name of the University nor the names of its contributors                       |  2947    12
    16       | *    may be used to endorse or promote products derived from this software                      |  2948    12
    17       | *    without specific prior written permission.                                                 |  2949    12
    18       | *                                                                                               |  2950    12
    19       | * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND                       |  2951    12
    20       | * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE                         |  2952    12
    21       | * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE                    |  2953    12
    22       | * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE                      |  2954    12
    23       | * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL                    |  2955    12
    24       | * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS                       |  2956    12
    25       | * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)                         |  2957    12
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    58


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    26       | * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT                    |  2958    12
    27       | * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY                     |  2959    12
    28       | * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF                        |  2960    12
    29       | * SUCH DAMAGE.                                                                                  |  2961    12
    30       | *                                                                                               |  2962    12
    31       | *      @(#)time.h      8.5 (Berkeley) 5/4/95                                                    |  2963    12
    32       | * from: FreeBSD: src/sys/sys/time.h,v 1.43 2000/03/20 14:09:05 phk Exp                          |  2964    12
    33       | *      $FreeBSD: src/sys/sys/timespec.h,v 1.4 2005/01/07 02:29:24 imp Exp $                     |  2965    12
    34       | */                                                                                              |  2966    12
    35       |                                                                                                 |  2967    12
    36       |/*                                                                                               |  2968    12
    37       | * Prerequisites: <sys/cdefs.h>, <sys/_types.h>                                                  |  2969    12
    38       | */                                                                                              |  2970    12
    39       |                                                                                                 |  2971    12
    40       |#ifndef _SYS_TIMESPEC_H_                                                                         |  2972    12
    41       |#define _SYS_TIMESPEC_H_                                                                         |  2973    12
    42       |                                                                                                 |  2974    12
    43       |#include <sys/_types.h>                                                                          |  2975    12
     1       |/* release 2.25.00 */                                                                            |  2976     6
     2       |#pragma pack()                                                                                   |  2977     6
     3       |/*-                                                                                              |  2978     6
     4       | * Copyright (c) 2002 Mike Barcroft <mike@FreeBSD.org>                                           |  2979     6
     5       | * All rights reserved.                                                                          |  2980     6
     6       | *                                                                                               |  2981     6
     7       | * Redistribution and use in source and binary forms, with or without                            |  2982     6
     8       | * modification, are permitted provided that the following conditions                            |  2983     6
     9       | * are met:                                                                                      |  2984     6
    10       | * 1. Redistributions of source code must retain the above copyright                             |  2985     6
    11       | *    notice, this list of conditions and the following disclaimer.                              |  2986     6
    12       | * 2. Redistributions in binary form must reproduce the above copyright                          |  2987     6
    13       | *    notice, this list of conditions and the following disclaimer in the                        |  2988     6
    14       | *    documentation and/or other materials provided with the distribution.                       |  2989     6
    15       | *                                                                                               |  2990     6
    16       | * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND                        |  2991     6
    17       | * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE                         |  2992     6
    18       | * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE                    |  2993     6
    19       | * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE                       |  2994     6
    20       | * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL                    |  2995     6
    21       | * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS                       |  2996     6
    22       | * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)                         |  2997     6
    23       | * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT                    |  2998     6
    24       | * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY                     |  2999     6
    25       | * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF                        |  3000     6
    26       | * SUCH DAMAGE.                                                                                  |  3001     6
    27       | *                                                                                               |  3002     6
    28       | * $FreeBSD: src/sys/sys/_types.h,v 1.21 2005/03/22 01:19:17 das Exp $                           |  3003     6
    29       | */                                                                                              |  3004     6
    30       |                                                                                                 |  3005     6
    31       |#ifndef _SYS__TYPES_H_                                                                           |  3006     6
    32       |#define _SYS__TYPES_H_                                                                           |  3007     6
    33       |                                                                                                 |  3008     6
    34       |#include <sys/cdefs.h>                                                                           |  3009     6
    35       |#include <machine/_types.h>                                                                      |  3010     6
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    59


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    36       |                                                                                                 |  3011     6
    37       |/*                                                                                               |  3012     6
    38       | * Standard type definitions.                                                                    |  3013     6
    39       | */                                                                                              |  3014     6
    40       |typedef __int32_t       __blksize_t;    /* file block size */                                    |  3015     6
    41       |typedef __int64_t       __blkcnt_t;     /* file block count */                                   |  3016     6
    42       |typedef __int32_t       __clockid_t;    /* clock_gettime()... */                                 |  3017     6
    43       |typedef __uint32_t      __fflags_t;     /* file flags */                                         |  3018     6
    44       |typedef __uint64_t      __fsblkcnt_t;                                                            |  3019     6
    45       |typedef __uint64_t      __fsfilcnt_t;                                                            |  3020     6
    46       |typedef __uint32_t      __gid_t;                                                                 |  3021     6
    47       |typedef __int64_t       __id_t;         /* can hold a gid_t, pid_t, or uid_t */                  |  3022     6
    48       |typedef __uint32_t      __ino_t;        /* inode number */                                       |  3023     6
    49       |typedef long            __key_t;        /* IPC key (for Sys V IPC) */                            |  3024     6
    50       |typedef __int32_t       __lwpid_t;      /* Thread ID (a.k.a. LWP) */                             |  3025     6
    51       |typedef __uint16_t      __mode_t;       /* permissions */                                        |  3026     6
    52       |typedef int             __nl_item;                                                               |  3027     6
    53       |typedef __uint16_t      __nlink_t;      /* link count */                                         |  3028     6
    54       |typedef __int64_t       __off_t;        /* file offset */                                        |  3029     6
    55       |typedef __int32_t       __pid_t;        /* process [group] */                                    |  3030     6
    56       |typedef __int64_t       __rlim_t;       /* resource limit - intentionally */                     |  3031     6
    57       |                                        /* signed, because of legacy code */                     |  3032     6
    58       |                                        /* that uses -1 for RLIM_INFINITY */                     |  3033     6
    59       |typedef __uint8_t       __sa_family_t;                                                           |  3034     6
    60       |typedef __uint32_t      __socklen_t;                                                             |  3035     6
    61       |typedef long            __suseconds_t;  /* microseconds (signed) */                              |  3036     6
    62       |typedef __int32_t       __timer_t;      /* timer_gettime()... */                                 |  3037     6
    63       |typedef __uint32_t      __uid_t;                                                                 |  3038     6
    64       |typedef unsigned int    __useconds_t;   /* microseconds (unsigned) */                            |  3039     6
    65       |                                                                                                 |  3040     6
    66       |/*                                                                                               |  3041     6
    67       | * Unusual type definitions.                                                                     |  3042     6
    68       | */                                                                                              |  3043     6
    69       |/*                                                                                               |  3044     6
    70       | * rune_t is declared to be an ``int'' instead of the more natural                               |  3045     6
    71       | * ``unsigned long'' or ``long''.  Two things are happening here.  It is not                     |  3046     6
    72       | * unsigned so that EOF (-1) can be naturally assigned to it and used.  Also,                    |  3047     6
    73       | * it looks like 10646 will be a 31 bit standard.  This means that if your                       |  3048     6
    74       | * ints cannot hold 32 bits, you will be in trouble.  The reason an int was                      |  3049     6
    75       | * chosen over a long is that the is*() and to*() routines take ints (says                       |  3050     6
    76       | * ANSI C), but they use __ct_rune_t instead of int.                                             |  3051     6
    77       | *                                                                                               |  3052     6
    78       | * NOTE: rune_t is not covered by ANSI nor other standards, and should not                       |  3053     6
    79       | * be instantiated outside of lib/libc/locale.  Use wchar_t.  wchar_t and                        |  3054     6
    80       | * rune_t must be the same type.  Also, wint_t must be no narrower than                          |  3055     6
    81       | * wchar_t, and should be able to hold all members of the largest                                |  3056     6
    82       | * character set plus one extra value (WEOF), and must be at least 16 bits.                      |  3057     6
    83       | */                                                                                              |  3058     6
    84       |#ifdef __cplusplus                                                                               |  3059     6
    85       |/* DCXX provides a builtin definition of wchar_t as a keyword, and it matters                    |  3060     6
    86       | * for parameter type matching even though it's the same type (4-byte signed) */                 |  3061     6
    87       |typedef wchar_t         __ct_rune_t;    /* arg type for ctype funcs */                           |  3062     6
    88       |#else                                                                                            |  3063     6
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    60


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    89       |typedef int             __ct_rune_t;    /* arg type for ctype funcs */                           |  3064     6
    90       |#endif                                                                                           |  3065     6
    91       |typedef __ct_rune_t     __rune_t;       /* rune_t (see above) */                                 |  3066     6
    92       |typedef __ct_rune_t     __wchar_t;      /* wchar_t (see above) */                                |  3067     6
    93       |typedef __ct_rune_t     __wint_t;       /* wint_t (see above) */                                 |  3068     6
    94       |                                                                                                 |  3069     6
    95       |/* In C++11, char16_t and char32_t are builtin types */                                          |  3070     6
    96       |#if defined(__cplusplus) && __cplusplus >= 201103L                                               |  3071     6
    97       |#define _CHAR16_T_DECLARED                                                                       |  3072     6
    98       |#define _CHAR32_T_DECLARED                                                                       |  3073     6
    99       |#endif                                                                                           |  3074     6
   100       |                                                                                                 |  3075     6
   101       |#if !defined(__cplusplus)                                                                        |  3076     6
   102       |typedef __uint_least16_t __char16_t;                                                             |  3077     6
   103       |typedef __uint_least32_t __char32_t;                                                             |  3078     6
   104       |#endif                                                                                           |  3079     6
   105       |                                                                                                 |  3080     6
   106       |                                                                                                 |  3081     6
   107       |typedef __uint32_t      __dev_t;        /* device number */                                      |  3082     6
   108       |                                                                                                 |  3083     6
   109       |typedef __uint32_t      __fixpt_t;      /* fixed point number */                                 |  3084     6
   110       |                                                                                                 |  3085     6
   111       |/*                                                                                               |  3086     6
   112       | * mbstate_t is an opaque object to keep conversion state during multibyte                       |  3087     6
   113       | * stream conversions.                                                                           |  3088     6
   114       | */                                                                                              |  3089     6
   115       |typedef union {                                                                                  |  3090     6
   116       |        char            __mbstate8[128];                                                         |  3091     6
   117       |        __int64_t       _mbstateL;      /* for alignment */                                      |  3092     6
   118       |} __mbstate_t;                                                                                   |  3093     6
   119       |                                                                                                 |  3094     6
   120       |#endif /* !_SYS__TYPES_H_ */                                                                     |  3095     6
   121       |#pragma pack(reset)                                                                              |  3096     6
    44       |                                                                                                 |  3097    12
    45       |#ifndef _TIME_T_DECLARED                                                                         |  3098    12
    46       |typedef __time_t        time_t;                                                                  |  3099    12
    47       |#define _TIME_T_DECLARED                                                                         |  3100    12
    48       |#endif                                                                                           |  3101    12
    49       |                                                                                                 |  3102    12
    50       |struct timespec {                                                                                |  3103    12
    51       |        time_t  tv_sec;         /* seconds */                                                    |  3104    12
    52       |        long    tv_nsec;        /* and nanoseconds */                                            |  3105    12
    53       |};                                                                                               |  3106    12
    54       |                                                                                                 |  3107    12
    55       |#if __BSD_VISIBLE                                                                                |  3108    12
    56       |#define TIMEVAL_TO_TIMESPEC(tv, ts)                                     \                        |  3109    12
    57       |        do {                                                            \                        |  3110    12
    58       |                (ts)->tv_sec = (tv)->tv_sec;                            \                        |  3111    12
    59       |                (ts)->tv_nsec = (tv)->tv_usec * 1000;                   \                        |  3112    12
    60       |        } while (0)                                                                              |  3113    12
    61       |#define TIMESPEC_TO_TIMEVAL(tv, ts)                                     \                        |  3114    12
    62       |        do {                                                            \                        |  3115    12
    63       |                (tv)->tv_sec = (ts)->tv_sec;                            \                        |  3116    12
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    61


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    64       |                (tv)->tv_usec = (ts)->tv_nsec / 1000;                   \                        |  3117    12
    65       |        } while (0)                                                                              |  3118    12
    66       |                                                                                                 |  3119    12
    66       +                                                                                                 +  3119    12
    67       |#endif /* __BSD_VISIBLE */                                                                       |  3120    12
    68       |                                                                                                 |  3121    12
    69       |#endif /* _SYS_TIMESPEC_H_ */                                                                    |  3122    12
    70       |#pragma pack(reset)                                                                              |  3123    12
    43       |                                                                                                 |  3124     9
    44       |typedef unsigned long   __fd_mask;                                                               |  3125     9
    45       |#if __BSD_VISIBLE                                                                                |  3126     9
    46       |typedef __fd_mask       fd_mask;                                                                 |  3127     9
    46       +typedef __fd_mask       fd_mask;                                                                 +  3127     9
    47       |#endif                                                                                           |  3128     9
    48       |                                                                                                 |  3129     9
    49       |#ifndef _SIGSET_T_DECLARED                                                                       |  3130     9
    50       |#define _SIGSET_T_DECLARED                                                                       |  3131     9
    51       |typedef __sigset_t      sigset_t;                                                                |  3132     9
    52       |#endif                                                                                           |  3133     9
    53       |                                                                                                 |  3134     9
    54       |/*                                                                                               |  3135     9
    55       | * Select uses bit masks of file descriptors in longs.  These macros                             |  3136     9
    56       | * manipulate such bit fields (the filesystem macros use chars).                                 |  3137     9
    57       | * FD_SETSIZE may be defined by the user, but the default here should                            |  3138     9
    58       | * be enough for most uses.                                                                      |  3139     9
    59       | */                                                                                              |  3140     9
    60       |#ifndef FD_SETSIZE                                                                               |  3141     9
    61       |#define FD_SETSIZE      1024U                                                                    |  3142     9
    62       |#endif                                                                                           |  3143     9
    63       |                                                                                                 |  3144     9
    64       |#define _NFDBITS        (sizeof(__fd_mask) * 8) /* bits per mask */                              |  3145     9
    65       |#if __BSD_VISIBLE                                                                                |  3146     9
    66       |#define NFDBITS         _NFDBITS                                                                 |  3147     9
    67       |#endif                                                                                           |  3148     9
    68       |                                                                                                 |  3149     9
    68       +                                                                                                 +  3149     9
    69       |#ifndef _howmany                                                                                 |  3150     9
    70       |#define _howmany(x, y)  (((x) + ((y) - 1)) / (y))                                                |  3151     9
    71       |#endif                                                                                           |  3152     9
    72       |                                                                                                 |  3153     9
    73       |typedef struct fd_set {                                                                          |  3154     9
    74       |        __fd_mask       __fds_bits[_howmany(FD_SETSIZE, _NFDBITS)];                              |  3155     9
    74       +                __fd_mask       __fds_bits[(((1024U) + (((sizeof(__fd_mask) * 8)) - 1)) / ((sizeo+  3155     9
    74       +f(__fd_mask) * 8)))];                                                                            +  3155     9
    75       |} fd_set;                                                                                        |  3156     9
    76       |#if __BSD_VISIBLE                                                                                |  3157     9
    77       |#define fds_bits        __fds_bits                                                               |  3158     9
    78       |#endif                                                                                           |  3159     9
    79       |                                                                                                 |  3160     9
    79       +                                                                                                 +  3160     9
    80       |#define __fdset_mask(n) ((__fd_mask)1 << ((n) % _NFDBITS))                                       |  3161     9
    81       |#define FD_CLR(n, p)    ((p)->__fds_bits[(n)/_NFDBITS] &= ~__fdset_mask(n))                      |  3162     9
    82       |#if __BSD_VISIBLE                                                                                |  3163     9
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    62


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    83       |#define FD_COPY(f, t)   (void)(*(t) = *(f))                                                      |  3164     9
    84       |#endif                                                                                           |  3165     9
    85       |#define FD_ISSET(n, p)  (((p)->__fds_bits[(n)/_NFDBITS] & __fdset_mask(n)) != 0)                 |  3166     9
    86       |#define FD_SET(n, p)    ((p)->__fds_bits[(n)/_NFDBITS] |= __fdset_mask(n))                       |  3167     9
    87       |#define FD_ZERO(p) do {                                 \                                        |  3168     9
    88       |        fd_set *_p;                                     \                                        |  3169     9
    89       |        __size_t _n;                                    \                                        |  3170     9
    90       |                                                        \                                        |  3171     9
    91       |        _p = (p);                                       \                                        |  3172     9
    92       |        _n = _howmany(FD_SETSIZE, _NFDBITS);            \                                        |  3173     9
    93       |        while (_n > 0)                                  \                                        |  3174     9
    94       |                _p->__fds_bits[--_n] = 0;               \                                        |  3175     9
    95       |} while (0)                                                                                      |  3176     9
    96       |                                                                                                 |  3177     9
    96       +                                                                                                 +  3177     9
    97       |#ifndef _KERNEL                                                                                  |  3178     9
    98       |                                                                                                 |  3179     9
    99       |__BEGIN_DECLS                                                                                    |  3180     9
    99       +                                                                                                 +  3180     9
   100       |int pselect(int, fd_set *__restrict, fd_set *__restrict, fd_set *__restrict,                     |  3181     9
   100       +int pselect(int, fd_set *__restrict__, fd_set *__restrict__, fd_set *__restrict__,               +  3181     9
   101       |        const struct timespec *__restrict, const sigset_t *__restrict);                          |  3182     9
   101       +                const struct timespec *__restrict__, const sigset_t *__restrict__);              +  3182     9
   102       |#ifndef _SELECT_DECLARED                                                                         |  3183     9
   103       |#define _SELECT_DECLARED                                                                         |  3184     9
   104       |/* XXX missing restrict type-qualifier */                                                        |  3185     9
   105       |int     select(int, fd_set *, fd_set *, fd_set *, struct timeval *);                             |  3186     9
   106       |int     selectex(int, fd_set *, fd_set *, fd_set *, struct timeval *,                            |  3187     9
   107       |                       int *ecbptr);                                                             |  3188     9
   108       |#endif                                                                                           |  3189     9
   109       |__END_DECLS                                                                                      |  3190     9
   109       +                                                                                                 +  3190     9
   110       |#endif /* !_KERNEL */                                                                            |  3191     9
   111       |                                                                                                 |  3192     9
   112       |#endif /* _SYS_SELECT_H_ */                                                                      |  3193     9
   113       |#pragma pack(reset)                                                                              |  3194     9
   302       |                                                                                                 |  3195     3
   303       |#ifndef _KERNEL                                                                                  |  3196     3
   304       |#define major(x)     ((int)(((u_int)(x) >> 16)&0xffff))    /* major number */                    |  3197     3
   305       |#define minor(x)     ((int)((x)&0x0000ffff))               /* minor number */                    |  3198     3
   306       |#endif /* !_KERNEL */                                                                            |  3199     3
   307       |                                                                                                 |  3200     3
   308       |#define makedev(x,y) ((dev_t)(((x) << 16) | ((y)&0xffff))) /* create dev_t */                    |  3201     3
   309       |                                                                                                 |  3202     3
   310       |/*                                                                                               |  3203     3
   311       | * These declarations belong elsewhere, but are repeated here and in                             |  3204     3
   312       | * <stdio.h> to give broken programs a better chance of working with                             |  3205     3
   313       | * 64-bit off_t's.                                                                               |  3206     3
   314       | */                                                                                              |  3207     3
   315       |#ifndef _KERNEL                                                                                  |  3208     3
   316       |__BEGIN_DECLS                                                                                    |  3209     3
   316       +                                                                                                 +  3209     3
   317       |#ifndef _FTRUNCATE_DECLARED                                                                      |  3210     3
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    63


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   318       |#define _FTRUNCATE_DECLARED                                                                      |  3211     3
   319       |#pragma map (ftruncate, "@@FTRUNC")                                                              |  3212     3
   320       |int      ftruncate(int, off_t);                                                                  |  3213     3
   321       |#endif                                                                                           |  3214     3
   322       |#ifndef _LSEEK_DECLARED                                                                          |  3215     3
   323       |#define _LSEEK_DECLARED                                                                          |  3216     3
   324       |off_t    lseek(int, off_t, int);                                                                 |  3217     3
   325       |#endif                                                                                           |  3218     3
   326       |#ifndef _MMAP_DECLARED                                                                           |  3219     3
   327       |#define _MMAP_DECLARED                                                                           |  3220     3
   328       |void *   mmap(void *, size_t, int, int, int, off_t);                                             |  3221     3
   329       |#endif                                                                                           |  3222     3
   330       |#ifndef _TRUNCATE_DECLARED                                                                       |  3223     3
   331       |#define _TRUNCATE_DECLARED                                                                       |  3224     3
   332       |int      truncate(const char *, off_t);                                                          |  3225     3
   333       |#endif                                                                                           |  3226     3
   334       |__END_DECLS                                                                                      |  3227     3
   334       +                                                                                                 +  3227     3
   335       |#endif /* !_KERNEL */                                                                            |  3228     3
   336       |                                                                                                 |  3229     3
   337       |#endif /* __BSD_VISIBLE */                                                                       |  3230     3
   338       |                                                                                                 |  3231     3
   339       |#endif /* !_SYS_TYPES_H_ */                                                                      |  3232     3
   340       |#pragma pack(reset)                                                                              |  3233     3
    22       |#include <unistd.h>                                                                              |  3234     2
     1       |/* release 2.25.00 */                                                                            |  3235    13
     2       |#pragma pack()                                                                                   |  3236    13
     3       |/*-                                                                                              |  3237    13
     4       | * Copyright (c) 1991, 1993, 1994                                                                |  3238    13
     5       | *      The Regents of the University of California.  All rights reserved.                       |  3239    13
     6       | *                                                                                               |  3240    13
     7       | * Redistribution and use in source and binary forms, with or without                            |  3241    13
     8       | * modification, are permitted provided that the following conditions                            |  3242    13
     9       | * are met:                                                                                      |  3243    13
    10       | * 1. Redistributions of source code must retain the above copyright                             |  3244    13
    11       | *    notice, this list of conditions and the following disclaimer.                              |  3245    13
    12       | * 2. Redistributions in binary form must reproduce the above copyright                          |  3246    13
    13       | *    notice, this list of conditions and the following disclaimer in the                        |  3247    13
    14       | *    documentation and/or other materials provided with the distribution.                       |  3248    13
    15       | * 3. All advertising materials mentioning features or use of this software                      |  3249    13
    16       | *    must display the following acknowledgement:                                                |  3250    13
    17       | *      This product includes software developed by the University of                            |  3251    13
    18       | *      California, Berkeley and its contributors.                                               |  3252    13
    19       | * 4. Neither the name of the University nor the names of its contributors                       |  3253    13
    20       | *    may be used to endorse or promote products derived from this software                      |  3254    13
    21       | *    without specific prior written permission.                                                 |  3255    13
    22       | *                                                                                               |  3256    13
    23       | * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND                       |  3257    13
    24       | * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE                         |  3258    13
    25       | * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE                    |  3259    13
    26       | * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE                      |  3260    13
    27       | * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL                    |  3261    13
    28       | * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS                       |  3262    13
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    64


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    29       | * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)                         |  3263    13
    30       | * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT                    |  3264    13
    31       | * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY                     |  3265    13
    32       | * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF                        |  3266    13
    33       | * SUCH DAMAGE.                                                                                  |  3267    13
    34       | *                                                                                               |  3268    13
    35       | *      @(#)unistd.h    8.12 (Berkeley) 4/27/95                                                  |  3269    13
    36       | */                                                                                              |  3270    13
    37       |                                                                                                 |  3271    13
    38       |#ifndef _UNISTD_H_                                                                               |  3272    13
    39       |#define _UNISTD_H_                                                                               |  3273    13
    40       |                                                                                                 |  3274    13
    41       |#include <sys/cdefs.h>                                                                           |  3275    13
     1       |/* release 2.25.00 */                                                                            |  3276     4
     2       |#pragma pack()                                                                                   |  3277     4
     3       |/*                                                                                               |  3278     4
     4       | * Copyright (c) 1991, 1993                                                                      |  3279     4
     5       | *      The Regents of the University of California.  All rights reserved.                       |  3280     4
     6       | *                                                                                               |  3281     4
     7       | * This code is derived from software contributed to Berkeley by                                 |  3282     4
     8       | * Berkeley Software Design, Inc.                                                                |  3283     4
     9       | *                                                                                               |  3284     4
    10       | * Redistribution and use in source and binary forms, with or without                            |  3285     4
    11       | * modification, are permitted provided that the following conditions                            |  3286     4
    12       | * are met:                                                                                      |  3287     4
    13       | * 1. Redistributions of source code must retain the above copyright                             |  3288     4
    14       | *    notice, this list of conditions and the following disclaimer.                              |  3289     4
    15       | * 2. Redistributions in binary form must reproduce the above copyright                          |  3290     4
    16       | *    notice, this list of conditions and the following disclaimer in the                        |  3291     4
    17       | *    documentation and/or other materials provided with the distribution.                       |  3292     4
    18       | * 3. All advertising materials mentioning features or use of this software                      |  3293     4
    19       | *    must display the following acknowledgement:                                                |  3294     4
    20       | *      This product includes software developed by the University of                            |  3295     4
    21       | *      California, Berkeley and its contributors.                                               |  3296     4
    22       | * 4. Neither the name of the University nor the names of its contributors                       |  3297     4
    23       | *    may be used to endorse or promote products derived from this software                      |  3298     4
    24       | *    without specific prior written permission.                                                 |  3299     4
    25       | *                                                                                               |  3300     4
    26       | * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND                       |  3301     4
    27       | * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE                         |  3302     4
    28       | * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE                    |  3303     4
    29       | * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE                      |  3304     4
    30       | * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL                    |  3305     4
    31       | * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS                       |  3306     4
    32       | * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)                         |  3307     4
    33       | * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT                    |  3308     4
    34       | * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY                     |  3309     4
    35       | * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF                        |  3310     4
    36       | * SUCH DAMAGE.                                                                                  |  3311     4
    37       | *                                                                                               |  3312     4
    38       | *      @(#)cdefs.h     8.8 (Berkeley) 1/9/95                                                    |  3313     4
    39       | */                                                                                              |  3314     4
    40       |                                                                                                 |  3315     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    65


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    41       |#ifndef _SYS_CDEFS_H_                                                                            |  3316     4
    42       |#define _SYS_CDEFS_H_                                                                            |  3317     4
    43       |                                                                                                 |  3318     4
    44       |#if defined(__cplusplus)                                                                         |  3319     4
    45       |#define __BEGIN_DECLS   extern "C" {                                                             |  3320     4
    46       |#define __END_DECLS     }                                                                        |  3321     4
    47       |#else                                                                                            |  3322     4
    48       |#define __BEGIN_DECLS                                                                            |  3323     4
    49       |#define __END_DECLS                                                                              |  3324     4
    50       |#endif                                                                                           |  3325     4
    51       |                                                                                                 |  3326     4
    52       |/*                                                                                               |  3327     4
    53       | * This code has been put in place to help reduce the addition of                                |  3328     4
    54       | * compiler specific defines in the code.  It helps to aid in                                    |  3329     4
    55       | * having a compiler-agnostic source tree.                                                       |  3330     4
    56       | */                                                                                              |  3331     4
    57       |#define __CC_SUPPORTS_INLINE 1                                                                   |  3332     4
    58       |#define __CC_SUPPORTS___INLINE 1                                                                 |  3333     4
    59       |#define __CC_SUPPORTS___INLINE__ 1                                                               |  3334     4
    60       |                                                                                                 |  3335     4
    61       |#define __CC_SUPPORTS___FUNC__ 1                                                                 |  3336     4
    62       |                                                                                                 |  3337     4
    63       |                                                                                                 |  3338     4
    64       |/*                                                                                               |  3339     4
    65       | * The __CONCAT macro is used to concatenate parts of symbol names, e.g.                         |  3340     4
    66       | * with "#define OLD(foo) __CONCAT(old,foo)", OLD(foo) produces oldfoo.                          |  3341     4
    67       | * The __CONCAT macro is a bit tricky to use if it must work in non-ANSI                         |  3342     4
    68       | * mode -- there must be no spaces between its arguments, and for nested                         |  3343     4
    69       | * __CONCAT's, all the __CONCAT's must be at the left.  __CONCAT can also                        |  3344     4
    70       | * concatenate double-quoted strings produced by the __STRING macro, but                         |  3345     4
    71       | * this only works with ANSI C.                                                                  |  3346     4
    72       | *                                                                                               |  3347     4
    73       | * __XSTRING is like __STRING, but it expands any macros in its argument                         |  3348     4
    74       | * first.  It is only available with ANSI C.                                                     |  3349     4
    75       | */                                                                                              |  3350     4
    76       |#if defined(__STDC__) || defined(__cplusplus)                                                    |  3351     4
    77       |#define __P(protos)     protos          /* full-blown ANSI C */                                  |  3352     4
    78       |#define __CONCAT1(x,y)  x ## y                                                                   |  3353     4
    79       |#define __CONCAT(x,y)   __CONCAT1(x,y)                                                           |  3354     4
    80       |#define __STRING(x)     #x              /* stringify without expanding x */                      |  3355     4
    81       |#define __XSTRING(x)    __STRING(x)     /* expand x, then stringify */                           |  3356     4
    82       |                                                                                                 |  3357     4
    83       |#define __const         const           /* define reserved names to standard */                  |  3358     4
    84       |#define __signed        signed                                                                   |  3359     4
    85       |#define __volatile      volatile                                                                 |  3360     4
    86       |#if defined(__cplusplus)                                                                         |  3361     4
    87       |#define __inline        inline          /* convert to C++ keyword */                             |  3362     4
    88       |#else                                                                                            |  3363     4
    89       |#define __inline        __inline__      /* Use the Systems/C keyword */                          |  3364     4
    90       |#endif /* !__cplusplus */                                                                        |  3365     4
    91       |                                                                                                 |  3366     4
    92       |#else   /* !(__STDC__ || __cplusplus) */                                                         |  3367     4
    93       |#define __P(protos)     ()              /* traditional C preprocessor */                         |  3368     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    66


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    94       |#define __CONCAT(x,y)   x/**/y                                                                   |  3369     4
    95       |#define __STRING(x)     "x"                                                                      |  3370     4
    96       |                                                                                                 |  3371     4
    97       |#define __const                         /* delete pseudo-ANSI C keywords */                      |  3372     4
    98       |#define __inline                                                                                 |  3373     4
    99       |#define __signed                                                                                 |  3374     4
   100       |#define __volatile                                                                               |  3375     4
   101       |/*                                                                                               |  3376     4
   102       | * In non-ANSI C environments, new programs will want ANSI-only C keywords                       |  3377     4
   103       | * deleted from the program and old programs will want them left alone.                          |  3378     4
   104       | * When using a compiler other than Dignus, programs using the ANSI C keywords                   |  3379     4
   105       | * const, inline etc. as normal identifiers should define -DNO_ANSI_KEYWORDS.                    |  3380     4
   106       | */                                                                                              |  3381     4
   107       |#ifndef NO_ANSI_KEYWORDS                                                                         |  3382     4
   108       |#define const                           /* delete ANSI C keywords */                             |  3383     4
   109       |#define inline                                                                                   |  3384     4
   110       |#define signed                                                                                   |  3385     4
   111       |#define volatile                                                                                 |  3386     4
   112       |#endif  /* !NO_ANSI_KEYWORDS */                                                                  |  3387     4
   113       |#endif  /* !(__STDC__ || __cplusplus) */                                                         |  3388     4
   114       |                                                                                                 |  3389     4
   115       |/*                                                                                               |  3390     4
   116       | * Compiler-dependent macros to help declare dead (non-returning) and                            |  3391     4
   117       | * pure (no side effects) functions, and unused variables.                                       |  3392     4
   118       | */                                                                                              |  3393     4
   119       |#define __dead2 __attribute__((__noreturn__))                                                    |  3394     4
   120       |#define __pure  __attribute__((__pure__))                                                        |  3395     4
   121       |#define __pure2 __attribute__((__const__))                                                       |  3396     4
   122       |#define __unused                                                                                 |  3397     4
   123       |#define __aligned(x)                                                                             |  3398     4
   124       |#define __section(x)                                                                             |  3399     4
   125       |#define __nonnull(x)                                                                             |  3400     4
   126       |#define __used                                                                                   |  3401     4
   127       |                                                                                                 |  3402     4
   128       |#define __always_inline __attribute__((__always_inline__))                                       |  3403     4
   129       |#define __noinline      __attribute__((__noinline__))                                            |  3404     4
   130       |                                                                                                 |  3405     4
   131       |#if __STDC_VERSION__ < 199901                                                                    |  3406     4
   132       |#define __func__  NULL                                                                           |  3407     4
   133       |#endif                                                                                           |  3408     4
   134       |                                                                                                 |  3409     4
   135       |#if !defined(__STRICT_ANSI__) || __STDC_VERSION__ >= 199901                                      |  3410     4
   136       |#define __LONG_LONG_SUPPORTED                                                                    |  3411     4
   137       |#endif                                                                                           |  3412     4
   138       |                                                                                                 |  3413     4
   139       |/* Systems/C recognizes they keyword __restrict__ in both                                        |  3414     4
   140       | * ANSI and non-ANSI mode to indicate C99 restrict semantics.                                    |  3415     4
   141       | **/                                                                                             |  3416     4
   142       |#ifndef __cplusplus                                                                              |  3417     4
   143       |#define __restrict __restrict__                                                                  |  3418     4
   144       |#else                                                                                            |  3419     4
   145       |/* Systems/C++ does not */                                                                       |  3420     4
   146       |#define __restrict                                                                               |  3421     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    67


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   147       |#endif                                                                                           |  3422     4
   148       |                                                                                                 |  3423     4
   149       |/*                                                                                               |  3424     4
   150       | * define-away GCC-specific branch-prediction markers                                            |  3425     4
   151       | */                                                                                              |  3426     4
   152       |#define __predict_true(exp)     (exp)                                                            |  3427     4
   153       |#define __predict_false(exp)    (exp)                                                            |  3428     4
   154       |                                                                                                 |  3429     4
   155       |                                                                                                 |  3430     4
   156       |/*                                                                                               |  3431     4
   157       | * provide a definition of __offsetof(), <stddef.h> and                                          |  3432     4
   158       | * <sys/types.h> reference __offsetof().                                                         |  3433     4
   159       | *                                                                                               |  3434     4
   160       | * For Systems/C, the C compiler recognizes __offsetof(),                                        |  3435     4
   161       | * but we need a definition for versions of C++ prior to 1.85.52.                                |  3436     4
   162       | */                                                                                              |  3437     4
   163       |#if defined(__cplusplus) && (__SYSC_VER__ < (18600))                                             |  3438     4
   164       |#undef __offsetof                                                                                |  3439     4
   165       |#define __offsetof(type, field)  ((size_t)(&((type *)0)->field))                                 |  3440     4
   166       |#endif                                                                                           |  3441     4
   167       |                                                                                                 |  3442     4
   168       |/*                                                                                               |  3443     4
   169       | * Compiler-dependent macros to declare that functions take printf-like                          |  3444     4
   170       | * or scanf-like arguments.                                                                      |  3445     4
   171       | */                                                                                              |  3446     4
   172       |#define __printflike(fmtarg, firstvararg)                                                        |  3447     4
   173       |#define __scanflike(fmtarg, firstvararg)                                                         |  3448     4
   174       |#define __format_arg(fmtarg)                                                                     |  3449     4
   175       |#define __printf0like(fmtarg, firstvararg)                                                       |  3450     4
   176       |                                                                                                 |  3451     4
   177       |/* Compiler-dependent macros that rely on specific extensions. */                                |  3452     4
   178       |#define __printf0like(fmtarg, firstvararg)                                                       |  3453     4
   179       |                                                                                                 |  3454     4
   180       |  /* intended to generate a weak reference as an alias */                                        |  3455     4
   181       |#define __weak_reference(sym,alias)                                                              |  3456     4
   182       |  /* If this symbol is refrenced, cause the linker to emit "msg" */                              |  3457     4
   183       |#define __warn_references(sym,msg)                                                               |  3458     4
   184       |                                                                                                 |  3459     4
   185       | /* This places the string into the resulting object.  It should */                              |  3460     4
   186       | /* probably become #pragma ident */                                                             |  3461     4
   187       |#define __IDSTRING(name,string) static const char name[] __unused = string                       |  3462     4
   188       |                                                                                                 |  3463     4
   189       |#ifndef __RCSID                                                                                  |  3464     4
   190       |#define __RCSID(s)      __IDSTRING(rcsid,s)                                                      |  3465     4
   191       |#endif                                                                                           |  3466     4
   192       |                                                                                                 |  3467     4
   193       |/*                                                                                               |  3468     4
   194       | * Embed the rcs id of a source file in the resulting library.                                   |  3469     4
   195       | * Usage:                                                                                        |  3470     4
   196       | *      __SYSCID("Id: src/sys/sys/cdefs.h,v 1.28.2.8 2002/09/18                                  |  3471     4
   197       |*                                            04:05:13 mikeh Exp $");                             |  3472     4
   198       | */                                                                                              |  3473     4
   199       |#ifndef __SYSCID                                                                                 |  3474     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    68


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   200       |#if !defined(lint) && !defined(STRIP_SYSCID)                                                     |  3475     4
   201       |#define __SYSCID(s)     __IDSTRING(__CONCAT(__rcsid_,__LINE__),s)                                |  3476     4
   202       |#else                                                                                            |  3477     4
   203       |#define __SYSCID(s)     struct __hack                                                            |  3478     4
   204       |#endif                                                                                           |  3479     4
   205       |#endif                                                                                           |  3480     4
   206       |                                                                                                 |  3481     4
   207       |#ifndef __RCSID_SOURCE                                                                           |  3482     4
   208       |#define __RCSID_SOURCE(s) __IDSTRING(rcsid_source,s)                                             |  3483     4
   209       |#endif                                                                                           |  3484     4
   210       |                                                                                                 |  3485     4
   211       |#ifndef __COPYRIGHT                                                                              |  3486     4
   212       |#define __COPYRIGHT(s)  __IDSTRING(copyright,s)                                                  |  3487     4
   213       |#endif                                                                                           |  3488     4
   214       |                                                                                                 |  3489     4
   215       |                                                                                                 |  3490     4
   216       |#ifndef __DECONST                                                                                |  3491     4
   217       |#define __DECONST(type, var)    ((type)(uintptr_t)(const void *)(var))                           |  3492     4
   218       |#endif                                                                                           |  3493     4
   219       |                                                                                                 |  3494     4
   220       |#ifndef __DEVOLATILE                                                                             |  3495     4
   221       |#define __DEVOLATILE(type, var) ((type)(uintptr_t)(volatile void *)(var))                        |  3496     4
   222       |#endif                                                                                           |  3497     4
   223       |                                                                                                 |  3498     4
   224       |#ifndef __DEQUALIFY                                                                              |  3499     4
   225       |#define __DEQUALIFY(type, var)  ((type)(uintptr_t)(const volatile void *)(var))                  |  3500     4
   226       |#endif                                                                                           |  3501     4
   227       |                                                                                                 |  3502     4
   228       |                                                                                                 |  3503     4
   229       |/*-                                                                                              |  3504     4
   230       | * The following definitions are an extension of the behavior originally                         |  3505     4
   231       | * implemented in <sys/_posix.h>, but with a different level of granularity.                     |  3506     4
   232       | * POSIX.1 requires that the macros we test be defined before any standard                       |  3507     4
   233       | * header file is included.                                                                      |  3508     4
   234       | *                                                                                               |  3509     4
   235       | * Here's a quick run-down of the versions:                                                      |  3510     4
   236       | *  defined(_POSIX_SOURCE)              1003.1-1988                                              |  3511     4
   237       | *  _POSIX_C_SOURCE == 1                1003.1-1990                                              |  3512     4
   238       | *  _POSIX_C_SOURCE == 2                1003.2-1992 C Language Binding Option                    |  3513     4
   239       | *  _POSIX_C_SOURCE == 199309           1003.1b-1993                                             |  3514     4
   240       | *  _POSIX_C_SOURCE == 199506           1003.1c-1995, 1003.1i-1995,                              |  3515     4
   241       | *                                      and the omnibus ISO/IEC 9945-1: 1996                     |  3516     4
   242       | *  _POSIX_C_SOURCE == 200112           1003.1-2001                                              |  3517     4
   243       | *  _POSIX_C_SOURCE == 200809           1003.1-2008                                              |  3518     4
   244       | *                                                                                               |  3519     4
   245       | * In addition, the X/Open Portability Guide, which is now the Single UNIX                       |  3520     4
   246       | * Specification, defines a feature-test macro which indicates the version of                    |  3521     4
   247       | * that specification, and which subsumes _POSIX_C_SOURCE.                                       |  3522     4
   248       | *                                                                                               |  3523     4
   249       | * Our macros begin with two underscores to avoid namespace screwage.                            |  3524     4
   250       | */                                                                                              |  3525     4
   251       |                                                                                                 |  3526     4
   252       |/*                                                                                               |  3527     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    69


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   253       | * If no special macro was specified, make the DragonFly extensions                              |  3528     4
   254       | * available. Also make them available when requested so.                                        |  3529     4
   255       | */                                                                                              |  3530     4
   256       |#if (!defined(_POSIX_C_SOURCE) && !defined(_XOPEN_SOURCE) && \                                   |  3531     4
   257       |    !defined(_ANSI_SOURCE) && !defined(_C99_SOURCE)) || \                                        |  3532     4
   258       |    defined(_DRAGONFLY_SOURCE) || defined(_NETBSD_SOURCE)                                        |  3533     4
   259       |#define __DF_VISIBLE    1                                                                        |  3534     4
   260       |#else                                                                                            |  3535     4
   261       |#define __DF_VISIBLE    0                                                                        |  3536     4
   262       |#endif                                                                                           |  3537     4
   263       |                                                                                                 |  3538     4
   264       |/*-                                                                                              |  3539     4
   265       | * The following definitions are an extension of the behavior originally                         |  3540     4
   266       | * implemented in <sys/_posix.h>, but with a different level of granularity.                     |  3541     4
   267       | * POSIX.1 requires that the macros we test be defined before any standard                       |  3542     4
   268       | * header file is included.                                                                      |  3543     4
   269       | *                                                                                               |  3544     4
   270       | * Here's a quick run-down of the versions:                                                      |  3545     4
   271       | *  defined(_POSIX_SOURCE)              1003.1-1988                                              |  3546     4
   272       | *  _POSIX_C_SOURCE == 1                1003.1-1990                                              |  3547     4
   273       | *  _POSIX_C_SOURCE == 2                1003.2-1992 C Language Binding Option                    |  3548     4
   274       | *  _POSIX_C_SOURCE == 199309           1003.1b-1993                                             |  3549     4
   275       | *  _POSIX_C_SOURCE == 199506           1003.1c-1995, 1003.1i-1995,                              |  3550     4
   276       | *                                      and the omnibus ISO/IEC 9945-1: 1996                     |  3551     4
   277       | *  _POSIX_C_SOURCE == 200112           1003.1-2001                                              |  3552     4
   278       | *  _POSIX_C_SOURCE == 200809           1003.1-2008                                              |  3553     4
   279       | *                                                                                               |  3554     4
   280       | * In addition, the X/Open Portability Guide, which is now the Single UNIX                       |  3555     4
   281       | * Specification, defines a feature-test macro which indicates the version of                    |  3556     4
   282       | * that specification, and which subsumes _POSIX_C_SOURCE.                                       |  3557     4
   283       | *                                                                                               |  3558     4
   284       | * Our macros begin with two underscores to avoid namespace screwage.                            |  3559     4
   285       | */                                                                                              |  3560     4
   286       |                                                                                                 |  3561     4
   287       |/* Deal with IEEE Std. 1003.1-1990, in which _POSIX_C_SOURCE == 1. */                            |  3562     4
   288       |#if defined(_POSIX_C_SOURCE) && _POSIX_C_SOURCE == 1                                             |  3563     4
   289       |#undef _POSIX_C_SOURCE          /* Probably illegal, but beyond caring now. */                   |  3564     4
   290       |#define _POSIX_C_SOURCE         199009                                                           |  3565     4
   291       |#endif                                                                                           |  3566     4
   292       |                                                                                                 |  3567     4
   293       |/* Deal with IEEE Std. 1003.2-1992, in which _POSIX_C_SOURCE == 2. */                            |  3568     4
   294       |#if defined(_POSIX_C_SOURCE) && _POSIX_C_SOURCE == 2                                             |  3569     4
   295       |#undef _POSIX_C_SOURCE                                                                           |  3570     4
   296       |#define _POSIX_C_SOURCE         199209                                                           |  3571     4
   297       |#endif                                                                                           |  3572     4
   298       |                                                                                                 |  3573     4
   299       |/* Deal with various X/Open Portability Guides and Single UNIX Spec. */                          |  3574     4
   300       |#ifdef _XOPEN_SOURCE                                                                             |  3575     4
   301       |#if _XOPEN_SOURCE - 0 >= 700                                                                     |  3576     4
   302       |#define __XSI_VISIBLE           700                                                              |  3577     4
   303       |#undef _POSIX_C_SOURCE                                                                           |  3578     4
   304       |#define _POSIX_C_SOURCE         200809                                                           |  3579     4
   305       |#elif _XOPEN_SOURCE - 0 >= 600                                                                   |  3580     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    70


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   306       |#define __XSI_VISIBLE           600                                                              |  3581     4
   307       |#undef _POSIX_C_SOURCE                                                                           |  3582     4
   308       |#define _POSIX_C_SOURCE         200112                                                           |  3583     4
   309       |#elif _XOPEN_SOURCE - 0 >= 500                                                                   |  3584     4
   310       |#define __XSI_VISIBLE           500                                                              |  3585     4
   311       |#undef _POSIX_C_SOURCE                                                                           |  3586     4
   312       |#define _POSIX_C_SOURCE         199506                                                           |  3587     4
   313       |#endif                                                                                           |  3588     4
   314       |#endif                                                                                           |  3589     4
   315       |                                                                                                 |  3590     4
   316       |/*                                                                                               |  3591     4
   317       | * Deal with all versions of POSIX.  The ordering relative to the tests above is                 |  3592     4
   318       | * important.                                                                                    |  3593     4
   319       | */                                                                                              |  3594     4
   320       |#if defined(_POSIX_SOURCE) && !defined(_POSIX_C_SOURCE)                                          |  3595     4
   321       |#define _POSIX_C_SOURCE         198808                                                           |  3596     4
   322       |#endif                                                                                           |  3597     4
   323       |#ifdef _POSIX_C_SOURCE                                                                           |  3598     4
   324       |#if _POSIX_C_SOURCE >= 200809                                                                    |  3599     4
   325       |#define __POSIX_VISIBLE         200809                                                           |  3600     4
   326       |#define __ISO_C_VISIBLE         1999                                                             |  3601     4
   327       |#elif _POSIX_C_SOURCE >= 200112                                                                  |  3602     4
   328       |#define __POSIX_VISIBLE         200112                                                           |  3603     4
   329       |#define __ISO_C_VISIBLE         1999                                                             |  3604     4
   330       |#elif _POSIX_C_SOURCE >= 199506                                                                  |  3605     4
   331       |#define __POSIX_VISIBLE         199506                                                           |  3606     4
   332       |#define __ISO_C_VISIBLE         1990                                                             |  3607     4
   333       |#elif _POSIX_C_SOURCE >= 199309                                                                  |  3608     4
   334       |#define __POSIX_VISIBLE         199309                                                           |  3609     4
   335       |#define __ISO_C_VISIBLE         1990                                                             |  3610     4
   336       |#elif _POSIX_C_SOURCE >= 199209                                                                  |  3611     4
   337       |#define __POSIX_VISIBLE         199209                                                           |  3612     4
   338       |#define __ISO_C_VISIBLE         1990                                                             |  3613     4
   339       |#elif _POSIX_C_SOURCE >= 199009                                                                  |  3614     4
   340       |#define __POSIX_VISIBLE         199009                                                           |  3615     4
   341       |#define __ISO_C_VISIBLE         1990                                                             |  3616     4
   342       |#else                                                                                            |  3617     4
   343       |#define __POSIX_VISIBLE         198808                                                           |  3618     4
   344       |#define __ISO_C_VISIBLE         0                                                                |  3619     4
   345       |#endif /* _POSIX_C_SOURCE */                                                                     |  3620     4
   346       |#else                                                                                            |  3621     4
   347       |/*-                                                                                              |  3622     4
   348       | * Deal with _ANSI_SOURCE:                                                                       |  3623     4
   349       | * If it is defined, and no other compilation environment is explicitly                          |  3624     4
   350       | * requested, then define our internal feature-test macros to zero.  This                        |  3625     4
   351       | * makes no difference to the preprocessor (undefined symbols in preprocessing                   |  3626     4
   352       | * expressions are defined to have value zero), but makes it more convenient for                 |  3627     4
   353       | * a test program to print out the values.                                                       |  3628     4
   354       | *                                                                                               |  3629     4
   355       | * If a program mistakenly defines _ANSI_SOURCE and some other macro such as                     |  3630     4
   356       | * _POSIX_C_SOURCE, we will assume that it wants the broader compilation                         |  3631     4
   357       | * environment (and in fact we will never get here).                                             |  3632     4
   358       | */                                                                                              |  3633     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    71


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   359       |#if defined(_ANSI_SOURCE)       /* Hide almost everything. */                                    |  3634     4
   360       |#define __POSIX_VISIBLE         0                                                                |  3635     4
   361       |#define __XSI_VISIBLE           0                                                                |  3636     4
   362       |#define __BSD_VISIBLE           0                                                                |  3637     4
   363       |#define __ISO_C_VISIBLE         1990                                                             |  3638     4
   364       |#define __EXT1_VISIBLE          0                                                                |  3639     4
   365       |#elif defined(_C99_SOURCE)      /* Localism to specify strict C99 env. */                        |  3640     4
   366       |#define __POSIX_VISIBLE         0                                                                |  3641     4
   367       |#define __XSI_VISIBLE           0                                                                |  3642     4
   368       |#define __BSD_VISIBLE           0                                                                |  3643     4
   369       |#define __ISO_C_VISIBLE         1999                                                             |  3644     4
   370       |#define __EXT1_VISIBLE          0                                                                |  3645     4
   371       |#elif defined(_C11_SOURCE)      /* Localism to specify strict C11 env. */                        |  3646     4
   372       |#define __POSIX_VISIBLE         0                                                                |  3647     4
   373       |#define __XSI_VISIBLE           0                                                                |  3648     4
   374       |#define __BSD_VISIBLE           0                                                                |  3649     4
   375       |#define __ISO_C_VISIBLE         2011                                                             |  3650     4
   376       |#define __EXT1_VISIBLE          0                                                                |  3651     4
   377       |#else                           /* Default environment: show everything. */                      |  3652     4
   378       |#define __POSIX_VISIBLE         200809                                                           |  3653     4
   379       |#define __XSI_VISIBLE           700                                                              |  3654     4
   380       |#define __BSD_VISIBLE           1                                                                |  3655     4
   381       |#define __ISO_C_VISIBLE         2011                                                             |  3656     4
   382       |#define __EXT1_VISIBLE          1                                                                |  3657     4
   383       |#endif                                                                                           |  3658     4
   384       |#endif                                                                                           |  3659     4
   385       |                                                                                                 |  3660     4
   386       |/* User override __EXT1_VISIBLE */                                                               |  3661     4
   387       |#if defined(__STDC_WANT_LIB_EXT1__)                                                              |  3662     4
   388       |#undef  __EXT1_VISIBLE                                                                           |  3663     4
   389       |#if __STDC_WANT_LIB_EXT1__                                                                       |  3664     4
   390       |#define __EXT1_VISIBLE          1                                                                |  3665     4
   391       |#else                                                                                            |  3666     4
   392       |#define __EXT1_VISIBLE          0                                                                |  3667     4
   393       |#endif                                                                                           |  3668     4
   394       |#endif /* __STDC_WANT_LIB_EXT1__ */                                                              |  3669     4
   395       |                                                                                                 |  3670     4
   396       |#if defined(__370__) || defined(__mips) || defined(__powerpc64__)                                |  3671     4
   397       |#define __NO_TLS 1                                                                               |  3672     4
   398       |#endif                                                                                           |  3673     4
   399       |                                                                                                 |  3674     4
   400       |                                                                                                 |  3675     4
   401       |/* easier than stripping __FBSDID() from sources - Greg 2008/07/28 */                            |  3676     4
   402       |#define __FBSDID(x)                                                                              |  3677     4
   403       |                                                                                                 |  3678     4
   404       |#endif /* !_SYS_CDEFS_H_ */                                                                      |  3679     4
   405       |#pragma pack(reset)                                                                              |  3680     4
    42       |#include <sys/types.h>                  /* XXX adds too much pollution. */                       |  3681    13
     1       |/* release 2.25.00 */                                                                            |  3682     3
     2       |#pragma pack()                                                                                   |  3683     3
     3       |/*-                                                                                              |  3684     3
     4       | * Copyright (c) 1982, 1986, 1991, 1993, 1994                                                    |  3685     3
     5       | *      The Regents of the University of California.  All rights reserved.                       |  3686     3
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    72


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
     6       | * (c) UNIX System Laboratories, Inc.                                                            |  3687     3
     7       | * All or some portions of this file are derived from material licensed                          |  3688     3
     8       | * to the University of California by American Telephone and Telegraph                           |  3689     3
     9       | * Co. or Unix System Laboratories, Inc. and are reproduced herein with                          |  3690     3
    10       | * the permission of UNIX System Laboratories, Inc.                                              |  3691     3
    11       | *                                                                                               |  3692     3
    12       | * Redistribution and use in source and binary forms, with or without                            |  3693     3
    13       | * modification, are permitted provided that the following conditions                            |  3694     3
    14       | * are met:                                                                                      |  3695     3
    15       | * 1. Redistributions of source code must retain the above copyright                             |  3696     3
    16       | *    notice, this list of conditions and the following disclaimer.                              |  3697     3
    17       | * 2. Redistributions in binary form must reproduce the above copyright                          |  3698     3
    18       | *    notice, this list of conditions and the following disclaimer in the                        |  3699     3
    19       | *    documentation and/or other materials provided with the distribution.                       |  3700     3
    20       | * 4. Neither the name of the University nor the names of its contributors                       |  3701     3
    21       | *    may be used to endorse or promote products derived from this software                      |  3702     3
    22       | *    without specific prior written permission.                                                 |  3703     3
    23       | *                                                                                               |  3704     3
    24       | * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND                       |  3705     3
    25       | * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE                         |  3706     3
    26       | * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE                    |  3707     3
    27       | * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE                      |  3708     3
    28       | * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL                    |  3709     3
    29       | * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS                       |  3710     3
    30       | * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)                         |  3711     3
    31       | * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT                    |  3712     3
    32       | * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY                     |  3713     3
    33       | * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF                        |  3714     3
    34       | * SUCH DAMAGE.                                                                                  |  3715     3
    35       | *                                                                                               |  3716     3
    36       | *      @(#)types.h     8.6 (Berkeley) 2/19/95                                                   |  3717     3
    37       | * $FreeBSD: src/sys/sys/types.h,v 1.92 2005/05/31 15:18:17 rodrigc Exp $                        |  3718     3
    38       | */                                                                                              |  3719     3
    39       |                                                                                                 |  3720     3
    40       |#ifndef _SYS_TYPES_H_                                                                            |  3721     3
    41       |#define _SYS_TYPES_H_                                                                            |  3722     3
    42       |                                                                                                 |  3723     3
    43       |#include <sys/cdefs.h>                                                                           |  3724     3
    44       |                                                                                                 |  3725     3
    45       |/* Machine type dependent parameters. */                                                         |  3726     3
    46       |#include <machine/endian.h>                                                                      |  3727     3
    47       |#include <sys/_types.h>                                                                          |  3728     3
    48       |                                                                                                 |  3729     3
    49       |#include <sys/_pthreadtypes.h>                                                                   |  3730     3
    50       |                                                                                                 |  3731     3
    51       |#if __BSD_VISIBLE                                                                                |  3732     3
    52       |typedef unsigned char   u_char;                                                                  |  3733     3
    53       |typedef unsigned short  u_short;                                                                 |  3734     3
    54       |typedef unsigned int    u_int;                                                                   |  3735     3
    55       |typedef unsigned long   u_long;                                                                  |  3736     3
    56       |#ifndef _KERNEL                                                                                  |  3737     3
    57       |typedef unsigned short  ushort;         /* Sys V compatibility */                                |  3738     3
    58       |typedef unsigned int    uint;           /* Sys V compatibility */                                |  3739     3
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    73


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    59       |#endif                                                                                           |  3740     3
    60       |#endif                                                                                           |  3741     3
    61       |                                                                                                 |  3742     3
    62       |/*                                                                                               |  3743     3
    63       | * XXX POSIX sized integrals that should appear only in <sys/stdint.h>.                          |  3744     3
    64       | */                                                                                              |  3745     3
    65       |#ifndef _INT8_T_DECLARED                                                                         |  3746     3
    66       |typedef __int8_t        int8_t;                                                                  |  3747     3
    67       |#define _INT8_T_DECLARED                                                                         |  3748     3
    68       |#endif                                                                                           |  3749     3
    69       |                                                                                                 |  3750     3
    70       |#ifndef _INT16_T_DECLARED                                                                        |  3751     3
    71       |typedef __int16_t       int16_t;                                                                 |  3752     3
    72       |#define _INT16_T_DECLARED                                                                        |  3753     3
    73       |#endif                                                                                           |  3754     3
    74       |                                                                                                 |  3755     3
    75       |#ifndef _INT32_T_DECLARED                                                                        |  3756     3
    76       |typedef __int32_t       int32_t;                                                                 |  3757     3
    77       |#define _INT32_T_DECLARED                                                                        |  3758     3
    78       |#endif                                                                                           |  3759     3
    79       |                                                                                                 |  3760     3
    80       |#ifndef _INT64_T_DECLARED                                                                        |  3761     3
    81       |typedef __int64_t       int64_t;                                                                 |  3762     3
    82       |#define _INT64_T_DECLARED                                                                        |  3763     3
    83       |#endif                                                                                           |  3764     3
    84       |                                                                                                 |  3765     3
    85       |#ifndef _UINT8_T_DECLARED                                                                        |  3766     3
    86       |typedef __uint8_t       uint8_t;                                                                 |  3767     3
    87       |#define _UINT8_T_DECLARED                                                                        |  3768     3
    88       |#endif                                                                                           |  3769     3
    89       |                                                                                                 |  3770     3
    90       |#ifndef _UINT16_T_DECLARED                                                                       |  3771     3
    91       |typedef __uint16_t      uint16_t;                                                                |  3772     3
    92       |#define _UINT16_T_DECLARED                                                                       |  3773     3
    93       |#endif                                                                                           |  3774     3
    94       |                                                                                                 |  3775     3
    95       |#ifndef _UINT32_T_DECLARED                                                                       |  3776     3
    96       |typedef __uint32_t      uint32_t;                                                                |  3777     3
    97       |#define _UINT32_T_DECLARED                                                                       |  3778     3
    98       |#endif                                                                                           |  3779     3
    99       |                                                                                                 |  3780     3
   100       |#ifndef _UINT64_T_DECLARED                                                                       |  3781     3
   101       |typedef __uint64_t      uint64_t;                                                                |  3782     3
   102       |#define _UINT64_T_DECLARED                                                                       |  3783     3
   103       |#endif                                                                                           |  3784     3
   104       |                                                                                                 |  3785     3
   105       |#ifndef _INTPTR_T_DECLARED                                                                       |  3786     3
   106       |typedef __intptr_t      intptr_t;                                                                |  3787     3
   107       |typedef __uintptr_t     uintptr_t;                                                               |  3788     3
   108       |#define _INTPTR_T_DECLARED                                                                       |  3789     3
   109       |#endif                                                                                           |  3790     3
   110       |                                                                                                 |  3791     3
   111       |typedef __uint8_t       u_int8_t;       /* unsigned integrals (deprecated) */                    |  3792     3
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    74


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   112       |typedef __uint16_t      u_int16_t;                                                               |  3793     3
   113       |typedef __uint32_t      u_int32_t;                                                               |  3794     3
   114       |typedef __uint64_t      u_int64_t;                                                               |  3795     3
   115       |                                                                                                 |  3796     3
   116       |typedef __uint64_t      u_quad_t;       /* quads (deprecated) */                                 |  3797     3
   117       |typedef __int64_t       quad_t;                                                                  |  3798     3
   118       |typedef quad_t *        qaddr_t;                                                                 |  3799     3
   119       |                                                                                                 |  3800     3
   120       |typedef char *          caddr_t;        /* core address */                                       |  3801     3
   121       |typedef __const char *  c_caddr_t;      /* core address, pointer to const */                     |  3802     3
   122       |typedef __volatile char *v_caddr_t;     /* core address, pointer to volatile */                  |  3803     3
   123       |                                                                                                 |  3804     3
   124       |#ifndef _BLKSIZE_T_DECLARED                                                                      |  3805     3
   125       |typedef __blksize_t     blksize_t;                                                               |  3806     3
   126       |#define _BLKSIZE_T_DECLARED                                                                      |  3807     3
   127       |#endif                                                                                           |  3808     3
   128       |                                                                                                 |  3809     3
   129       |#ifndef _BLKCNT_T_DECLARED                                                                       |  3810     3
   130       |typedef __blkcnt_t      blkcnt_t;                                                                |  3811     3
   131       |#define _BLKCNT_T_DECLARED                                                                       |  3812     3
   132       |#endif                                                                                           |  3813     3
   133       |                                                                                                 |  3814     3
   134       |#ifndef _CLOCK_T_DECLARED                                                                        |  3815     3
   135       |typedef __clock_t       clock_t;                                                                 |  3816     3
   136       |#define _CLOCK_T_DECLARED                                                                        |  3817     3
   137       |#endif                                                                                           |  3818     3
   138       |                                                                                                 |  3819     3
   139       |#ifndef _CLOCKID_T_DECLARED                                                                      |  3820     3
   140       |typedef __clockid_t     clockid_t;                                                               |  3821     3
   141       |#define _CLOCKID_T_DECLARED                                                                      |  3822     3
   142       |#endif                                                                                           |  3823     3
   143       |                                                                                                 |  3824     3
   144       |typedef __critical_t    critical_t;     /* Critical section value */                             |  3825     3
   145       |typedef __int64_t       daddr_t;        /* disk address */                                       |  3826     3
   146       |                                                                                                 |  3827     3
   147       |#ifndef _DEV_T_DECLARED                                                                          |  3828     3
   148       |typedef __dev_t         dev_t;          /* device number or struct cdev */                       |  3829     3
   149       |#define _DEV_T_DECLARED                                                                          |  3830     3
   150       |#endif                                                                                           |  3831     3
   151       |                                                                                                 |  3832     3
   152       |#ifndef _FFLAGS_T_DECLARED                                                                       |  3833     3
   153       |typedef __fflags_t      fflags_t;       /* file flags */                                         |  3834     3
   154       |#define _FFLAGS_T_DECLARED                                                                       |  3835     3
   155       |#endif                                                                                           |  3836     3
   156       |                                                                                                 |  3837     3
   157       |typedef __fixpt_t       fixpt_t;        /* fixed point number */                                 |  3838     3
   158       |                                                                                                 |  3839     3
   159       |#ifndef _FSBLKCNT_T_DECLARED            /* for statvfs() */                                      |  3840     3
   160       |typedef __fsblkcnt_t    fsblkcnt_t;                                                              |  3841     3
   161       |typedef __fsfilcnt_t    fsfilcnt_t;                                                              |  3842     3
   162       |#define _FSBLKCNT_T_DECLARED                                                                     |  3843     3
   163       |#endif                                                                                           |  3844     3
   164       |                                                                                                 |  3845     3
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    75


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   165       |#ifndef _GID_T_DECLARED                                                                          |  3846     3
   166       |typedef __gid_t         gid_t;          /* group id */                                           |  3847     3
   167       |#define _GID_T_DECLARED                                                                          |  3848     3
   168       |#endif                                                                                           |  3849     3
   169       |                                                                                                 |  3850     3
   170       |#ifndef _IN_ADDR_T_DECLARED                                                                      |  3851     3
   171       |typedef __uint32_t      in_addr_t;      /* base type for internet address */                     |  3852     3
   172       |#define _IN_ADDR_T_DECLARED                                                                      |  3853     3
   173       |#endif                                                                                           |  3854     3
   174       |                                                                                                 |  3855     3
   175       |#ifndef _IN_PORT_T_DECLARED                                                                      |  3856     3
   176       |typedef __uint16_t      in_port_t;                                                               |  3857     3
   177       |#define _IN_PORT_T_DECLARED                                                                      |  3858     3
   178       |#endif                                                                                           |  3859     3
   179       |                                                                                                 |  3860     3
   180       |#ifndef _ID_T_DECLARED                                                                           |  3861     3
   181       |typedef __id_t          id_t;           /* can hold a uid_t or pid_t */                          |  3862     3
   182       |#define _ID_T_DECLARED                                                                           |  3863     3
   183       |#endif                                                                                           |  3864     3
   184       |                                                                                                 |  3865     3
   185       |#ifndef _INO_T_DECLARED                                                                          |  3866     3
   186       |typedef __ino_t         ino_t;          /* inode number */                                       |  3867     3
   187       |#define _INO_T_DECLARED                                                                          |  3868     3
   188       |#endif                                                                                           |  3869     3
   189       |                                                                                                 |  3870     3
   190       |#ifndef _KEY_T_DECLARED                                                                          |  3871     3
   191       |typedef __key_t         key_t;          /* IPC key (for Sys V IPC) */                            |  3872     3
   192       |#define _KEY_T_DECLARED                                                                          |  3873     3
   193       |#endif                                                                                           |  3874     3
   194       |                                                                                                 |  3875     3
   195       |#ifndef _LWPID_T_DECLARED                                                                        |  3876     3
   196       |typedef __lwpid_t       lwpid_t;        /* Thread ID (a.k.a. LWP) */                             |  3877     3
   197       |#define _LWPID_T_DECLARED                                                                        |  3878     3
   198       |#endif                                                                                           |  3879     3
   199       |                                                                                                 |  3880     3
   200       |#ifndef _MODE_T_DECLARED                                                                         |  3881     3
   201       |typedef __mode_t        mode_t;         /* permissions */                                        |  3882     3
   202       |#define _MODE_T_DECLARED                                                                         |  3883     3
   203       |#endif                                                                                           |  3884     3
   204       |                                                                                                 |  3885     3
   205       |#ifndef _NLINK_T_DECLARED                                                                        |  3886     3
   206       |typedef __nlink_t       nlink_t;        /* link count */                                         |  3887     3
   207       |#define _NLINK_T_DECLARED                                                                        |  3888     3
   208       |#endif                                                                                           |  3889     3
   209       |                                                                                                 |  3890     3
   210       |#ifndef _OFF_T_DECLARED                                                                          |  3891     3
   211       |typedef __off_t         off_t;          /* file offset */                                        |  3892     3
   212       |#define _OFF_T_DECLARED                                                                          |  3893     3
   213       |#endif                                                                                           |  3894     3
   214       |                                                                                                 |  3895     3
   215       |#ifndef _PID_T_DECLARED                                                                          |  3896     3
   216       |typedef __pid_t         pid_t;          /* process id */                                         |  3897     3
   217       |#define _PID_T_DECLARED                                                                          |  3898     3
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    76


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   218       |#endif                                                                                           |  3899     3
   219       |                                                                                                 |  3900     3
   220       |typedef __register_t    register_t;                                                              |  3901     3
   221       |                                                                                                 |  3902     3
   222       |#ifndef _RLIM_T_DECLARED                                                                         |  3903     3
   223       |typedef __rlim_t        rlim_t;         /* resource limit */                                     |  3904     3
   224       |#define _RLIM_T_DECLARED                                                                         |  3905     3
   225       |#endif                                                                                           |  3906     3
   226       |                                                                                                 |  3907     3
   227       |typedef __segsz_t       segsz_t;        /* segment size (in pages) */                            |  3908     3
   228       |                                                                                                 |  3909     3
   229       |#ifndef _SIZE_T_DECLARED                                                                         |  3910     3
   230       |typedef __size_t        size_t;                                                                  |  3911     3
   231       |#define _SIZE_T_DECLARED                                                                         |  3912     3
   232       |#endif                                                                                           |  3913     3
   233       |                                                                                                 |  3914     3
   234       |#ifndef _SSIZE_T_DECLARED                                                                        |  3915     3
   235       |typedef __ssize_t       ssize_t;                                                                 |  3916     3
   236       |#define _SSIZE_T_DECLARED                                                                        |  3917     3
   237       |#endif                                                                                           |  3918     3
   238       |                                                                                                 |  3919     3
   239       |#ifndef _SUSECONDS_T_DECLARED                                                                    |  3920     3
   240       |typedef __suseconds_t   suseconds_t;    /* microseconds (signed) */                              |  3921     3
   241       |#define _SUSECONDS_T_DECLARED                                                                    |  3922     3
   242       |#endif                                                                                           |  3923     3
   243       |                                                                                                 |  3924     3
   244       |#ifndef _TIME_T_DECLARED                                                                         |  3925     3
   245       |typedef __time_t        time_t;                                                                  |  3926     3
   246       |#define _TIME_T_DECLARED                                                                         |  3927     3
   247       |#endif                                                                                           |  3928     3
   248       |                                                                                                 |  3929     3
   249       |#ifndef _TIMER_T_DECLARED                                                                        |  3930     3
   250       |typedef __timer_t       timer_t;                                                                 |  3931     3
   251       |#define _TIMER_T_DECLARED                                                                        |  3932     3
   252       |#endif                                                                                           |  3933     3
   253       |                                                                                                 |  3934     3
   254       |typedef __u_register_t  u_register_t;                                                            |  3935     3
   255       |                                                                                                 |  3936     3
   256       |#ifndef _UID_T_DECLARED                                                                          |  3937     3
   257       |typedef __uid_t         uid_t;          /* user id */                                            |  3938     3
   258       |#define _UID_T_DECLARED                                                                          |  3939     3
   259       |#endif                                                                                           |  3940     3
   260       |                                                                                                 |  3941     3
   261       |#ifndef _USECONDS_T_DECLARED                                                                     |  3942     3
   262       |typedef __useconds_t    useconds_t;     /* microseconds (unsigned) */                            |  3943     3
   263       |#define _USECONDS_T_DECLARED                                                                     |  3944     3
   264       |#endif                                                                                           |  3945     3
   265       |                                                                                                 |  3946     3
   266       |typedef __vm_offset_t   vm_offset_t;                                                             |  3947     3
   267       |typedef __vm_ooffset_t  vm_ooffset_t;                                                            |  3948     3
   268       |typedef __vm_paddr_t    vm_paddr_t;                                                              |  3949     3
   269       |typedef __vm_pindex_t   vm_pindex_t;                                                             |  3950     3
   270       |typedef __vm_size_t     vm_size_t;                                                               |  3951     3
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    77


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   271       |                                                                                                 |  3952     3
   272       |#ifdef _KERNEL                                                                                   |  3953     3
   273       |typedef int             boolean_t;                                                               |  3954     3
   274       |typedef __cpumask_t     cpumask_t;                                                               |  3955     3
   275       |typedef __intfptr_t     intfptr_t;                                                               |  3956     3
   276       |                                                                                                 |  3957     3
   277       |/*-                                                                                              |  3958     3
   278       | * XXX this is fixed width for historical reasons.  It should have had type                      |  3959     3
   279       | * __int_fast32_t.  Fixed-width types should not be used unless binary                           |  3960     3
   280       | * compatibility is essential.  Least-width types should be used even less                       |  3961     3
   281       | * since they provide smaller benefits.                                                          |  3962     3
   282       | * XXX should be MD.                                                                             |  3963     3
   283       | * XXX this is bogus in -current, but still used for spl*().                                     |  3964     3
   284       | */                                                                                              |  3965     3
   285       |typedef __uint32_t      intrmask_t;     /* Interrupt mask (spl, xxx_imask...) */                 |  3966     3
   286       |                                                                                                 |  3967     3
   287       |typedef __uintfptr_t    uintfptr_t;                                                              |  3968     3
   288       |typedef __uint64_t      uoff_t;                                                                  |  3969     3
   289       |typedef struct vm_page  *vm_page_t;                                                              |  3970     3
   290       |                                                                                                 |  3971     3
   291       |#define offsetof(type, field) __offsetof(type, field)                                            |  3972     3
   292       |                                                                                                 |  3973     3
   293       |#endif /* !_KERNEL */                                                                            |  3974     3
   294       |                                                                                                 |  3975     3
   295       |/*                                                                                               |  3976     3
   296       | * The following are all things that really shouldn't exist in this header,                      |  3977     3
   297       | * since its purpose is to provide typedefs, not miscellaneous doodads.                          |  3978     3
   298       | */                                                                                              |  3979     3
   299       |#if __BSD_VISIBLE                                                                                |  3980     3
   300       |                                                                                                 |  3981     3
   301       |#include <sys/select.h>                                                                          |  3982     3
   302       |                                                                                                 |  3983     3
   303       |#ifndef _KERNEL                                                                                  |  3984     3
   304       |#define major(x)     ((int)(((u_int)(x) >> 16)&0xffff))    /* major number */                    |  3985     3
   305       |#define minor(x)     ((int)((x)&0x0000ffff))               /* minor number */                    |  3986     3
   306       |#endif /* !_KERNEL */                                                                            |  3987     3
   307       |                                                                                                 |  3988     3
   308       |#define makedev(x,y) ((dev_t)(((x) << 16) | ((y)&0xffff))) /* create dev_t */                    |  3989     3
   309       |                                                                                                 |  3990     3
   310       |/*                                                                                               |  3991     3
   311       | * These declarations belong elsewhere, but are repeated here and in                             |  3992     3
   312       | * <stdio.h> to give broken programs a better chance of working with                             |  3993     3
   313       | * 64-bit off_t's.                                                                               |  3994     3
   314       | */                                                                                              |  3995     3
   315       |#ifndef _KERNEL                                                                                  |  3996     3
   316       |__BEGIN_DECLS                                                                                    |  3997     3
   317       |#ifndef _FTRUNCATE_DECLARED                                                                      |  3998     3
   318       |#define _FTRUNCATE_DECLARED                                                                      |  3999     3
   319       |#pragma map (ftruncate, "@@FTRUNC")                                                              |  4000     3
   320       |int      ftruncate(int, off_t);                                                                  |  4001     3
   321       |#endif                                                                                           |  4002     3
   322       |#ifndef _LSEEK_DECLARED                                                                          |  4003     3
   323       |#define _LSEEK_DECLARED                                                                          |  4004     3
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    78


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   324       |off_t    lseek(int, off_t, int);                                                                 |  4005     3
   325       |#endif                                                                                           |  4006     3
   326       |#ifndef _MMAP_DECLARED                                                                           |  4007     3
   327       |#define _MMAP_DECLARED                                                                           |  4008     3
   328       |void *   mmap(void *, size_t, int, int, int, off_t);                                             |  4009     3
   329       |#endif                                                                                           |  4010     3
   330       |#ifndef _TRUNCATE_DECLARED                                                                       |  4011     3
   331       |#define _TRUNCATE_DECLARED                                                                       |  4012     3
   332       |int      truncate(const char *, off_t);                                                          |  4013     3
   333       |#endif                                                                                           |  4014     3
   334       |__END_DECLS                                                                                      |  4015     3
   335       |#endif /* !_KERNEL */                                                                            |  4016     3
   336       |                                                                                                 |  4017     3
   337       |#endif /* __BSD_VISIBLE */                                                                       |  4018     3
   338       |                                                                                                 |  4019     3
   339       |#endif /* !_SYS_TYPES_H_ */                                                                      |  4020     3
   340       |#pragma pack(reset)                                                                              |  4021     3
    43       |#include <sys/unistd.h>                                                                          |  4022    13
     1       |/* release 2.25.00 */                                                                            |  4023    14
     2       |#pragma pack()                                                                                   |  4024    14
     3       |/*-                                                                                              |  4025    14
     4       | * Copyright (c) 1989, 1993                                                                      |  4026    14
     5       | *      The Regents of the University of California.  All rights reserved.                       |  4027    14
     6       | *                                                                                               |  4028    14
     7       | * Redistribution and use in source and binary forms, with or without                            |  4029    14
     8       | * modification, are permitted provided that the following conditions                            |  4030    14
     9       | * are met:                                                                                      |  4031    14
    10       | * 1. Redistributions of source code must retain the above copyright                             |  4032    14
    11       | *    notice, this list of conditions and the following disclaimer.                              |  4033    14
    12       | * 2. Redistributions in binary form must reproduce the above copyright                          |  4034    14
    13       | *    notice, this list of conditions and the following disclaimer in the                        |  4035    14
    14       | *    documentation and/or other materials provided with the distribution.                       |  4036    14
    15       | * 4. Neither the name of the University nor the names of its contributors                       |  4037    14
    16       | *    may be used to endorse or promote products derived from this software                      |  4038    14
    17       | *    without specific prior written permission.                                                 |  4039    14
    18       | *                                                                                               |  4040    14
    19       | * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND                       |  4041    14
    20       | * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE                         |  4042    14
    21       | * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE                    |  4043    14
    22       | * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE                      |  4044    14
    23       | * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL                    |  4045    14
    24       | * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS                       |  4046    14
    25       | * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)                         |  4047    14
    26       | * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT                    |  4048    14
    27       | * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY                     |  4049    14
    28       | * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF                        |  4050    14
    29       | * SUCH DAMAGE.                                                                                  |  4051    14
    30       | *                                                                                               |  4052    14
    31       | *      @(#)unistd.h    8.2 (Berkeley) 1/7/94                                                    |  4053    14
    32       | */                                                                                              |  4054    14
    33       |                                                                                                 |  4055    14
    34       |#ifndef _SYS_UNISTD_H_                                                                           |  4056    14
    35       |#define _SYS_UNISTD_H_                                                                           |  4057    14
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    79


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    36       |                                                                                                 |  4058    14
    37       |#include <sys/cdefs.h>                                                                           |  4059    14
     1       |/* release 2.25.00 */                                                                            |  4060     4
     2       |#pragma pack()                                                                                   |  4061     4
     3       |/*                                                                                               |  4062     4
     4       | * Copyright (c) 1991, 1993                                                                      |  4063     4
     5       | *      The Regents of the University of California.  All rights reserved.                       |  4064     4
     6       | *                                                                                               |  4065     4
     7       | * This code is derived from software contributed to Berkeley by                                 |  4066     4
     8       | * Berkeley Software Design, Inc.                                                                |  4067     4
     9       | *                                                                                               |  4068     4
    10       | * Redistribution and use in source and binary forms, with or without                            |  4069     4
    11       | * modification, are permitted provided that the following conditions                            |  4070     4
    12       | * are met:                                                                                      |  4071     4
    13       | * 1. Redistributions of source code must retain the above copyright                             |  4072     4
    14       | *    notice, this list of conditions and the following disclaimer.                              |  4073     4
    15       | * 2. Redistributions in binary form must reproduce the above copyright                          |  4074     4
    16       | *    notice, this list of conditions and the following disclaimer in the                        |  4075     4
    17       | *    documentation and/or other materials provided with the distribution.                       |  4076     4
    18       | * 3. All advertising materials mentioning features or use of this software                      |  4077     4
    19       | *    must display the following acknowledgement:                                                |  4078     4
    20       | *      This product includes software developed by the University of                            |  4079     4
    21       | *      California, Berkeley and its contributors.                                               |  4080     4
    22       | * 4. Neither the name of the University nor the names of its contributors                       |  4081     4
    23       | *    may be used to endorse or promote products derived from this software                      |  4082     4
    24       | *    without specific prior written permission.                                                 |  4083     4
    25       | *                                                                                               |  4084     4
    26       | * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND                       |  4085     4
    27       | * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE                         |  4086     4
    28       | * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE                    |  4087     4
    29       | * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE                      |  4088     4
    30       | * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL                    |  4089     4
    31       | * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS                       |  4090     4
    32       | * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)                         |  4091     4
    33       | * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT                    |  4092     4
    34       | * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY                     |  4093     4
    35       | * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF                        |  4094     4
    36       | * SUCH DAMAGE.                                                                                  |  4095     4
    37       | *                                                                                               |  4096     4
    38       | *      @(#)cdefs.h     8.8 (Berkeley) 1/9/95                                                    |  4097     4
    39       | */                                                                                              |  4098     4
    40       |                                                                                                 |  4099     4
    41       |#ifndef _SYS_CDEFS_H_                                                                            |  4100     4
    42       |#define _SYS_CDEFS_H_                                                                            |  4101     4
    43       |                                                                                                 |  4102     4
    44       |#if defined(__cplusplus)                                                                         |  4103     4
    45       |#define __BEGIN_DECLS   extern "C" {                                                             |  4104     4
    46       |#define __END_DECLS     }                                                                        |  4105     4
    47       |#else                                                                                            |  4106     4
    48       |#define __BEGIN_DECLS                                                                            |  4107     4
    49       |#define __END_DECLS                                                                              |  4108     4
    50       |#endif                                                                                           |  4109     4
    51       |                                                                                                 |  4110     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    80


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    52       |/*                                                                                               |  4111     4
    53       | * This code has been put in place to help reduce the addition of                                |  4112     4
    54       | * compiler specific defines in the code.  It helps to aid in                                    |  4113     4
    55       | * having a compiler-agnostic source tree.                                                       |  4114     4
    56       | */                                                                                              |  4115     4
    57       |#define __CC_SUPPORTS_INLINE 1                                                                   |  4116     4
    58       |#define __CC_SUPPORTS___INLINE 1                                                                 |  4117     4
    59       |#define __CC_SUPPORTS___INLINE__ 1                                                               |  4118     4
    60       |                                                                                                 |  4119     4
    61       |#define __CC_SUPPORTS___FUNC__ 1                                                                 |  4120     4
    62       |                                                                                                 |  4121     4
    63       |                                                                                                 |  4122     4
    64       |/*                                                                                               |  4123     4
    65       | * The __CONCAT macro is used to concatenate parts of symbol names, e.g.                         |  4124     4
    66       | * with "#define OLD(foo) __CONCAT(old,foo)", OLD(foo) produces oldfoo.                          |  4125     4
    67       | * The __CONCAT macro is a bit tricky to use if it must work in non-ANSI                         |  4126     4
    68       | * mode -- there must be no spaces between its arguments, and for nested                         |  4127     4
    69       | * __CONCAT's, all the __CONCAT's must be at the left.  __CONCAT can also                        |  4128     4
    70       | * concatenate double-quoted strings produced by the __STRING macro, but                         |  4129     4
    71       | * this only works with ANSI C.                                                                  |  4130     4
    72       | *                                                                                               |  4131     4
    73       | * __XSTRING is like __STRING, but it expands any macros in its argument                         |  4132     4
    74       | * first.  It is only available with ANSI C.                                                     |  4133     4
    75       | */                                                                                              |  4134     4
    76       |#if defined(__STDC__) || defined(__cplusplus)                                                    |  4135     4
    77       |#define __P(protos)     protos          /* full-blown ANSI C */                                  |  4136     4
    78       |#define __CONCAT1(x,y)  x ## y                                                                   |  4137     4
    79       |#define __CONCAT(x,y)   __CONCAT1(x,y)                                                           |  4138     4
    80       |#define __STRING(x)     #x              /* stringify without expanding x */                      |  4139     4
    81       |#define __XSTRING(x)    __STRING(x)     /* expand x, then stringify */                           |  4140     4
    82       |                                                                                                 |  4141     4
    83       |#define __const         const           /* define reserved names to standard */                  |  4142     4
    84       |#define __signed        signed                                                                   |  4143     4
    85       |#define __volatile      volatile                                                                 |  4144     4
    86       |#if defined(__cplusplus)                                                                         |  4145     4
    87       |#define __inline        inline          /* convert to C++ keyword */                             |  4146     4
    88       |#else                                                                                            |  4147     4
    89       |#define __inline        __inline__      /* Use the Systems/C keyword */                          |  4148     4
    90       |#endif /* !__cplusplus */                                                                        |  4149     4
    91       |                                                                                                 |  4150     4
    92       |#else   /* !(__STDC__ || __cplusplus) */                                                         |  4151     4
    93       |#define __P(protos)     ()              /* traditional C preprocessor */                         |  4152     4
    94       |#define __CONCAT(x,y)   x/**/y                                                                   |  4153     4
    95       |#define __STRING(x)     "x"                                                                      |  4154     4
    96       |                                                                                                 |  4155     4
    97       |#define __const                         /* delete pseudo-ANSI C keywords */                      |  4156     4
    98       |#define __inline                                                                                 |  4157     4
    99       |#define __signed                                                                                 |  4158     4
   100       |#define __volatile                                                                               |  4159     4
   101       |/*                                                                                               |  4160     4
   102       | * In non-ANSI C environments, new programs will want ANSI-only C keywords                       |  4161     4
   103       | * deleted from the program and old programs will want them left alone.                          |  4162     4
   104       | * When using a compiler other than Dignus, programs using the ANSI C keywords                   |  4163     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    81


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   105       | * const, inline etc. as normal identifiers should define -DNO_ANSI_KEYWORDS.                    |  4164     4
   106       | */                                                                                              |  4165     4
   107       |#ifndef NO_ANSI_KEYWORDS                                                                         |  4166     4
   108       |#define const                           /* delete ANSI C keywords */                             |  4167     4
   109       |#define inline                                                                                   |  4168     4
   110       |#define signed                                                                                   |  4169     4
   111       |#define volatile                                                                                 |  4170     4
   112       |#endif  /* !NO_ANSI_KEYWORDS */                                                                  |  4171     4
   113       |#endif  /* !(__STDC__ || __cplusplus) */                                                         |  4172     4
   114       |                                                                                                 |  4173     4
   115       |/*                                                                                               |  4174     4
   116       | * Compiler-dependent macros to help declare dead (non-returning) and                            |  4175     4
   117       | * pure (no side effects) functions, and unused variables.                                       |  4176     4
   118       | */                                                                                              |  4177     4
   119       |#define __dead2 __attribute__((__noreturn__))                                                    |  4178     4
   120       |#define __pure  __attribute__((__pure__))                                                        |  4179     4
   121       |#define __pure2 __attribute__((__const__))                                                       |  4180     4
   122       |#define __unused                                                                                 |  4181     4
   123       |#define __aligned(x)                                                                             |  4182     4
   124       |#define __section(x)                                                                             |  4183     4
   125       |#define __nonnull(x)                                                                             |  4184     4
   126       |#define __used                                                                                   |  4185     4
   127       |                                                                                                 |  4186     4
   128       |#define __always_inline __attribute__((__always_inline__))                                       |  4187     4
   129       |#define __noinline      __attribute__((__noinline__))                                            |  4188     4
   130       |                                                                                                 |  4189     4
   131       |#if __STDC_VERSION__ < 199901                                                                    |  4190     4
   132       |#define __func__  NULL                                                                           |  4191     4
   133       |#endif                                                                                           |  4192     4
   134       |                                                                                                 |  4193     4
   135       |#if !defined(__STRICT_ANSI__) || __STDC_VERSION__ >= 199901                                      |  4194     4
   136       |#define __LONG_LONG_SUPPORTED                                                                    |  4195     4
   137       |#endif                                                                                           |  4196     4
   138       |                                                                                                 |  4197     4
   139       |/* Systems/C recognizes they keyword __restrict__ in both                                        |  4198     4
   140       | * ANSI and non-ANSI mode to indicate C99 restrict semantics.                                    |  4199     4
   141       | **/                                                                                             |  4200     4
   142       |#ifndef __cplusplus                                                                              |  4201     4
   143       |#define __restrict __restrict__                                                                  |  4202     4
   144       |#else                                                                                            |  4203     4
   145       |/* Systems/C++ does not */                                                                       |  4204     4
   146       |#define __restrict                                                                               |  4205     4
   147       |#endif                                                                                           |  4206     4
   148       |                                                                                                 |  4207     4
   149       |/*                                                                                               |  4208     4
   150       | * define-away GCC-specific branch-prediction markers                                            |  4209     4
   151       | */                                                                                              |  4210     4
   152       |#define __predict_true(exp)     (exp)                                                            |  4211     4
   153       |#define __predict_false(exp)    (exp)                                                            |  4212     4
   154       |                                                                                                 |  4213     4
   155       |                                                                                                 |  4214     4
   156       |/*                                                                                               |  4215     4
   157       | * provide a definition of __offsetof(), <stddef.h> and                                          |  4216     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    82


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   158       | * <sys/types.h> reference __offsetof().                                                         |  4217     4
   159       | *                                                                                               |  4218     4
   160       | * For Systems/C, the C compiler recognizes __offsetof(),                                        |  4219     4
   161       | * but we need a definition for versions of C++ prior to 1.85.52.                                |  4220     4
   162       | */                                                                                              |  4221     4
   163       |#if defined(__cplusplus) && (__SYSC_VER__ < (18600))                                             |  4222     4
   164       |#undef __offsetof                                                                                |  4223     4
   165       |#define __offsetof(type, field)  ((size_t)(&((type *)0)->field))                                 |  4224     4
   166       |#endif                                                                                           |  4225     4
   167       |                                                                                                 |  4226     4
   168       |/*                                                                                               |  4227     4
   169       | * Compiler-dependent macros to declare that functions take printf-like                          |  4228     4
   170       | * or scanf-like arguments.                                                                      |  4229     4
   171       | */                                                                                              |  4230     4
   172       |#define __printflike(fmtarg, firstvararg)                                                        |  4231     4
   173       |#define __scanflike(fmtarg, firstvararg)                                                         |  4232     4
   174       |#define __format_arg(fmtarg)                                                                     |  4233     4
   175       |#define __printf0like(fmtarg, firstvararg)                                                       |  4234     4
   176       |                                                                                                 |  4235     4
   177       |/* Compiler-dependent macros that rely on specific extensions. */                                |  4236     4
   178       |#define __printf0like(fmtarg, firstvararg)                                                       |  4237     4
   179       |                                                                                                 |  4238     4
   180       |  /* intended to generate a weak reference as an alias */                                        |  4239     4
   181       |#define __weak_reference(sym,alias)                                                              |  4240     4
   182       |  /* If this symbol is refrenced, cause the linker to emit "msg" */                              |  4241     4
   183       |#define __warn_references(sym,msg)                                                               |  4242     4
   184       |                                                                                                 |  4243     4
   185       | /* This places the string into the resulting object.  It should */                              |  4244     4
   186       | /* probably become #pragma ident */                                                             |  4245     4
   187       |#define __IDSTRING(name,string) static const char name[] __unused = string                       |  4246     4
   188       |                                                                                                 |  4247     4
   189       |#ifndef __RCSID                                                                                  |  4248     4
   190       |#define __RCSID(s)      __IDSTRING(rcsid,s)                                                      |  4249     4
   191       |#endif                                                                                           |  4250     4
   192       |                                                                                                 |  4251     4
   193       |/*                                                                                               |  4252     4
   194       | * Embed the rcs id of a source file in the resulting library.                                   |  4253     4
   195       | * Usage:                                                                                        |  4254     4
   196       | *      __SYSCID("Id: src/sys/sys/cdefs.h,v 1.28.2.8 2002/09/18                                  |  4255     4
   197       |*                                            04:05:13 mikeh Exp $");                             |  4256     4
   198       | */                                                                                              |  4257     4
   199       |#ifndef __SYSCID                                                                                 |  4258     4
   200       |#if !defined(lint) && !defined(STRIP_SYSCID)                                                     |  4259     4
   201       |#define __SYSCID(s)     __IDSTRING(__CONCAT(__rcsid_,__LINE__),s)                                |  4260     4
   202       |#else                                                                                            |  4261     4
   203       |#define __SYSCID(s)     struct __hack                                                            |  4262     4
   204       |#endif                                                                                           |  4263     4
   205       |#endif                                                                                           |  4264     4
   206       |                                                                                                 |  4265     4
   207       |#ifndef __RCSID_SOURCE                                                                           |  4266     4
   208       |#define __RCSID_SOURCE(s) __IDSTRING(rcsid_source,s)                                             |  4267     4
   209       |#endif                                                                                           |  4268     4
   210       |                                                                                                 |  4269     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    83


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   211       |#ifndef __COPYRIGHT                                                                              |  4270     4
   212       |#define __COPYRIGHT(s)  __IDSTRING(copyright,s)                                                  |  4271     4
   213       |#endif                                                                                           |  4272     4
   214       |                                                                                                 |  4273     4
   215       |                                                                                                 |  4274     4
   216       |#ifndef __DECONST                                                                                |  4275     4
   217       |#define __DECONST(type, var)    ((type)(uintptr_t)(const void *)(var))                           |  4276     4
   218       |#endif                                                                                           |  4277     4
   219       |                                                                                                 |  4278     4
   220       |#ifndef __DEVOLATILE                                                                             |  4279     4
   221       |#define __DEVOLATILE(type, var) ((type)(uintptr_t)(volatile void *)(var))                        |  4280     4
   222       |#endif                                                                                           |  4281     4
   223       |                                                                                                 |  4282     4
   224       |#ifndef __DEQUALIFY                                                                              |  4283     4
   225       |#define __DEQUALIFY(type, var)  ((type)(uintptr_t)(const volatile void *)(var))                  |  4284     4
   226       |#endif                                                                                           |  4285     4
   227       |                                                                                                 |  4286     4
   228       |                                                                                                 |  4287     4
   229       |/*-                                                                                              |  4288     4
   230       | * The following definitions are an extension of the behavior originally                         |  4289     4
   231       | * implemented in <sys/_posix.h>, but with a different level of granularity.                     |  4290     4
   232       | * POSIX.1 requires that the macros we test be defined before any standard                       |  4291     4
   233       | * header file is included.                                                                      |  4292     4
   234       | *                                                                                               |  4293     4
   235       | * Here's a quick run-down of the versions:                                                      |  4294     4
   236       | *  defined(_POSIX_SOURCE)              1003.1-1988                                              |  4295     4
   237       | *  _POSIX_C_SOURCE == 1                1003.1-1990                                              |  4296     4
   238       | *  _POSIX_C_SOURCE == 2                1003.2-1992 C Language Binding Option                    |  4297     4
   239       | *  _POSIX_C_SOURCE == 199309           1003.1b-1993                                             |  4298     4
   240       | *  _POSIX_C_SOURCE == 199506           1003.1c-1995, 1003.1i-1995,                              |  4299     4
   241       | *                                      and the omnibus ISO/IEC 9945-1: 1996                     |  4300     4
   242       | *  _POSIX_C_SOURCE == 200112           1003.1-2001                                              |  4301     4
   243       | *  _POSIX_C_SOURCE == 200809           1003.1-2008                                              |  4302     4
   244       | *                                                                                               |  4303     4
   245       | * In addition, the X/Open Portability Guide, which is now the Single UNIX                       |  4304     4
   246       | * Specification, defines a feature-test macro which indicates the version of                    |  4305     4
   247       | * that specification, and which subsumes _POSIX_C_SOURCE.                                       |  4306     4
   248       | *                                                                                               |  4307     4
   249       | * Our macros begin with two underscores to avoid namespace screwage.                            |  4308     4
   250       | */                                                                                              |  4309     4
   251       |                                                                                                 |  4310     4
   252       |/*                                                                                               |  4311     4
   253       | * If no special macro was specified, make the DragonFly extensions                              |  4312     4
   254       | * available. Also make them available when requested so.                                        |  4313     4
   255       | */                                                                                              |  4314     4
   256       |#if (!defined(_POSIX_C_SOURCE) && !defined(_XOPEN_SOURCE) && \                                   |  4315     4
   257       |    !defined(_ANSI_SOURCE) && !defined(_C99_SOURCE)) || \                                        |  4316     4
   258       |    defined(_DRAGONFLY_SOURCE) || defined(_NETBSD_SOURCE)                                        |  4317     4
   259       |#define __DF_VISIBLE    1                                                                        |  4318     4
   260       |#else                                                                                            |  4319     4
   261       |#define __DF_VISIBLE    0                                                                        |  4320     4
   262       |#endif                                                                                           |  4321     4
   263       |                                                                                                 |  4322     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    84


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   264       |/*-                                                                                              |  4323     4
   265       | * The following definitions are an extension of the behavior originally                         |  4324     4
   266       | * implemented in <sys/_posix.h>, but with a different level of granularity.                     |  4325     4
   267       | * POSIX.1 requires that the macros we test be defined before any standard                       |  4326     4
   268       | * header file is included.                                                                      |  4327     4
   269       | *                                                                                               |  4328     4
   270       | * Here's a quick run-down of the versions:                                                      |  4329     4
   271       | *  defined(_POSIX_SOURCE)              1003.1-1988                                              |  4330     4
   272       | *  _POSIX_C_SOURCE == 1                1003.1-1990                                              |  4331     4
   273       | *  _POSIX_C_SOURCE == 2                1003.2-1992 C Language Binding Option                    |  4332     4
   274       | *  _POSIX_C_SOURCE == 199309           1003.1b-1993                                             |  4333     4
   275       | *  _POSIX_C_SOURCE == 199506           1003.1c-1995, 1003.1i-1995,                              |  4334     4
   276       | *                                      and the omnibus ISO/IEC 9945-1: 1996                     |  4335     4
   277       | *  _POSIX_C_SOURCE == 200112           1003.1-2001                                              |  4336     4
   278       | *  _POSIX_C_SOURCE == 200809           1003.1-2008                                              |  4337     4
   279       | *                                                                                               |  4338     4
   280       | * In addition, the X/Open Portability Guide, which is now the Single UNIX                       |  4339     4
   281       | * Specification, defines a feature-test macro which indicates the version of                    |  4340     4
   282       | * that specification, and which subsumes _POSIX_C_SOURCE.                                       |  4341     4
   283       | *                                                                                               |  4342     4
   284       | * Our macros begin with two underscores to avoid namespace screwage.                            |  4343     4
   285       | */                                                                                              |  4344     4
   286       |                                                                                                 |  4345     4
   287       |/* Deal with IEEE Std. 1003.1-1990, in which _POSIX_C_SOURCE == 1. */                            |  4346     4
   288       |#if defined(_POSIX_C_SOURCE) && _POSIX_C_SOURCE == 1                                             |  4347     4
   289       |#undef _POSIX_C_SOURCE          /* Probably illegal, but beyond caring now. */                   |  4348     4
   290       |#define _POSIX_C_SOURCE         199009                                                           |  4349     4
   291       |#endif                                                                                           |  4350     4
   292       |                                                                                                 |  4351     4
   293       |/* Deal with IEEE Std. 1003.2-1992, in which _POSIX_C_SOURCE == 2. */                            |  4352     4
   294       |#if defined(_POSIX_C_SOURCE) && _POSIX_C_SOURCE == 2                                             |  4353     4
   295       |#undef _POSIX_C_SOURCE                                                                           |  4354     4
   296       |#define _POSIX_C_SOURCE         199209                                                           |  4355     4
   297       |#endif                                                                                           |  4356     4
   298       |                                                                                                 |  4357     4
   299       |/* Deal with various X/Open Portability Guides and Single UNIX Spec. */                          |  4358     4
   300       |#ifdef _XOPEN_SOURCE                                                                             |  4359     4
   301       |#if _XOPEN_SOURCE - 0 >= 700                                                                     |  4360     4
   302       |#define __XSI_VISIBLE           700                                                              |  4361     4
   303       |#undef _POSIX_C_SOURCE                                                                           |  4362     4
   304       |#define _POSIX_C_SOURCE         200809                                                           |  4363     4
   305       |#elif _XOPEN_SOURCE - 0 >= 600                                                                   |  4364     4
   306       |#define __XSI_VISIBLE           600                                                              |  4365     4
   307       |#undef _POSIX_C_SOURCE                                                                           |  4366     4
   308       |#define _POSIX_C_SOURCE         200112                                                           |  4367     4
   309       |#elif _XOPEN_SOURCE - 0 >= 500                                                                   |  4368     4
   310       |#define __XSI_VISIBLE           500                                                              |  4369     4
   311       |#undef _POSIX_C_SOURCE                                                                           |  4370     4
   312       |#define _POSIX_C_SOURCE         199506                                                           |  4371     4
   313       |#endif                                                                                           |  4372     4
   314       |#endif                                                                                           |  4373     4
   315       |                                                                                                 |  4374     4
   316       |/*                                                                                               |  4375     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    85


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   317       | * Deal with all versions of POSIX.  The ordering relative to the tests above is                 |  4376     4
   318       | * important.                                                                                    |  4377     4
   319       | */                                                                                              |  4378     4
   320       |#if defined(_POSIX_SOURCE) && !defined(_POSIX_C_SOURCE)                                          |  4379     4
   321       |#define _POSIX_C_SOURCE         198808                                                           |  4380     4
   322       |#endif                                                                                           |  4381     4
   323       |#ifdef _POSIX_C_SOURCE                                                                           |  4382     4
   324       |#if _POSIX_C_SOURCE >= 200809                                                                    |  4383     4
   325       |#define __POSIX_VISIBLE         200809                                                           |  4384     4
   326       |#define __ISO_C_VISIBLE         1999                                                             |  4385     4
   327       |#elif _POSIX_C_SOURCE >= 200112                                                                  |  4386     4
   328       |#define __POSIX_VISIBLE         200112                                                           |  4387     4
   329       |#define __ISO_C_VISIBLE         1999                                                             |  4388     4
   330       |#elif _POSIX_C_SOURCE >= 199506                                                                  |  4389     4
   331       |#define __POSIX_VISIBLE         199506                                                           |  4390     4
   332       |#define __ISO_C_VISIBLE         1990                                                             |  4391     4
   333       |#elif _POSIX_C_SOURCE >= 199309                                                                  |  4392     4
   334       |#define __POSIX_VISIBLE         199309                                                           |  4393     4
   335       |#define __ISO_C_VISIBLE         1990                                                             |  4394     4
   336       |#elif _POSIX_C_SOURCE >= 199209                                                                  |  4395     4
   337       |#define __POSIX_VISIBLE         199209                                                           |  4396     4
   338       |#define __ISO_C_VISIBLE         1990                                                             |  4397     4
   339       |#elif _POSIX_C_SOURCE >= 199009                                                                  |  4398     4
   340       |#define __POSIX_VISIBLE         199009                                                           |  4399     4
   341       |#define __ISO_C_VISIBLE         1990                                                             |  4400     4
   342       |#else                                                                                            |  4401     4
   343       |#define __POSIX_VISIBLE         198808                                                           |  4402     4
   344       |#define __ISO_C_VISIBLE         0                                                                |  4403     4
   345       |#endif /* _POSIX_C_SOURCE */                                                                     |  4404     4
   346       |#else                                                                                            |  4405     4
   347       |/*-                                                                                              |  4406     4
   348       | * Deal with _ANSI_SOURCE:                                                                       |  4407     4
   349       | * If it is defined, and no other compilation environment is explicitly                          |  4408     4
   350       | * requested, then define our internal feature-test macros to zero.  This                        |  4409     4
   351       | * makes no difference to the preprocessor (undefined symbols in preprocessing                   |  4410     4
   352       | * expressions are defined to have value zero), but makes it more convenient for                 |  4411     4
   353       | * a test program to print out the values.                                                       |  4412     4
   354       | *                                                                                               |  4413     4
   355       | * If a program mistakenly defines _ANSI_SOURCE and some other macro such as                     |  4414     4
   356       | * _POSIX_C_SOURCE, we will assume that it wants the broader compilation                         |  4415     4
   357       | * environment (and in fact we will never get here).                                             |  4416     4
   358       | */                                                                                              |  4417     4
   359       |#if defined(_ANSI_SOURCE)       /* Hide almost everything. */                                    |  4418     4
   360       |#define __POSIX_VISIBLE         0                                                                |  4419     4
   361       |#define __XSI_VISIBLE           0                                                                |  4420     4
   362       |#define __BSD_VISIBLE           0                                                                |  4421     4
   363       |#define __ISO_C_VISIBLE         1990                                                             |  4422     4
   364       |#define __EXT1_VISIBLE          0                                                                |  4423     4
   365       |#elif defined(_C99_SOURCE)      /* Localism to specify strict C99 env. */                        |  4424     4
   366       |#define __POSIX_VISIBLE         0                                                                |  4425     4
   367       |#define __XSI_VISIBLE           0                                                                |  4426     4
   368       |#define __BSD_VISIBLE           0                                                                |  4427     4
   369       |#define __ISO_C_VISIBLE         1999                                                             |  4428     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    86


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   370       |#define __EXT1_VISIBLE          0                                                                |  4429     4
   371       |#elif defined(_C11_SOURCE)      /* Localism to specify strict C11 env. */                        |  4430     4
   372       |#define __POSIX_VISIBLE         0                                                                |  4431     4
   373       |#define __XSI_VISIBLE           0                                                                |  4432     4
   374       |#define __BSD_VISIBLE           0                                                                |  4433     4
   375       |#define __ISO_C_VISIBLE         2011                                                             |  4434     4
   376       |#define __EXT1_VISIBLE          0                                                                |  4435     4
   377       |#else                           /* Default environment: show everything. */                      |  4436     4
   378       |#define __POSIX_VISIBLE         200809                                                           |  4437     4
   379       |#define __XSI_VISIBLE           700                                                              |  4438     4
   380       |#define __BSD_VISIBLE           1                                                                |  4439     4
   381       |#define __ISO_C_VISIBLE         2011                                                             |  4440     4
   382       |#define __EXT1_VISIBLE          1                                                                |  4441     4
   383       |#endif                                                                                           |  4442     4
   384       |#endif                                                                                           |  4443     4
   385       |                                                                                                 |  4444     4
   386       |/* User override __EXT1_VISIBLE */                                                               |  4445     4
   387       |#if defined(__STDC_WANT_LIB_EXT1__)                                                              |  4446     4
   388       |#undef  __EXT1_VISIBLE                                                                           |  4447     4
   389       |#if __STDC_WANT_LIB_EXT1__                                                                       |  4448     4
   390       |#define __EXT1_VISIBLE          1                                                                |  4449     4
   391       |#else                                                                                            |  4450     4
   392       |#define __EXT1_VISIBLE          0                                                                |  4451     4
   393       |#endif                                                                                           |  4452     4
   394       |#endif /* __STDC_WANT_LIB_EXT1__ */                                                              |  4453     4
   395       |                                                                                                 |  4454     4
   396       |#if defined(__370__) || defined(__mips) || defined(__powerpc64__)                                |  4455     4
   397       |#define __NO_TLS 1                                                                               |  4456     4
   398       |#endif                                                                                           |  4457     4
   399       |                                                                                                 |  4458     4
   400       |                                                                                                 |  4459     4
   401       |/* easier than stripping __FBSDID() from sources - Greg 2008/07/28 */                            |  4460     4
   402       |#define __FBSDID(x)                                                                              |  4461     4
   403       |                                                                                                 |  4462     4
   404       |#endif /* !_SYS_CDEFS_H_ */                                                                      |  4463     4
   405       |#pragma pack(reset)                                                                              |  4464     4
    38       |                                                                                                 |  4465    14
    39       |/*                                                                                               |  4466    14
    40       | * POSIX options and option groups we unconditionally do or don't                                |  4467    14
    41       | * implement.  Those options which are implemented (or not) entirely                             |  4468    14
    42       | * in user mode are defined in <unistd.h>.  Please keep this list in                             |  4469    14
    43       | * alphabetical order.                                                                           |  4470    14
    44       | *                                                                                               |  4471    14
    45       | * Anything which is defined as zero below **must** have an                                      |  4472    14
    46       | * implementation for the corresponding sysconf() which is able to                               |  4473    14
    47       | * determine conclusively whether or not the feature is supported.                               |  4474    14
    48       | * Anything which is defined as other than -1 below **must** have                                |  4475    14
    49       | * complete headers, types, and function declarations as specified by                            |  4476    14
    50       | * the POSIX standard; however, if the relevant sysconf() function                               |  4477    14
    51       | * returns -1, the functions may be stubbed out.                                                 |  4478    14
    52       | */                                                                                              |  4479    14
    53       |#define _POSIX_ADVISORY_INFO            -1                                                       |  4480    14
    54       |#define _POSIX_ASYNCHRONOUS_IO          0                                                        |  4481    14
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    87


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    55       |#define _POSIX_CHOWN_RESTRICTED         1                                                        |  4482    14
    56       |#define _POSIX_CLOCK_SELECTION          -1                                                       |  4483    14
    57       |#define _POSIX_CPUTIME                  -1                                                       |  4484    14
    58       |#define _POSIX_FSYNC                    200112L                                                  |  4485    14
    59       |#define _POSIX_IPV6                     0                                                        |  4486    14
    60       |#define _POSIX_JOB_CONTROL              1                                                        |  4487    14
    61       |#define _POSIX_MAPPED_FILES             200112L                                                  |  4488    14
    62       |#define _POSIX_MEMLOCK                  -1                                                       |  4489    14
    63       |#define _POSIX_MEMLOCK_RANGE            200112L                                                  |  4490    14
    64       |#define _POSIX_MEMORY_PROTECTION        200112L                                                  |  4491    14
    65       |#define _POSIX_MESSAGE_PASSING          -1                                                       |  4492    14
    66       |#define _POSIX_MONOTONIC_CLOCK          -1                                                       |  4493    14
    67       |#define _POSIX_NO_TRUNC                 1                                                        |  4494    14
    68       |#define _POSIX_PRIORITIZED_IO           -1                                                       |  4495    14
    69       |#define _POSIX_PRIORITY_SCHEDULING      200112L                                                  |  4496    14
    70       |#define _POSIX_RAW_SOCKETS              200112L                                                  |  4497    14
    71       |#define _POSIX_REALTIME_SIGNALS         -1                                                       |  4498    14
    72       |#define _POSIX_SEMAPHORES               -1                                                       |  4499    14
    73       |#define _POSIX_SHARED_MEMORY_OBJECTS    200112L                                                  |  4500    14
    74       |#define _POSIX_SPORADIC_SERVER          -1                                                       |  4501    14
    75       |#define _POSIX_SYNCHRONIZED_IO          -1                                                       |  4502    14
    76       |#define _POSIX_TIMEOUTS                 -1                                                       |  4503    14
    77       |#define _POSIX_TYPED_MEMORY_OBJECTS     -1                                                       |  4504    14
    78       |#define _POSIX_VDISABLE                 0xff                                                     |  4505    14
    79       |                                                                                                 |  4506    14
    80       |#if __XSI_VISIBLE                                                                                |  4507    14
    81       |#define _XOPEN_SHM                      1                                                        |  4508    14
    82       |#define _XOPEN_STREAMS                  -1                                                       |  4509    14
    83       |#endif                                                                                           |  4510    14
    84       |                                                                                                 |  4511    14
    84       +                                                                                                 +  4511    14
    85       |/*                                                                                               |  4512    14
    86       | * Although we have saved user/group IDs, we do not use them in setuid                           |  4513    14
    87       | * as described in POSIX 1003.1, because the feature does not work for                           |  4514    14
    88       | * root.  We use the saved IDs in seteuid/setegid, which are not currently                       |  4515    14
    89       | * part of the POSIX 1003.1 specification.  XXX revisit for 1003.1-2001                          |  4516    14
    90       | * as this is now mandatory.                                                                     |  4517    14
    91       | */                                                                                              |  4518    14
    92       |#ifdef  _NOT_AVAILABLE                                                                           |  4519    14
    93       |#define _POSIX_SAVED_IDS        1 /* saved set-user-ID and set-group-ID */                       |  4520    14
    94       |#endif                                                                                           |  4521    14
    95       |                                                                                                 |  4522    14
    96       |/* Define the POSIX.1 version we target for compliance. */                                       |  4523    14
    97       |#define _POSIX_VERSION          200112L                                                          |  4524    14
    98       |                                                                                                 |  4525    14
    99       |/* access function */                                                                            |  4526    14
   100       |#define F_OK            0       /* test for existence of file */                                 |  4527    14
   101       |#define X_OK            0x01    /* test for execute or search permission */                      |  4528    14
   102       |#define W_OK            0x02    /* test for write permission */                                  |  4529    14
   103       |#define R_OK            0x04    /* test for read permission */                                   |  4530    14
   104       |                                                                                                 |  4531    14
   105       |/* whence values for lseek(2) */                                                                 |  4532    14
   106       |#ifndef SEEK_SET                                                                                 |  4533    14
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    88


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   107       |#define SEEK_SET        0       /* set file offset to offset */                                  |  4534    14
   108       |#define SEEK_CUR        1       /* set file offset to current plus offset */                     |  4535    14
   109       |#define SEEK_END        2       /* set file offset to EOF plus offset */                         |  4536    14
   110       |#endif                                                                                           |  4537    14
   111       |                                                                                                 |  4538    14
   112       |#ifndef _POSIX_SOURCE                                                                            |  4539    14
   113       |/* whence values for lseek(2); renamed by POSIX 1003.1 */                                        |  4540    14
   114       |#define L_SET           SEEK_SET                                                                 |  4541    14
   115       |#define L_INCR          SEEK_CUR                                                                 |  4542    14
   116       |#define L_XTND          SEEK_END                                                                 |  4543    14
   117       |#endif                                                                                           |  4544    14
   118       |                                                                                                 |  4545    14
   119       |/* configurable pathname variables */                                                            |  4546    14
   120       |#define _PC_LINK_MAX             1                                                               |  4547    14
   121       |#define _PC_MAX_CANON            2                                                               |  4548    14
   122       |#define _PC_MAX_INPUT            3                                                               |  4549    14
   123       |#define _PC_NAME_MAX             4                                                               |  4550    14
   124       |#define _PC_PATH_MAX             5                                                               |  4551    14
   125       |#define _PC_PIPE_BUF             6                                                               |  4552    14
   126       |#define _PC_CHOWN_RESTRICTED     7                                                               |  4553    14
   127       |#define _PC_NO_TRUNC             8                                                               |  4554    14
   128       |#define _PC_VDISABLE             9                                                               |  4555    14
   129       |                                                                                                 |  4556    14
   130       |#if __POSIX_VISIBLE >= 199309                                                                    |  4557    14
   131       |#define _PC_ASYNC_IO            53                                                               |  4558    14
   132       |#define _PC_PRIO_IO             54                                                               |  4559    14
   133       |#define _PC_SYNC_IO             55                                                               |  4560    14
   134       |#endif                                                                                           |  4561    14
   135       |                                                                                                 |  4562    14
   135       +                                                                                                 +  4562    14
   136       |#if __POSIX_VISIBLE >= 200112                                                                    |  4563    14
   137       |#define _PC_ALLOC_SIZE_MIN      10                                                               |  4564    14
   138       |#define _PC_FILESIZEBITS        12                                                               |  4565    14
   139       |#define _PC_REC_INCR_XFER_SIZE  14                                                               |  4566    14
   140       |#define _PC_REC_MAX_XFER_SIZE   15                                                               |  4567    14
   141       |#define _PC_REC_MIN_XFER_SIZE   16                                                               |  4568    14
   142       |#define _PC_REC_XFER_ALIGN      17                                                               |  4569    14
   143       |#define _PC_SYMLINK_MAX         18                                                               |  4570    14
   144       |#endif                                                                                           |  4571    14
   145       |                                                                                                 |  4572    14
   145       +                                                                                                 +  4572    14
   146       |#if __BSD_VISIBLE                                                                                |  4573    14
   147       |#define _PC_ACL_EXTENDED        59                                                               |  4574    14
   148       |#define _PC_ACL_PATH_MAX        60                                                               |  4575    14
   149       |#define _PC_CAP_PRESENT         61                                                               |  4576    14
   150       |#define _PC_INF_PRESENT         62                                                               |  4577    14
   151       |#define _PC_MAC_PRESENT         63                                                               |  4578    14
   152       |#endif                                                                                           |  4579    14
   153       |                                                                                                 |  4580    14
   153       +                                                                                                 +  4580    14
   154       |#if __BSD_VISIBLE                                                                                |  4581    14
   155       |/*                                                                                               |  4582    14
   156       | * rfork() options.                                                                              |  4583    14
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    89


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   157       | *                                                                                               |  4584    14
   158       | * XXX currently, some operations without RFPROC set are not supported.                          |  4585    14
   159       | */                                                                                              |  4586    14
   159       +                                                                                                 +  4586    14
   160       |#define RFNAMEG         (1<<0)  /* UNIMPL new plan9 `name space' */                              |  4587    14
   161       |#define RFENVG          (1<<1)  /* UNIMPL copy plan9 `env space' */                              |  4588    14
   162       |#define RFFDG           (1<<2)  /* copy fd table */                                              |  4589    14
   163       |#define RFNOTEG         (1<<3)  /* UNIMPL create new plan9 `note group' */                       |  4590    14
   164       |#define RFPROC          (1<<4)  /* change child (else changes curproc) */                        |  4591    14
   165       |#define RFMEM           (1<<5)  /* share `address space' */                                      |  4592    14
   166       |#define RFNOWAIT        (1<<6)  /* give child to init */                                         |  4593    14
   167       |#define RFCNAMEG        (1<<10) /* UNIMPL zero plan9 `name space' */                             |  4594    14
   168       |#define RFCENVG         (1<<11) /* UNIMPL zero plan9 `env space' */                              |  4595    14
   169       |#define RFCFDG          (1<<12) /* close all fds, zero fd table */                               |  4596    14
   170       |#define RFTHREAD        (1<<13) /* enable kernel thread support */                               |  4597    14
   171       |#define RFSIGSHARE      (1<<14) /* share signal handlers */                                      |  4598    14
   172       |#define RFLINUXTHPN     (1<<16) /* do linux clone exit parent notification */                    |  4599    14
   173       |#define RFSTOPPED       (1<<17) /* leave child in a stopped state */                             |  4600    14
   174       |#define RFHIGHPID       (1<<18) /* use a pid higher then 10 (idleproc) */                        |  4601    14
   175       |#define RFPPWAIT        (1<<31) /* parent sleeps until child exits (vfork) */                    |  4602    14
   176       |#define RFKERNELONLY    (RFSTOPPED | RFHIGHPID | RFPPWAIT)                                       |  4603    14
   177       |                                                                                                 |  4604    14
   178       |#endif /* __BSD_VISIBLE */                                                                       |  4605    14
   179       |                                                                                                 |  4606    14
   180       |#endif /* !_SYS_UNISTD_H_ */                                                                     |  4607    14
   181       |#pragma pack(reset)                                                                              |  4608    14
    44       |#include <sys/_null.h>                                                                           |  4609    13
     1       |/* release 2.25.00 */                                                                            |  4610    15
     2       |#pragma pack()                                                                                   |  4611    15
     3       |/*-                                                                                              |  4612    15
     4       | * Copyright (c) 2003 Marcel Moolenaar                                                           |  4613    15
     5       | * All rights reserved.                                                                          |  4614    15
     6       | *                                                                                               |  4615    15
     7       | * Redistribution and use in source and binary forms, with or without                            |  4616    15
     8       | * modification, are permitted provided that the following conditions                            |  4617    15
     9       | * are met:                                                                                      |  4618    15
    10       | *                                                                                               |  4619    15
    11       | * 1. Redistributions of source code must retain the above copyright                             |  4620    15
    12       | *    notice, this list of conditions and the following disclaimer.                              |  4621    15
    13       | * 2. Redistributions in binary form must reproduce the above copyright                          |  4622    15
    14       | *    notice, this list of conditions and the following disclaimer in the                        |  4623    15
    15       | *    documentation and/or other materials provided with the distribution.                       |  4624    15
    16       | *                                                                                               |  4625    15
    17       | * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR                          |  4626    15
    18       | * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES                     |  4627    15
    19       | * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.                       |  4628    15
    20       | * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,                              |  4629    15
    21       | * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT                      |  4630    15
    22       | * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,                     |  4631    15
    23       | * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY                         |  4632    15
    24       | * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT                           |  4633    15
    25       | * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF                      |  4634    15
    26       | * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                             |  4635    15
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    90


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    27       | *                                                                                               |  4636    15
    28       | * $FreeBSD: src/sys/sys/_null.h,v 1.7 2005/01/07 02:29:23 imp Exp $                             |  4637    15
    29       | */                                                                                              |  4638    15
    30       |                                                                                                 |  4639    15
    31       |#ifndef NULL                                                                                     |  4640    15
    32       |                                                                                                 |  4641    15
    33       |#if defined(_KERNEL) || !defined(__cplusplus)                                                    |  4642    15
    34       |#define NULL    ((void *)0)                                                                      |  4643    15
    35       |#else                                                                                            |  4644    15
    36       |#if defined(__LP64__)                                                                            |  4645    15
    37       |#define NULL    (0L)                                                                             |  4646    15
    38       |#else                                                                                            |  4647    15
    39       |#define NULL    0                                                                                |  4648    15
    40       |#endif  /* __LP64__ */                                                                           |  4649    15
    41       |#endif  /* _KERNEL || !__cplusplus */                                                            |  4650    15
    42       |                                                                                                 |  4651    15
    43       |#endif                                                                                           |  4652    15
    44       |#pragma pack(reset)                                                                              |  4653    15
    45       |#include <sys/_types.h>                                                                          |  4654    13
     1       |/* release 2.25.00 */                                                                            |  4655     6
     2       |#pragma pack()                                                                                   |  4656     6
     3       |/*-                                                                                              |  4657     6
     4       | * Copyright (c) 2002 Mike Barcroft <mike@FreeBSD.org>                                           |  4658     6
     5       | * All rights reserved.                                                                          |  4659     6
     6       | *                                                                                               |  4660     6
     7       | * Redistribution and use in source and binary forms, with or without                            |  4661     6
     8       | * modification, are permitted provided that the following conditions                            |  4662     6
     9       | * are met:                                                                                      |  4663     6
    10       | * 1. Redistributions of source code must retain the above copyright                             |  4664     6
    11       | *    notice, this list of conditions and the following disclaimer.                              |  4665     6
    12       | * 2. Redistributions in binary form must reproduce the above copyright                          |  4666     6
    13       | *    notice, this list of conditions and the following disclaimer in the                        |  4667     6
    14       | *    documentation and/or other materials provided with the distribution.                       |  4668     6
    15       | *                                                                                               |  4669     6
    16       | * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND                        |  4670     6
    17       | * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE                         |  4671     6
    18       | * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE                    |  4672     6
    19       | * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE                       |  4673     6
    20       | * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL                    |  4674     6
    21       | * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS                       |  4675     6
    22       | * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)                         |  4676     6
    23       | * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT                    |  4677     6
    24       | * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY                     |  4678     6
    25       | * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF                        |  4679     6
    26       | * SUCH DAMAGE.                                                                                  |  4680     6
    27       | *                                                                                               |  4681     6
    28       | * $FreeBSD: src/sys/sys/_types.h,v 1.21 2005/03/22 01:19:17 das Exp $                           |  4682     6
    29       | */                                                                                              |  4683     6
    30       |                                                                                                 |  4684     6
    31       |#ifndef _SYS__TYPES_H_                                                                           |  4685     6
    32       |#define _SYS__TYPES_H_                                                                           |  4686     6
    33       |                                                                                                 |  4687     6
    34       |#include <sys/cdefs.h>                                                                           |  4688     6
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    91


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    35       |#include <machine/_types.h>                                                                      |  4689     6
    36       |                                                                                                 |  4690     6
    37       |/*                                                                                               |  4691     6
    38       | * Standard type definitions.                                                                    |  4692     6
    39       | */                                                                                              |  4693     6
    40       |typedef __int32_t       __blksize_t;    /* file block size */                                    |  4694     6
    41       |typedef __int64_t       __blkcnt_t;     /* file block count */                                   |  4695     6
    42       |typedef __int32_t       __clockid_t;    /* clock_gettime()... */                                 |  4696     6
    43       |typedef __uint32_t      __fflags_t;     /* file flags */                                         |  4697     6
    44       |typedef __uint64_t      __fsblkcnt_t;                                                            |  4698     6
    45       |typedef __uint64_t      __fsfilcnt_t;                                                            |  4699     6
    46       |typedef __uint32_t      __gid_t;                                                                 |  4700     6
    47       |typedef __int64_t       __id_t;         /* can hold a gid_t, pid_t, or uid_t */                  |  4701     6
    48       |typedef __uint32_t      __ino_t;        /* inode number */                                       |  4702     6
    49       |typedef long            __key_t;        /* IPC key (for Sys V IPC) */                            |  4703     6
    50       |typedef __int32_t       __lwpid_t;      /* Thread ID (a.k.a. LWP) */                             |  4704     6
    51       |typedef __uint16_t      __mode_t;       /* permissions */                                        |  4705     6
    52       |typedef int             __nl_item;                                                               |  4706     6
    53       |typedef __uint16_t      __nlink_t;      /* link count */                                         |  4707     6
    54       |typedef __int64_t       __off_t;        /* file offset */                                        |  4708     6
    55       |typedef __int32_t       __pid_t;        /* process [group] */                                    |  4709     6
    56       |typedef __int64_t       __rlim_t;       /* resource limit - intentionally */                     |  4710     6
    57       |                                        /* signed, because of legacy code */                     |  4711     6
    58       |                                        /* that uses -1 for RLIM_INFINITY */                     |  4712     6
    59       |typedef __uint8_t       __sa_family_t;                                                           |  4713     6
    60       |typedef __uint32_t      __socklen_t;                                                             |  4714     6
    61       |typedef long            __suseconds_t;  /* microseconds (signed) */                              |  4715     6
    62       |typedef __int32_t       __timer_t;      /* timer_gettime()... */                                 |  4716     6
    63       |typedef __uint32_t      __uid_t;                                                                 |  4717     6
    64       |typedef unsigned int    __useconds_t;   /* microseconds (unsigned) */                            |  4718     6
    65       |                                                                                                 |  4719     6
    66       |/*                                                                                               |  4720     6
    67       | * Unusual type definitions.                                                                     |  4721     6
    68       | */                                                                                              |  4722     6
    69       |/*                                                                                               |  4723     6
    70       | * rune_t is declared to be an ``int'' instead of the more natural                               |  4724     6
    71       | * ``unsigned long'' or ``long''.  Two things are happening here.  It is not                     |  4725     6
    72       | * unsigned so that EOF (-1) can be naturally assigned to it and used.  Also,                    |  4726     6
    73       | * it looks like 10646 will be a 31 bit standard.  This means that if your                       |  4727     6
    74       | * ints cannot hold 32 bits, you will be in trouble.  The reason an int was                      |  4728     6
    75       | * chosen over a long is that the is*() and to*() routines take ints (says                       |  4729     6
    76       | * ANSI C), but they use __ct_rune_t instead of int.                                             |  4730     6
    77       | *                                                                                               |  4731     6
    78       | * NOTE: rune_t is not covered by ANSI nor other standards, and should not                       |  4732     6
    79       | * be instantiated outside of lib/libc/locale.  Use wchar_t.  wchar_t and                        |  4733     6
    80       | * rune_t must be the same type.  Also, wint_t must be no narrower than                          |  4734     6
    81       | * wchar_t, and should be able to hold all members of the largest                                |  4735     6
    82       | * character set plus one extra value (WEOF), and must be at least 16 bits.                      |  4736     6
    83       | */                                                                                              |  4737     6
    84       |#ifdef __cplusplus                                                                               |  4738     6
    85       |/* DCXX provides a builtin definition of wchar_t as a keyword, and it matters                    |  4739     6
    86       | * for parameter type matching even though it's the same type (4-byte signed) */                 |  4740     6
    87       |typedef wchar_t         __ct_rune_t;    /* arg type for ctype funcs */                           |  4741     6
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    92


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    88       |#else                                                                                            |  4742     6
    89       |typedef int             __ct_rune_t;    /* arg type for ctype funcs */                           |  4743     6
    90       |#endif                                                                                           |  4744     6
    91       |typedef __ct_rune_t     __rune_t;       /* rune_t (see above) */                                 |  4745     6
    92       |typedef __ct_rune_t     __wchar_t;      /* wchar_t (see above) */                                |  4746     6
    93       |typedef __ct_rune_t     __wint_t;       /* wint_t (see above) */                                 |  4747     6
    94       |                                                                                                 |  4748     6
    95       |/* In C++11, char16_t and char32_t are builtin types */                                          |  4749     6
    96       |#if defined(__cplusplus) && __cplusplus >= 201103L                                               |  4750     6
    97       |#define _CHAR16_T_DECLARED                                                                       |  4751     6
    98       |#define _CHAR32_T_DECLARED                                                                       |  4752     6
    99       |#endif                                                                                           |  4753     6
   100       |                                                                                                 |  4754     6
   101       |#if !defined(__cplusplus)                                                                        |  4755     6
   102       |typedef __uint_least16_t __char16_t;                                                             |  4756     6
   103       |typedef __uint_least32_t __char32_t;                                                             |  4757     6
   104       |#endif                                                                                           |  4758     6
   105       |                                                                                                 |  4759     6
   106       |                                                                                                 |  4760     6
   107       |typedef __uint32_t      __dev_t;        /* device number */                                      |  4761     6
   108       |                                                                                                 |  4762     6
   109       |typedef __uint32_t      __fixpt_t;      /* fixed point number */                                 |  4763     6
   110       |                                                                                                 |  4764     6
   111       |/*                                                                                               |  4765     6
   112       | * mbstate_t is an opaque object to keep conversion state during multibyte                       |  4766     6
   113       | * stream conversions.                                                                           |  4767     6
   114       | */                                                                                              |  4768     6
   115       |typedef union {                                                                                  |  4769     6
   116       |        char            __mbstate8[128];                                                         |  4770     6
   117       |        __int64_t       _mbstateL;      /* for alignment */                                      |  4771     6
   118       |} __mbstate_t;                                                                                   |  4772     6
   119       |                                                                                                 |  4773     6
   120       |#endif /* !_SYS__TYPES_H_ */                                                                     |  4774     6
   121       |#pragma pack(reset)                                                                              |  4775     6
    46       |                                                                                                 |  4776    13
    47       |#ifndef _GID_T_DECLARED                                                                          |  4777    13
    48       |typedef __gid_t         gid_t;                                                                   |  4778    13
    49       |#define _GID_T_DECLARED                                                                          |  4779    13
    50       |#endif                                                                                           |  4780    13
    51       |                                                                                                 |  4781    13
    52       |#ifndef _OFF_T_DECLARED                                                                          |  4782    13
    53       |typedef __off_t         off_t;                                                                   |  4783    13
    54       |#define _OFF_T_DECLARED                                                                          |  4784    13
    55       |#endif                                                                                           |  4785    13
    56       |                                                                                                 |  4786    13
    57       |#ifndef _PID_T_DECLARED                                                                          |  4787    13
    58       |typedef __pid_t         pid_t;                                                                   |  4788    13
    59       |#define _PID_T_DECLARED                                                                          |  4789    13
    60       |#endif                                                                                           |  4790    13
    61       |                                                                                                 |  4791    13
    62       |#ifndef _SIZE_T_DECLARED                                                                         |  4792    13
    63       |typedef __size_t        size_t;                                                                  |  4793    13
    64       |#define _SIZE_T_DECLARED                                                                         |  4794    13
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    93


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    65       |#endif                                                                                           |  4795    13
    66       |                                                                                                 |  4796    13
    67       |#ifndef _SSIZE_T_DECLARED                                                                        |  4797    13
    68       |typedef __ssize_t       ssize_t;                                                                 |  4798    13
    69       |#define _SSIZE_T_DECLARED                                                                        |  4799    13
    70       |#endif                                                                                           |  4800    13
    71       |                                                                                                 |  4801    13
    72       |#ifndef _UID_T_DECLARED                                                                          |  4802    13
    73       |typedef __uid_t         uid_t;                                                                   |  4803    13
    74       |#define _UID_T_DECLARED                                                                          |  4804    13
    75       |#endif                                                                                           |  4805    13
    76       |                                                                                                 |  4806    13
    77       |#ifndef _USECONDS_T_DECLARED                                                                     |  4807    13
    78       |typedef __useconds_t    useconds_t;                                                              |  4808    13
    79       |#define _USECONDS_T_DECLARED                                                                     |  4809    13
    80       |#endif                                                                                           |  4810    13
    81       |                                                                                                 |  4811    13
    82       |#define  STDIN_FILENO   0       /* standard input file descriptor */                             |  4812    13
    83       |#define STDOUT_FILENO   1       /* standard output file descriptor */                            |  4813    13
    84       |#define STDERR_FILENO   2       /* standard error file descriptor */                             |  4814    13
    85       |                                                                                                 |  4815    13
    86       |#if __XSI_VISIBLE || __POSIX_VISIBLE >= 200112                                                   |  4816    13
    87       |#define F_ULOCK         0       /* unlock locked section */                                      |  4817    13
    88       |#define F_LOCK          1       /* lock a section for exclusive use */                           |  4818    13
    89       |#define F_TLOCK         2       /* test and lock a section for exclusive use */                  |  4819    13
    90       |#define F_TEST          3       /* test a section for locks by other procs */                    |  4820    13
    91       |#endif                                                                                           |  4821    13
    92       |                                                                                                 |  4822    13
    92       +                                                                                                 +  4822    13
    93       |/*                                                                                               |  4823    13
    94       | * POSIX options and option groups we unconditionally do or don't                                |  4824    13
    95       | * implement.  This list includes those options which are exclusively                            |  4825    13
    96       | * implemented (or not) in user mode.  Please keep this list in                                  |  4826    13
    97       | * alphabetical order.                                                                           |  4827    13
    98       | *                                                                                               |  4828    13
    99       | * Anything which is defined as zero below **must** have an                                      |  4829    13
   100       | * implementation for the corresponding sysconf() which is able to                               |  4830    13
   101       | * determine conclusively whether or not the feature is supported.                               |  4831    13
   102       | * Anything which is defined as other than -1 below **must** have                                |  4832    13
   103       | * complete headers, types, and function declarations as specified by                            |  4833    13
   104       | * the POSIX standard; however, if the relevant sysconf() function                               |  4834    13
   105       | * returns -1, the functions may be stubbed out.                                                 |  4835    13
   106       | */                                                                                              |  4836    13
   107       |#define _POSIX_BARRIERS                 -1                                                       |  4837    13
   108       |#define _POSIX_READER_WRITER_LOCKS      200112L                                                  |  4838    13
   109       |#define _POSIX_REGEXP                   1                                                        |  4839    13
   110       |#define _POSIX_SHELL                    1                                                        |  4840    13
   111       |#define _POSIX_SPAWN                    -1                                                       |  4841    13
   112       |#define _POSIX_SPIN_LOCKS               -1                                                       |  4842    13
   113       |#define _POSIX_THREAD_ATTR_STACKADDR    200112L                                                  |  4843    13
   114       |#define _POSIX_THREAD_ATTR_STACKSIZE    200112L                                                  |  4844    13
   115       |#define _POSIX_THREAD_CPUTIME           -1                                                       |  4845    13
   116       |#define _POSIX_THREAD_PRIO_INHERIT      200112L                                                  |  4846    13
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    94


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   117       |#define _POSIX_THREAD_PRIO_PROTECT      200112L                                                  |  4847    13
   118       |#if 0                                                                                            |  4848    13
   119       |  /* z/OS doesn't support THREAD_PRIORITY_SCHEDULING */                                          |  4849    13
   120       |#define _POSIX_THREAD_PRIORITY_SCHEDULING 200112L                                                |  4850    13
   121       |#endif                                                                                           |  4851    13
   122       |#define _POSIX_THREAD_PROCESS_SHARED    -1                                                       |  4852    13
   123       |#define _POSIX_THREAD_SAFE_FUNCTIONS    -1                                                       |  4853    13
   124       |#define _POSIX_THREAD_SPORADIC_SERVER   -1                                                       |  4854    13
   125       |#define _POSIX_THREADS                  200112L                                                  |  4855    13
   126       |#define _POSIX_TRACE                    -1                                                       |  4856    13
   127       |#define _POSIX_TRACE_EVENT_FILTER       -1                                                       |  4857    13
   128       |#define _POSIX_TRACE_INHERIT            -1                                                       |  4858    13
   129       |#define _POSIX_TRACE_LOG                -1                                                       |  4859    13
   130       |#define _POSIX2_C_BIND                  200112L /* mandatory */                                  |  4860    13
   131       |#define _POSIX2_C_DEV                   -1 /* need c99 utility */                                |  4861    13
   132       |#define _POSIX2_CHAR_TERM               1                                                        |  4862    13
   133       |#define _POSIX2_FORT_DEV                -1 /* need fort77 utility */                             |  4863    13
   134       |#define _POSIX2_FORT_RUN                200112L                                                  |  4864    13
   135       |#define _POSIX2_LOCALEDEF               -1                                                       |  4865    13
   136       |#define _POSIX2_PBS                     -1                                                       |  4866    13
   137       |#define _POSIX2_PBS_ACCOUNTING          -1                                                       |  4867    13
   138       |#define _POSIX2_PBS_CHECKPOINT          -1                                                       |  4868    13
   139       |#define _POSIX2_PBS_LOCATE              -1                                                       |  4869    13
   140       |#define _POSIX2_PBS_MESSAGE             -1                                                       |  4870    13
   141       |#define _POSIX2_PBS_TRACK               -1                                                       |  4871    13
   142       |#define _POSIX2_SW_DEV                  -1 /* XXX ??? */                                         |  4872    13
   143       |#define _POSIX2_UPE                     200112L                                                  |  4873    13
   144       |#define _V6_ILP32_OFF32                 -1                                                       |  4874    13
   145       |#define _V6_ILP32_OFFBIG                0                                                        |  4875    13
   146       |#define _V6_LP64_OFF64                  0                                                        |  4876    13
   147       |#define _V6_LPBIG_OFFBIG                -1                                                       |  4877    13
   148       |                                                                                                 |  4878    13
   149       |#if __XSI_VISIBLE                                                                                |  4879    13
   150       |#define _XOPEN_CRYPT                    -1 /* XXX ??? */                                         |  4880    13
   151       |#define _XOPEN_ENH_I18N                 -1 /* mandatory in XSI */                                |  4881    13
   152       |#define _XOPEN_LEGACY                   -1                                                       |  4882    13
   153       |#define _XOPEN_REALTIME                 -1                                                       |  4883    13
   154       |#define _XOPEN_REALTIME_THREADS         -1                                                       |  4884    13
   155       |#define _XOPEN_UNIX                     -1                                                       |  4885    13
   156       |#endif                                                                                           |  4886    13
   157       |                                                                                                 |  4887    13
   157       +                                                                                                 +  4887    13
   158       |/* Define the POSIX.2 version we target for compliance. */                                       |  4888    13
   159       |#define _POSIX2_VERSION         199212L                                                          |  4889    13
   160       |                                                                                                 |  4890    13
   161       |/*                                                                                               |  4891    13
   162       | * POSIX-style system configuration variable accessors (for the                                  |  4892    13
   163       | * sysconf function).  If these are -1 then they aren't supported                                |  4893    13
   164       | * by the sysconf function (sysconf will dutifully return -1.)                                   |  4894    13
   165       | *                                                                                               |  4895    13
   166       | * The sysconf() function on MVS is the BPX version, so only                                     |  4896    13
   167       | * the ones supported there are defined.                                                         |  4897    13
   168       | */                                                                                              |  4898    13
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    95


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   169       |                                                                                                 |  4899    13
   170       |#define _SC_ARG_MAX              1                                                               |  4900    13
   171       |#define _SC_CHILD_MAX            2                                                               |  4901    13
   172       |#define _SC_CLK_TCK              3                                                               |  4902    13
   173       |#define _SC_JOB_CONTROL          4                                                               |  4903    13
   174       |#define _SC_NGROUPS_MAX          5                                                               |  4904    13
   175       |#define _SC_OPEN_MAX             6                                                               |  4905    13
   176       |#define _SC_SAVED_IDS            7                                                               |  4906    13
   177       |#define _SC_TZNAME_MAX           9                                                               |  4907    13
   178       |#define _SC_VERSION             10                                                               |  4908    13
   179       |#define _SC_THREAD_TASKS_MAX_NP 11                                                               |  4909    13
   180       |#define _SC_2_CHAR_TERM         12                                                               |  4910    13
   181       |#define _SC_THREADS_MAX_NP      13                                                               |  4911    13
   182       |#define _SC_MMAP_MEM_MAX_NP     14                                                               |  4912    13
   183       |#define _SC_BC_BASE_MAX          -1                                                              |  4913    13
   184       |#define _SC_BC_DIM_MAX          -1                                                               |  4914    13
   185       |#define _SC_BC_SCALE_MAX        -1                                                               |  4915    13
   186       |#define _SC_BC_STRING_MAX       -1                                                               |  4916    13
   187       |#define _SC_COLL_WEIGHTS_MAX    -1                                                               |  4917    13
   188       |#define _SC_EXPR_NEST_MAX       -1                                                               |  4918    13
   189       |#define _SC_LINE_MAX            -1                                                               |  4919    13
   190       |#define _SC_RE_DUP_MAX          -1                                                               |  4920    13
   191       |#define _SC_2_VERSION           -1                                                               |  4921    13
   192       |#define _SC_2_C_BIND            -1                                                               |  4922    13
   193       |#define _SC_2_C_DEV             -1                                                               |  4923    13
   194       |#define _SC_2_FORT_DEV          -1                                                               |  4924    13
   195       |#define _SC_2_FORT_RUN          -1                                                               |  4925    13
   196       |#define _SC_2_LOCALEDEF         -1                                                               |  4926    13
   197       |#define _SC_2_SW_DEV            -1                                                               |  4927    13
   198       |#define _SC_2_UPE               -1                                                               |  4928    13
   199       |#define _SC_STREAM_MAX          118                                                              |  4929    13
   200       |                                                                                                 |  4930    13
   201       |#if __POSIX_VISIBLE >= 199309                                                                    |  4931    13
   202       |#define _SC_ASYNCHRONOUS_IO     -1                                                               |  4932    13
   203       |#define _SC_MAPPED_FILES        -1                                                               |  4933    13
   204       |#define _SC_MEMLOCK             -1                                                               |  4934    13
   205       |#define _SC_MEMLOCK_RANGE       -1                                                               |  4935    13
   206       |#define _SC_MEMORY_PROTECTION   -1                                                               |  4936    13
   207       |#define _SC_MESSAGE_PASSING     -1                                                               |  4937    13
   208       |#define _SC_PRIORITIZED_IO      -1                                                               |  4938    13
   209       |#define _SC_PRIORITY_SCHEDULING -1                                                               |  4939    13
   210       |#define _SC_REALTIME_SIGNALS    -1                                                               |  4940    13
   211       |#define _SC_SEMAPHORES          -1                                                               |  4941    13
   212       |#define _SC_FSYNC               -1                                                               |  4942    13
   213       |#define _SC_SHARED_MEMORY_OBJECTS -1                                                             |  4943    13
   214       |#define _SC_SYNCHRONIZED_IO     -1                                                               |  4944    13
   215       |#define _SC_TIMERS              -1                                                               |  4945    13
   216       |#define _SC_AIO_LISTIO_MAX      -1                                                               |  4946    13
   217       |#define _SC_AIO_MAX             -1                                                               |  4947    13
   218       |#define _SC_AIO_PRIO_DELTA_MAX  -1                                                               |  4948    13
   219       |#define _SC_DELAYTIMER_MAX      -1                                                               |  4949    13
   220       |#define _SC_MQ_OPEN_MAX         -1                                                               |  4950    13
   221       |#define _SC_PAGESIZE            16                                                               |  4951    13
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    96


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   222       |#define _SC_RTSIG_MAX           -1                                                               |  4952    13
   223       |#define _SC_SEM_NSEMS_MAX      210                                                               |  4953    13
   224       |#define _SC_SEM_VALUE_MAX      211                                                               |  4954    13
   225       |#define _SC_SIGQUEUE_MAX        -1                                                               |  4955    13
   226       |#define _SC_TIMER_MAX           -1                                                               |  4956    13
   227       |#endif                                                                                           |  4957    13
   228       |                                                                                                 |  4958    13
   228       +                                                                                                 +  4958    13
   229       |#if __POSIX_VISIBLE >= 200112                                                                    |  4959    13
   230       |#define _SC_2_PBS               -1                                                               |  4960    13
   231       |#define _SC_2_PBS_ACCOUNTING    -1                                                               |  4961    13
   232       |#define _SC_2_PBS_CHECKPOINT    -1                                                               |  4962    13
   233       |#define _SC_2_PBS_LOCATE        -1                                                               |  4963    13
   234       |#define _SC_2_PBS_MESSAGE       -1                                                               |  4964    13
   235       |#define _SC_2_PBS_TRACK         -1                                                               |  4965    13
   236       |#define _SC_ADVISORY_INFO       -1                                                               |  4966    13
   237       |#define _SC_BARRIERS            -1                                                               |  4967    13
   238       |#define _SC_CLOCK_SELECTION     -1                                                               |  4968    13
   239       |#define _SC_CPUTIME             -1                                                               |  4969    13
   240       |#define _SC_FILE_LOCKING        -1                                                               |  4970    13
   241       |#define _SC_GETGR_R_SIZE_MAX    -1                                                               |  4971    13
   242       |#define _SC_GETPW_R_SIZE_MAX    -1                                                               |  4972    13
   243       |#define _SC_HOST_NAME_MAX       -1                                                               |  4973    13
   244       |#define _SC_LOGIN_NAME_MAX      -1                                                               |  4974    13
   245       |#define _SC_MONOTONIC_CLOCK     -1                                                               |  4975    13
   246       |#define _SC_MQ_PRIO_MAX         -1                                                               |  4976    13
   247       |#define _SC_READER_WRITER_LOCKS -1                                                               |  4977    13
   248       |#define _SC_REGEXP              -1                                                               |  4978    13
   249       |#define _SC_SHELL               -1                                                               |  4979    13
   250       |#define _SC_SPAWN               -1                                                               |  4980    13
   251       |#define _SC_SPIN_LOCKS          171                                                              |  4981    13
   252       |#define _SC_SPORADIC_SERVER     172                                                              |  4982    13
   253       |#define _SC_THREAD_ATTR_STACKADDR 175                                                            |  4983    13
   254       |#define _SC_THREAD_ATTR_STACKSIZE 176                                                            |  4984    13
   255       |#define _SC_THREAD_CPUTIME        177                                                            |  4985    13
   256       |#define _SC_THREAD_DESTRUCTOR_ITERATIONS -1                                                      |  4986    13
   257       |#define _SC_THREAD_KEYS_MAX     207                                                              |  4987    13
   258       |#define _SC_THREAD_PRIO_INHERIT 178                                                              |  4988    13
   259       |#define _SC_THREAD_PRIO_PROTECT 179                                                              |  4989    13
   260       |#define _SC_THREAD_PRIORITY_SCHEDULING 180                                                       |  4990    13
   261       |#define _SC_THREAD_PROCESS_SHARED 181                                                            |  4991    13
   262       |#define _SC_THREAD_SAFE_FUNCTIONS 182                                                            |  4992    13
   263       |#define _SC_THREAD_SPORADIC_SERVER 183                                                           |  4993    13
   264       |#define _SC_THREAD_STACK_MIN    208                                                              |  4994    13
   265       |#define _SC_THREAD_THREADS_MAX  _SC_THREADS_MAX_NP                                               |  4995    13
   266       |#define _SC_THREADS             184                                                              |  4996    13
   267       |#define _SC_TIMEOUTS            185                                                              |  4997    13
   268       |#define _SC_TRACE               -1                                                               |  4998    13
   269       |#define _SC_TRACE_EVENT_FILTER  -1                                                               |  4999    13
   270       |#define _SC_TRACE_INHERIT       -1                                                               |  5000    13
   271       |#define _SC_TRACE_LOG           -1                                                               |  5001    13
   272       |#define _SC_TTY_NAME_MAX        -1                                                               |  5002    13
   273       |#define _SC_TYPED_MEMORY_OBJECTS -1                                                              |  5003    13
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    97


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   274       |#define _SC_V6_ILP32_OFF32      -1                                                               |  5004    13
   275       |#define _SC_V6_ILP32_OFFBIG     -1                                                               |  5005    13
   276       |#define _SC_V6_LP64_OFF64       -1                                                               |  5006    13
   277       |#define _SC_V6_LPBIG_OFFBIG     -1                                                               |  5007    13
   278       |#define _SC_IPV6                -1                                                               |  5008    13
   279       |#define _SC_RAW_SOCKETS         -1                                                               |  5009    13
   280       |#define _SC_SYMLOOP_MAX         -1                                                               |  5010    13
   281       |#endif                                                                                           |  5011    13
   282       |                                                                                                 |  5012    13
   282       +                                                                                                 +  5012    13
   283       |#if __XSI_VISIBLE                                                                                |  5013    13
   284       |#define _SC_ATEXIT_MAX          -1                                                               |  5014    13
   285       |#define _SC_IOV_MAX             -1                                                               |  5015    13
   286       |#define _SC_PAGE_SIZE           _SC_PAGESIZE                                                     |  5016    13
   287       |#define _SC_XOPEN_CRYPT         -1                                                               |  5017    13
   288       |#define _SC_XOPEN_ENH_I18N      -1                                                               |  5018    13
   289       |#define _SC_XOPEN_LEGACY        -1                                                               |  5019    13
   290       |#define _SC_XOPEN_REALTIME      -1                                                               |  5020    13
   291       |#define _SC_XOPEN_REALTIME_THREADS -1                                                            |  5021    13
   292       |#define _SC_XOPEN_SHM           -1                                                               |  5022    13
   293       |#define _SC_XOPEN_STREAMS       -1                                                               |  5023    13
   294       |#define _SC_XOPEN_UNIX          -1                                                               |  5024    13
   295       |#define _SC_XOPEN_VERSION       -1                                                               |  5025    13
   296       |#define _SC_XOPEN_XCU_VERSION   -1                                                               |  5026    13
   297       |#endif                                                                                           |  5027    13
   298       |                                                                                                 |  5028    13
   298       +                                                                                                 +  5028    13
   299       |#if ( defined(_LP64) || defined(__U98) )                                                         |  5029    13
   300       |#define _XBS5_ILP32_OFF32        1                                                               |  5030    13
   301       |#define _XBS5_ILP32_OFFBIG      -1                                                               |  5031    13
   302       |#define _XBS5_LP64_OFF64        -1                                                               |  5032    13
   303       |#define _XBS5_LPBIG_OFFBIG      -1                                                               |  5033    13
   304       |#endif  /*  _LP64  ||  __U98  */                                                                 |  5034    13
   305       |                                                                                                 |  5035    13
   306       |#if __BSD_VISIBLE                                                                                |  5036    13
   307       |#define _SC_NPROCESSORS_CONF    -1                                                               |  5037    13
   308       |#define _SC_NPROCESSORS_ONLN    -1                                                               |  5038    13
   309       |#endif                                                                                           |  5039    13
   310       |                                                                                                 |  5040    13
   310       +                                                                                                 +  5040    13
   311       |/* Keys for the confstr(3) function. */                                                          |  5041    13
   312       |#if __POSIX_VISIBLE >= 199209                                                                    |  5042    13
   313       |#define _CS_PATH                1       /* default value of PATH */                              |  5043    13
   314       |#endif                                                                                           |  5044    13
   315       |                                                                                                 |  5045    13
   315       +                                                                                                 +  5045    13
   316       |#if __POSIX_VISIBLE >= 200112                                                                    |  5046    13
   317       |#define _CS_POSIX_V6_ILP32_OFF32_CFLAGS         2                                                |  5047    13
   318       |#define _CS_POSIX_V6_ILP32_OFF32_LDFLAGS        3                                                |  5048    13
   319       |#define _CS_POSIX_V6_ILP32_OFF32_LIBS           4                                                |  5049    13
   320       |#define _CS_POSIX_V6_ILP32_OFFBIG_CFLAGS        5                                                |  5050    13
   321       |#define _CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS       6                                                |  5051    13
   322       |#define _CS_POSIX_V6_ILP32_OFFBIG_LIBS          7                                                |  5052    13
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    98


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   323       |#define _CS_POSIX_V6_LP64_OFF64_CFLAGS          8                                                |  5053    13
   324       |#define _CS_POSIX_V6_LP64_OFF64_LDFLAGS         9                                                |  5054    13
   325       |#define _CS_POSIX_V6_LP64_OFF64_LIBS            10                                               |  5055    13
   326       |#define _CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS        11                                               |  5056    13
   327       |#define _CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS       12                                               |  5057    13
   328       |#define _CS_POSIX_V6_LPBIG_OFFBIG_LIBS          13                                               |  5058    13
   329       |#define _CS_POSIX_V6_WIDTH_RESTRICTED_ENVS      14                                               |  5059    13
   330       |#endif                                                                                           |  5060    13
   331       |                                                                                                 |  5061    13
   331       +                                                                                                 +  5061    13
   332       |                                                                                                 |  5062    13
   333       |#ifndef _POSIX_SOURCE                                                                            |  5063    13
   334       |#define       F_ULOCK     0    /* unlock locked section */                                       |  5064    13
   335       |#define       F_LOCK      1    /* lock a section for exclusive use */                            |  5065    13
   336       |#define       F_TLOCK     2    /* test and lock a section for exclusive use */                   |  5066    13
   337       |#define       F_TEST      3    /* test a section for locks by other procs */                     |  5067    13
   338       |#endif                                                                                           |  5068    13
   339       |                                                                                                 |  5069    13
   340       |/* For z/OS BPX (posix-y) interface, we also have the */                                         |  5070    13
   341       |/* __querydub() function that determines if a task has */                                        |  5071    13
   342       |/* been "dub'd" into the POSIX system */                                                         |  5072    13
   343       |#define _QDB_DUBBED_FIRST    (1) /* The task has already been dubbed.  */                        |  5073    13
   344       |                                 /* This task and this RB caused the dub. */                     |  5074    13
   345       |#define _QDB_DUBBED          (2) /* The task has already been dubbed.  */                        |  5075    13
   346       |                                 /* Another task or another RB caused it */                      |  5076    13
   347       |#define _QDB_DUB_MAY_FAIL    (4) /* The task has not been dubbed; an attempt */                  |  5077    13
   348       |                                 /* to dub the task may fail. */                                 |  5078    13
   349       |#define _QDB_DUB_OKAY        (8) /* The task has not beed dubbed; an attempt */                  |  5079    13
   350       |                                 /* to dub will probably succeed. */                             |  5080    13
   351       |#define _QDB_DUB_AS_PROCESS (16) /* The task has not been dubbed; but its */                     |  5081    13
   352       |                                 /* address space has. If dubbed, if will */                     |  5082    13
   353       |                                 /* become another process. */                                   |  5083    13
   354       |#define _QDB_DUB_AS_THREAD  (32) /* The task has not been dubbed; but its */                     |  5084    13
   355       |                                 /* address space has. If dubbed, it will */                     |  5085    13
   356       |                                 /* become a thread within the process. */                       |  5086    13
   357       |                                                                                                 |  5087    13
   358       |__BEGIN_DECLS                                                                                    |  5088    13
   358       +                                                                                                 +  5088    13
   359       |#pragma map(__querydub,"@@QDUB")                                                                 |  5089    13
   360       |int __querydub(void);                                                                            |  5090    13
   361       |                                                                                                 |  5091    13
   362       |/* 1003.1-1990 */                                                                                |  5092    13
   363       |#pragma map (_exit, "@@EXIT")                                                                    |  5093    13
   364       |void     _exit(int) __dead2;                                                                     |  5094    13
   364       +void     _exit(int) __attribute__((__noreturn__));                                               +  5094    13
   365       |int      access(const char *, int);                                                              |  5095    13
   366       |unsigned int     alarm(unsigned int);                                                            |  5096    13
   367       |int      chdir(const char *);                                                                    |  5097    13
   368       |int      chown(const char *, uid_t, gid_t);                                                      |  5098    13
   369       |int      close(int);                                                                             |  5099    13
   370       |int      dup(int);                                                                               |  5100    13
   371       |int      dup2(int, int);                                                                         |  5101    13
   372       |int      eaccess(const char *, int);                                                             |  5102    13
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page    99


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   373       |int      execl(const char *, const char *, ...);                                                 |  5103    13
   374       |int      execle(const char *, const char *, ...);                                                |  5104    13
   375       |int      execlp(const char *, const char *, ...);                                                |  5105    13
   376       |int      execv(const char *, char * const *);                                                    |  5106    13
   377       |int      execve(const char *, char * const *, char * const *);                                   |  5107    13
   378       |int      execvp(const char *, char * const *);                                                   |  5108    13
   379       |pid_t    fork(void);                                                                             |  5109    13
   380       |#pragma map(fpathconf, "@@FPATHC")                                                               |  5110    13
   381       |long     fpathconf(int, int);                                                                    |  5111    13
   382       |char    *getcwd(char *, size_t);                                                                 |  5112    13
   383       |gid_t    getegid(void);                                                                          |  5113    13
   384       |uid_t    geteuid(void);                                                                          |  5114    13
   385       |gid_t    getgid(void);                                                                           |  5115    13
   386       |#pragma map(getgroups, "@@GETGRO")                                                               |  5116    13
   387       |int      getgroups(int, gid_t []);                                                               |  5117    13
   388       |char    *getlogin(void);                                                                         |  5118    13
   389       |pid_t    getpgrp(void);                                                                          |  5119    13
   390       |pid_t    getpid(void);                                                                           |  5120    13
   391       |pid_t    getppid(void);                                                                          |  5121    13
   392       |uid_t    getuid(void);                                                                           |  5122    13
   393       |int      isatty(int);                                                                            |  5123    13
   394       |int      link(const char *, const char *);                                                       |  5124    13
   395       |#ifndef _LSEEK_DECLARED                                                                          |  5125    13
   396       |#define _LSEEK_DECLARED                                                                          |  5126    13
   397       |off_t    lseek(int, off_t, int);                                                                 |  5127    13
   398       |#endif                                                                                           |  5128    13
   399       |long     pathconf(const char *, int);                                                            |  5129    13
   400       |int      pause(void);                                                                            |  5130    13
   401       |int      pipe(int *);                                                                            |  5131    13
   402       |ssize_t  read(int, void *, size_t);                                                              |  5132    13
   403       |int      rmdir(const char *);                                                                    |  5133    13
   404       |int      setgid(gid_t);                                                                          |  5134    13
   405       |int      setpgid(pid_t, pid_t);                                                                  |  5135    13
   406       |void     setproctitle(const char *_fmt, ...) __printf0like(1, 2);                                |  5136    13
   406       +void     setproctitle(const char *_fmt, ...) ;                                                   +  5136    13
   407       |pid_t    setsid(void);                                                                           |  5137    13
   408       |int      setuid(uid_t);                                                                          |  5138    13
   409       |unsigned int     sleep(unsigned int);                                                            |  5139    13
   410       |long     sysconf(int);                                                                           |  5140    13
   411       |#pragma map(tcgetpgrp, "@@TCGPGR")                                                               |  5141    13
   412       |pid_t    tcgetpgrp(int);                                                                         |  5142    13
   413       |#pragma map(tcsetpgrp, "@@TCSPGR")                                                               |  5143    13
   414       |int      tcsetpgrp(int, pid_t);                                                                  |  5144    13
   415       |char    *ttyname(int);                                                                           |  5145    13
   416       |int     ttyname_r(int, char *, size_t);                                                          |  5146    13
   417       |int      unlink(const char *);                                                                   |  5147    13
   418       |ssize_t  write(int, const void *, size_t);                                                       |  5148    13
   419       |                                                                                                 |  5149    13
   420       |/* 1003.2-1992 */                                                                                |  5150    13
   421       |#if __POSIX_VISIBLE >= 199209 || __XSI_VISIBLE                                                   |  5151    13
   422       |size_t   confstr(int, char *, size_t);                                                           |  5152    13
   422       +size_t   confstr(int, char *, size_t);                                                           +  5152    13
   423       |#ifndef _GETOPT_DECLARED                                                                         |  5153    13
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   100


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   424       |#define _GETOPT_DECLARED                                                                         |  5154    13
   425       |int      getopt(int, char * const [], const char *);                                             |  5155    13
   426       |                                                                                                 |  5156    13
   427       |extern char *optarg;                    /* getopt(3) external variables */                       |  5157    13
   428       |extern int optind, opterr, optopt;                                                               |  5158    13
   429       |#endif /* _GETOPT_DECLARED */                                                                    |  5159    13
   430       |#endif                                                                                           |  5160    13
   431       |                                                                                                 |  5161    13
   432       |/* ISO/IEC 9945-1: 1996 */                                                                       |  5162    13
   433       |#if __POSIX_VISIBLE >= 199506 || __XSI_VISIBLE                                                   |  5163    13
   434       |int      fsync(int);                                                                             |  5164    13
   434       +int      fsync(int);                                                                             +  5164    13
   435       |                                                                                                 |  5165    13
   436       |/*                                                                                               |  5166    13
   437       | * ftruncate() was in the POSIX Realtime Extension (it's used for shared                         |  5167    13
   438       | * memory), but truncate() was not.                                                              |  5168    13
   439       | */                                                                                              |  5169    13
   440       |#ifndef _FTRUNCATE_DECLARED                                                                      |  5170    13
   441       |#define _FTRUNCATE_DECLARED                                                                      |  5171    13
   442       |#pragma map (ftruncate, "@@FTRUNC")                                                              |  5172    13
   443       |int      ftruncate(int, off_t);                                                                  |  5173    13
   444       |#endif                                                                                           |  5174    13
   445       |#endif                                                                                           |  5175    13
   446       |                                                                                                 |  5176    13
   447       |#if __POSIX_VISIBLE >= 199506                                                                    |  5177    13
   448       |int      getlogin_r(char *, int);                                                                |  5178    13
   448       +int      getlogin_r(char *, int);                                                                +  5178    13
   449       |#endif                                                                                           |  5179    13
   450       |                                                                                                 |  5180    13
   451       |/* 1003.1-2001 */                                                                                |  5181    13
   452       |#if __POSIX_VISIBLE >= 200112 || __XSI_VISIBLE                                                   |  5182    13
   453       |int      fchown(int, uid_t, gid_t);                                                              |  5183    13
   453       +int      fchown(int, uid_t, gid_t);                                                              +  5183    13
   454       |int      readlink(const char *, char *, int);                                                    |  5184    13
   455       |#endif                                                                                           |  5185    13
   456       |#if __POSIX_VISIBLE >= 200112                                                                    |  5186    13
   457       |#pragma map (gethostname,"@@GHNAM")                                                              |  5187    13
   457       +#pragma map ( gethostname , "@@GHNAM" )                                                          +  5187    13
   458       |int      gethostname(char *, size_t);                                                            |  5188    13
   459       |int      setegid(gid_t);                                                                         |  5189    13
   460       |int      seteuid(uid_t);                                                                         |  5190    13
   461       |int    getpeereid(int, uid_t *, gid_t *);                                                        |  5191    13
   462       |int    getpgid(pid_t _pid);                                                                      |  5192    13
   463       |int    getresgid(gid_t *, gid_t *, gid_t *);                                                     |  5193    13
   464       |int    getresuid(uid_t *, uid_t *, uid_t *);                                                     |  5194    13
   465       |int    getsid(pid_t _pid);                                                                       |  5195    13
   466       |#endif                                                                                           |  5196    13
   467       |                                                                                                 |  5197    13
   468       |/*                                                                                               |  5198    13
   469       | * symlink() was originally in POSIX.1a, which was withdrawn after                               |  5199    13
   470       | * being overtaken by events (1003.1-2001).  It was in XPG4.2, and of                            |  5200    13
   471       | * course has been in BSD since 4.2.                                                             |  5201    13
   472       | */                                                                                              |  5202    13
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   101


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   473       |#if __POSIX_VISIBLE >= 200112 || __XSI_VISIBLE >= 402 || __BSD_VISIBLE                           |  5203    13
   474       |int      symlink(const char * __restrict, const char * __restrict);                              |  5204    13
   474       +int      symlink(const char * __restrict__, const char * __restrict__);                          +  5204    13
   475       |#endif                                                                                           |  5205    13
   476       |                                                                                                 |  5206    13
   477       |/* X/Open System Interfaces */                                                                   |  5207    13
   478       |#if __XSI_VISIBLE                                                                                |  5208    13
   479       |char    *crypt(const char *, const char *);                                                      |  5209    13
   479       +char    *crypt(const char *, const char *);                                                      +  5209    13
   480       |/* char *ctermid(char *); */            /* XXX ??? */                                            |  5210    13
   481       |int      encrypt(char *, int);                                                                   |  5211    13
   482       |int      fchdir(int);                                                                            |  5212    13
   483       |#pragma map (gethostid,"@@GHTID")                                                                |  5213    13
   484       |long     gethostid(void);                                                                        |  5214    13
   485       |int      getpgid(pid_t _pid);                                                                    |  5215    13
   486       |int      getsid(pid_t _pid);                                                                     |  5216    13
   487       |char    *getwd(char *);                 /* LEGACY: obsoleted by getcwd() */                      |  5217    13
   488       |int      lchown(const char *, uid_t, gid_t);                                                     |  5218    13
   489       |int      lockf(int, int, off_t);                                                                 |  5219    13
   490       |int      nice(int);                                                                              |  5220    13
   491       |ssize_t  pread(int, void *, size_t, off_t);                                                      |  5221    13
   492       |ssize_t  pwrite(int, const void *, size_t, off_t);                                               |  5222    13
   493       |int      setpgrp(pid_t _pid, pid_t _pgrp); /* obsoleted by setpgid() */                          |  5223    13
   494       |int      setregid(gid_t, gid_t);                                                                 |  5224    13
   495       |int      setreuid(uid_t, uid_t);                                                                 |  5225    13
   496       |                                                                                                 |  5226    13
   497       |#ifndef _SWAB_DECLARED                                                                           |  5227    13
   498       |#define _SWAB_DECLARED                                                                           |  5228    13
   499       |void     swab(const void * __restrict, void * __restrict, ssize_t);                              |  5229    13
   499       +void     swab(const void * __restrict__, void * __restrict__, ssize_t);                          +  5229    13
   500       |#endif /* _SWAB_DECLARED */                                                                      |  5230    13
   501       |                                                                                                 |  5231    13
   502       |void     sync(void);                                                                             |  5232    13
   503       |useconds_t       ualarm(useconds_t, useconds_t);                                                 |  5233    13
   504       |int      usleep(useconds_t);                                                                     |  5234    13
   505       |pid_t    vfork(void);                                                                            |  5235    13
   506       |                                                                                                 |  5236    13
   507       |/* See comment at ftruncate() above. */                                                          |  5237    13
   508       |#ifndef _TRUNCATE_DECLARED                                                                       |  5238    13
   509       |#define _TRUNCATE_DECLARED                                                                       |  5239    13
   510       |int      truncate(const char *, off_t);                                                          |  5240    13
   511       |#endif                                                                                           |  5241    13
   512       |#endif /* __XSI_VISIBLE */                                                                       |  5242    13
   513       |                                                                                                 |  5243    13
   514       |#if __XSI_VISIBLE <= 500 || __BSD_VISIBLE                                                        |  5244    13
   515       |/* int   brk(const void *); */                                                                   |  5245    13
   515       +                                                                                                 +  5245    13
   516       |int      chroot(const char *);                                                                   |  5246    13
   517       |#pragma map (getdtablesize, "@GDTBLSZ")                                                          |  5247    13
   518       |int      getdtablesize(void);                                                                    |  5248    13
   519       |int      getpagesize(void) __pure2;                                                              |  5249    13
   519       +int      getpagesize(void) __attribute__((__const__));                                           +  5249    13
   520       |char    *getpass(const char *);                                                                  |  5250    13
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   102


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   521       |void    *sbrk(intptr_t);                                                                         |  5251    13
   522       |#endif                                                                                           |  5252    13
   523       |                                                                                                 |  5253    13
   524       |#pragma map(__isPosixOn, "@@ISPOSI")                                                             |  5254    13
   525       |int      __isPosixOn(void);                                                                      |  5255    13
   526       |                                                                                                 |  5256    13
   527       |#if __BSD_VISIBLE                                                                                |  5257    13
   528       |struct timeval;                         /* select(2) */                                          |  5258    13
   528       +struct timeval;                                                                                  +  5258    13
   529       |int      acct(const char *);                                                                     |  5259    13
   530       |int      async_daemon(void);                                                                     |  5260    13
   531       |int      check_utility_compat(const char *);                                                     |  5261    13
   532       |const char *                                                                                     |  5262    13
   533       |         crypt_get_format(void);                                                                 |  5263    13
   534       |int      crypt_set_format(const char *);                                                         |  5264    13
   535       |int      des_cipher(const char *, char *, long, int);                                            |  5265    13
   536       |int      des_setkey(const char *key);                                                            |  5266    13
   537       |void     endusershell(void);                                                                     |  5267    13
   538       |int      exect(const char *, char * const *, char * const *);                                    |  5268    13
   539       |int      execvP(const char *, const char *, char * const *);                                     |  5269    13
   540       |char    *fflagstostr(u_long);                                                                    |  5270    13
   541       |int      getdomainname(char *, int);                                                             |  5271    13
   542       |int      getgrouplist(const char *, gid_t, gid_t *, int *);                                      |  5272    13
   543       |mode_t   getmode(const void *, mode_t);                                                          |  5273    13
   544       |int      getpeereid(int, uid_t *, gid_t *);                                                      |  5274    13
   545       |int      getresgid(gid_t *, gid_t *, gid_t *);                                                   |  5275    13
   546       |int      getresuid(uid_t *, uid_t *, uid_t *);                                                   |  5276    13
   547       |char    *getusershell(void);                                                                     |  5277    13
   548       |int      initgroups(const char *, gid_t);                                                        |  5278    13
   549       |int      iruserok(unsigned long, int, const char *, const char *);                               |  5279    13
   550       |int      iruserok_sa(const void *, int, int, const char *, const char *);                        |  5280    13
   551       |#pragma map(issetugid, "ISSETUGI")                                                               |  5281    13
   552       |int      issetugid(void);                                                                        |  5282    13
   553       |char    *mkdtemp(char *);                                                                        |  5283    13
   554       |#ifndef _MKNOD_DECLARED                                                                          |  5284    13
   555       |int      mknod(const char *, mode_t, dev_t);                                                     |  5285    13
   556       |#define _MKNOD_DECLARED                                                                          |  5286    13
   557       |#endif                                                                                           |  5287    13
   558       |#ifndef _MKSTEMP_DECLARED                                                                        |  5288    13
   559       |int      mkstemp(char *);                                                                        |  5289    13
   560       |#define _MKSTEMP_DECLARED                                                                        |  5290    13
   561       |#endif                                                                                           |  5291    13
   562       |int      mkstemps(char *, int);                                                                  |  5292    13
   563       |#ifndef _MKTEMP_DECLARED                                                                         |  5293    13
   564       |char    *mktemp(char *);                                                                         |  5294    13
   565       |#define _MKTEMP_DECLARED                                                                         |  5295    13
   566       |#endif                                                                                           |  5296    13
   567       |int      nfssvc(int, void *);                                                                    |  5297    13
   568       |int      profil(char *, size_t, vm_offset_t, int);                                               |  5298    13
   569       |int      rcmd(char **, int, const char *, const char *, const char *, int *);                    |  5299    13
   570       |int      rcmd_af(char **, int, const char *,                                                     |  5300    13
   571       |                const char *, const char *, int *, int);                                         |  5301    13
   572       |int      rcmdsh(char **, int, const char *,                                                      |  5302    13
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   103


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   573       |                const char *, const char *, const char *);                                       |  5303    13
   574       |char    *re_comp(const char *);                                                                  |  5304    13
   575       |int      re_exec(const char *);                                                                  |  5305    13
   576       |int      reboot(int);                                                                            |  5306    13
   577       |int      revoke(const char *);                                                                   |  5307    13
   578       |pid_t    rfork(int);                                                                             |  5308    13
   579       |pid_t    rfork_thread(int, void *, int (*)(void *), void *);                                     |  5309    13
   580       |int      rresvport(int *);                                                                       |  5310    13
   581       |int      rresvport_af(int *, int);                                                               |  5311    13
   582       |int      ruserok(const char *, int, const char *, const char *);                                 |  5312    13
   583       |#if __BSD_VISIBLE                                                                                |  5313    13
   584       |#ifndef _SELECT_DECLARED                                                                         |  5314    13
   585       |#define _SELECT_DECLARED                                                                         |  5315    13
   586       |int      select(int, fd_set *, fd_set *, fd_set *, struct timeval *);                            |  5316    13
   587       |int      selectex(int, fd_set *, fd_set *, fd_set *, struct timeval *,                           |  5317    13
   588       |                       int *ecbptr);                                                             |  5318    13
   589       |                                                                                                 |  5319    13
   590       |#endif                                                                                           |  5320    13
   591       |#endif                                                                                           |  5321    13
   592       |int      setdomainname(const char *, int);                                                       |  5322    13
   592       +int      setdomainname(const char *, int);                                                       +  5322    13
   593       |#pragma map(setgroups, "@@SETGRP")                                                               |  5323    13
   594       |int      setgroups(int, const gid_t *);                                                          |  5324    13
   595       |void     sethostid(long);                                                                        |  5325    13
   596       |int      sethostname(const char *, int);                                                         |  5326    13
   597       |#ifndef _SETKEY_DECLARED                                                                         |  5327    13
   598       |int      setkey(const char *);                                                                   |  5328    13
   599       |#define _SETKEY_DECLARED                                                                         |  5329    13
   600       |#endif                                                                                           |  5330    13
   601       |int      setlogin(const char *);                                                                 |  5331    13
   602       |void    *setmode(const char *);                                                                  |  5332    13
   603       |int      setresgid(gid_t, gid_t, gid_t);                                                         |  5333    13
   604       |int      setresuid(uid_t, uid_t, uid_t);                                                         |  5334    13
   605       |int      setrgid(gid_t);                                                                         |  5335    13
   606       |int      setruid(uid_t);                                                                         |  5336    13
   607       |void     setusershell(void);                                                                     |  5337    13
   608       |int      strtofflags(char **, u_long *, u_long *);                                               |  5338    13
   609       |int      swapon(const char *);                                                                   |  5339    13
   610       |int      swapoff(const char *);                                                                  |  5340    13
   611       |int      syscall(int, ...);                                                                      |  5341    13
   612       |off_t    __syscall(quad_t, ...);                                                                 |  5342    13
   613       |int      ttyslot(void);                                                                          |  5343    13
   614       |int      undelete(const char *);                                                                 |  5344    13
   615       |int      unwhiteout(const char *);                                                               |  5345    13
   616       |void    *valloc(size_t);                        /* obsoleted by malloc() */                      |  5346    13
   617       |                                                                                                 |  5347    13
   618       |#ifndef _OPTRESET_DECLARED                                                                       |  5348    13
   619       |#define _OPTRESET_DECLARED                                                                       |  5349    13
   620       |extern int optreset;                    /* getopt(3) external variable */                        |  5350    13
   621       |#endif                                                                                           |  5351    13
   622       |#endif /* __BSD_VISIBLE */                                                                       |  5352    13
   623       |__END_DECLS                                                                                      |  5353    13
   623       +                                                                                                 +  5353    13
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   104


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   624       |                                                                                                 |  5354    13
   625       |#endif /* !_UNISTD_H_ */                                                                         |  5355    13
   626       |#pragma pack(reset)                                                                              |  5356    13
    23       |#include <time.h>                                                                                |  5357     2
     1       |/* release 2.25.00 */                                                                            |  5358    16
     2       |#pragma pack()                                                                                   |  5359    16
     3       |/*                                                                                               |  5360    16
     4       | * Copyright (c) 1989, 1993                                                                      |  5361    16
     5       | *      The Regents of the University of California.  All rights reserved.                       |  5362    16
     6       | * (c) UNIX System Laboratories, Inc.                                                            |  5363    16
     7       | * All or some portions of this file are derived from material licensed                          |  5364    16
     8       | * to the University of California by American Telephone and Telegraph                           |  5365    16
     9       | * Co. or Unix System Laboratories, Inc. and are reproduced herein with                          |  5366    16
    10       | * the permission of UNIX System Laboratories, Inc.                                              |  5367    16
    11       | *                                                                                               |  5368    16
    12       | * Redistribution and use in source and binary forms, with or without                            |  5369    16
    13       | * modification, are permitted provided that the following conditions                            |  5370    16
    14       | * are met:                                                                                      |  5371    16
    15       | * 1. Redistributions of source code must retain the above copyright                             |  5372    16
    16       | *    notice, this list of conditions and the following disclaimer.                              |  5373    16
    17       | * 2. Redistributions in binary form must reproduce the above copyright                          |  5374    16
    18       | *    notice, this list of conditions and the following disclaimer in the                        |  5375    16
    19       | *    documentation and/or other materials provided with the distribution.                       |  5376    16
    20       | * 3. All advertising materials mentioning features or use of this software                      |  5377    16
    21       | *    must display the following acknowledgement:                                                |  5378    16
    22       | *      This product includes software developed by the University of                            |  5379    16
    23       | *      California, Berkeley and its contributors.                                               |  5380    16
    24       | * 4. Neither the name of the University nor the names of its contributors                       |  5381    16
    25       | *    may be used to endorse or promote products derived from this software                      |  5382    16
    26       | *    without specific prior written permission.                                                 |  5383    16
    27       | *                                                                                               |  5384    16
    28       | * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND                       |  5385    16
    29       | * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE                         |  5386    16
    30       | * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE                    |  5387    16
    31       | * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE                      |  5388    16
    32       | * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL                    |  5389    16
    33       | * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS                       |  5390    16
    34       | * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)                         |  5391    16
    35       | * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT                    |  5392    16
    36       | * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY                     |  5393    16
    37       | * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF                        |  5394    16
    38       | * SUCH DAMAGE.                                                                                  |  5395    16
    39       | *                                                                                               |  5396    16
    40       | *      @(#)time.h      8.3 (Berkeley) 1/21/94                                                   |  5397    16
    41       | */                                                                                              |  5398    16
    42       |                                                                                                 |  5399    16
    43       |/*                                                                                               |  5400    16
    44       | */                                                                                              |  5401    16
    45       |                                                                                                 |  5402    16
    46       |#ifndef _TIME_H_                                                                                 |  5403    16
    47       |#define _TIME_H_                                                                                 |  5404    16
    48       |                                                                                                 |  5405    16
    49       |#include <sys/cdefs.h>                                                                           |  5406    16
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   105


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
     1       |/* release 2.25.00 */                                                                            |  5407     4
     2       |#pragma pack()                                                                                   |  5408     4
     3       |/*                                                                                               |  5409     4
     4       | * Copyright (c) 1991, 1993                                                                      |  5410     4
     5       | *      The Regents of the University of California.  All rights reserved.                       |  5411     4
     6       | *                                                                                               |  5412     4
     7       | * This code is derived from software contributed to Berkeley by                                 |  5413     4
     8       | * Berkeley Software Design, Inc.                                                                |  5414     4
     9       | *                                                                                               |  5415     4
    10       | * Redistribution and use in source and binary forms, with or without                            |  5416     4
    11       | * modification, are permitted provided that the following conditions                            |  5417     4
    12       | * are met:                                                                                      |  5418     4
    13       | * 1. Redistributions of source code must retain the above copyright                             |  5419     4
    14       | *    notice, this list of conditions and the following disclaimer.                              |  5420     4
    15       | * 2. Redistributions in binary form must reproduce the above copyright                          |  5421     4
    16       | *    notice, this list of conditions and the following disclaimer in the                        |  5422     4
    17       | *    documentation and/or other materials provided with the distribution.                       |  5423     4
    18       | * 3. All advertising materials mentioning features or use of this software                      |  5424     4
    19       | *    must display the following acknowledgement:                                                |  5425     4
    20       | *      This product includes software developed by the University of                            |  5426     4
    21       | *      California, Berkeley and its contributors.                                               |  5427     4
    22       | * 4. Neither the name of the University nor the names of its contributors                       |  5428     4
    23       | *    may be used to endorse or promote products derived from this software                      |  5429     4
    24       | *    without specific prior written permission.                                                 |  5430     4
    25       | *                                                                                               |  5431     4
    26       | * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND                       |  5432     4
    27       | * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE                         |  5433     4
    28       | * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE                    |  5434     4
    29       | * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE                      |  5435     4
    30       | * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL                    |  5436     4
    31       | * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS                       |  5437     4
    32       | * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)                         |  5438     4
    33       | * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT                    |  5439     4
    34       | * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY                     |  5440     4
    35       | * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF                        |  5441     4
    36       | * SUCH DAMAGE.                                                                                  |  5442     4
    37       | *                                                                                               |  5443     4
    38       | *      @(#)cdefs.h     8.8 (Berkeley) 1/9/95                                                    |  5444     4
    39       | */                                                                                              |  5445     4
    40       |                                                                                                 |  5446     4
    41       |#ifndef _SYS_CDEFS_H_                                                                            |  5447     4
    42       |#define _SYS_CDEFS_H_                                                                            |  5448     4
    43       |                                                                                                 |  5449     4
    44       |#if defined(__cplusplus)                                                                         |  5450     4
    45       |#define __BEGIN_DECLS   extern "C" {                                                             |  5451     4
    46       |#define __END_DECLS     }                                                                        |  5452     4
    47       |#else                                                                                            |  5453     4
    48       |#define __BEGIN_DECLS                                                                            |  5454     4
    49       |#define __END_DECLS                                                                              |  5455     4
    50       |#endif                                                                                           |  5456     4
    51       |                                                                                                 |  5457     4
    52       |/*                                                                                               |  5458     4
    53       | * This code has been put in place to help reduce the addition of                                |  5459     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   106


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    54       | * compiler specific defines in the code.  It helps to aid in                                    |  5460     4
    55       | * having a compiler-agnostic source tree.                                                       |  5461     4
    56       | */                                                                                              |  5462     4
    57       |#define __CC_SUPPORTS_INLINE 1                                                                   |  5463     4
    58       |#define __CC_SUPPORTS___INLINE 1                                                                 |  5464     4
    59       |#define __CC_SUPPORTS___INLINE__ 1                                                               |  5465     4
    60       |                                                                                                 |  5466     4
    61       |#define __CC_SUPPORTS___FUNC__ 1                                                                 |  5467     4
    62       |                                                                                                 |  5468     4
    63       |                                                                                                 |  5469     4
    64       |/*                                                                                               |  5470     4
    65       | * The __CONCAT macro is used to concatenate parts of symbol names, e.g.                         |  5471     4
    66       | * with "#define OLD(foo) __CONCAT(old,foo)", OLD(foo) produces oldfoo.                          |  5472     4
    67       | * The __CONCAT macro is a bit tricky to use if it must work in non-ANSI                         |  5473     4
    68       | * mode -- there must be no spaces between its arguments, and for nested                         |  5474     4
    69       | * __CONCAT's, all the __CONCAT's must be at the left.  __CONCAT can also                        |  5475     4
    70       | * concatenate double-quoted strings produced by the __STRING macro, but                         |  5476     4
    71       | * this only works with ANSI C.                                                                  |  5477     4
    72       | *                                                                                               |  5478     4
    73       | * __XSTRING is like __STRING, but it expands any macros in its argument                         |  5479     4
    74       | * first.  It is only available with ANSI C.                                                     |  5480     4
    75       | */                                                                                              |  5481     4
    76       |#if defined(__STDC__) || defined(__cplusplus)                                                    |  5482     4
    77       |#define __P(protos)     protos          /* full-blown ANSI C */                                  |  5483     4
    78       |#define __CONCAT1(x,y)  x ## y                                                                   |  5484     4
    79       |#define __CONCAT(x,y)   __CONCAT1(x,y)                                                           |  5485     4
    80       |#define __STRING(x)     #x              /* stringify without expanding x */                      |  5486     4
    81       |#define __XSTRING(x)    __STRING(x)     /* expand x, then stringify */                           |  5487     4
    82       |                                                                                                 |  5488     4
    83       |#define __const         const           /* define reserved names to standard */                  |  5489     4
    84       |#define __signed        signed                                                                   |  5490     4
    85       |#define __volatile      volatile                                                                 |  5491     4
    86       |#if defined(__cplusplus)                                                                         |  5492     4
    87       |#define __inline        inline          /* convert to C++ keyword */                             |  5493     4
    88       |#else                                                                                            |  5494     4
    89       |#define __inline        __inline__      /* Use the Systems/C keyword */                          |  5495     4
    90       |#endif /* !__cplusplus */                                                                        |  5496     4
    91       |                                                                                                 |  5497     4
    92       |#else   /* !(__STDC__ || __cplusplus) */                                                         |  5498     4
    93       |#define __P(protos)     ()              /* traditional C preprocessor */                         |  5499     4
    94       |#define __CONCAT(x,y)   x/**/y                                                                   |  5500     4
    95       |#define __STRING(x)     "x"                                                                      |  5501     4
    96       |                                                                                                 |  5502     4
    97       |#define __const                         /* delete pseudo-ANSI C keywords */                      |  5503     4
    98       |#define __inline                                                                                 |  5504     4
    99       |#define __signed                                                                                 |  5505     4
   100       |#define __volatile                                                                               |  5506     4
   101       |/*                                                                                               |  5507     4
   102       | * In non-ANSI C environments, new programs will want ANSI-only C keywords                       |  5508     4
   103       | * deleted from the program and old programs will want them left alone.                          |  5509     4
   104       | * When using a compiler other than Dignus, programs using the ANSI C keywords                   |  5510     4
   105       | * const, inline etc. as normal identifiers should define -DNO_ANSI_KEYWORDS.                    |  5511     4
   106       | */                                                                                              |  5512     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   107


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   107       |#ifndef NO_ANSI_KEYWORDS                                                                         |  5513     4
   108       |#define const                           /* delete ANSI C keywords */                             |  5514     4
   109       |#define inline                                                                                   |  5515     4
   110       |#define signed                                                                                   |  5516     4
   111       |#define volatile                                                                                 |  5517     4
   112       |#endif  /* !NO_ANSI_KEYWORDS */                                                                  |  5518     4
   113       |#endif  /* !(__STDC__ || __cplusplus) */                                                         |  5519     4
   114       |                                                                                                 |  5520     4
   115       |/*                                                                                               |  5521     4
   116       | * Compiler-dependent macros to help declare dead (non-returning) and                            |  5522     4
   117       | * pure (no side effects) functions, and unused variables.                                       |  5523     4
   118       | */                                                                                              |  5524     4
   119       |#define __dead2 __attribute__((__noreturn__))                                                    |  5525     4
   120       |#define __pure  __attribute__((__pure__))                                                        |  5526     4
   121       |#define __pure2 __attribute__((__const__))                                                       |  5527     4
   122       |#define __unused                                                                                 |  5528     4
   123       |#define __aligned(x)                                                                             |  5529     4
   124       |#define __section(x)                                                                             |  5530     4
   125       |#define __nonnull(x)                                                                             |  5531     4
   126       |#define __used                                                                                   |  5532     4
   127       |                                                                                                 |  5533     4
   128       |#define __always_inline __attribute__((__always_inline__))                                       |  5534     4
   129       |#define __noinline      __attribute__((__noinline__))                                            |  5535     4
   130       |                                                                                                 |  5536     4
   131       |#if __STDC_VERSION__ < 199901                                                                    |  5537     4
   132       |#define __func__  NULL                                                                           |  5538     4
   133       |#endif                                                                                           |  5539     4
   134       |                                                                                                 |  5540     4
   135       |#if !defined(__STRICT_ANSI__) || __STDC_VERSION__ >= 199901                                      |  5541     4
   136       |#define __LONG_LONG_SUPPORTED                                                                    |  5542     4
   137       |#endif                                                                                           |  5543     4
   138       |                                                                                                 |  5544     4
   139       |/* Systems/C recognizes they keyword __restrict__ in both                                        |  5545     4
   140       | * ANSI and non-ANSI mode to indicate C99 restrict semantics.                                    |  5546     4
   141       | **/                                                                                             |  5547     4
   142       |#ifndef __cplusplus                                                                              |  5548     4
   143       |#define __restrict __restrict__                                                                  |  5549     4
   144       |#else                                                                                            |  5550     4
   145       |/* Systems/C++ does not */                                                                       |  5551     4
   146       |#define __restrict                                                                               |  5552     4
   147       |#endif                                                                                           |  5553     4
   148       |                                                                                                 |  5554     4
   149       |/*                                                                                               |  5555     4
   150       | * define-away GCC-specific branch-prediction markers                                            |  5556     4
   151       | */                                                                                              |  5557     4
   152       |#define __predict_true(exp)     (exp)                                                            |  5558     4
   153       |#define __predict_false(exp)    (exp)                                                            |  5559     4
   154       |                                                                                                 |  5560     4
   155       |                                                                                                 |  5561     4
   156       |/*                                                                                               |  5562     4
   157       | * provide a definition of __offsetof(), <stddef.h> and                                          |  5563     4
   158       | * <sys/types.h> reference __offsetof().                                                         |  5564     4
   159       | *                                                                                               |  5565     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   108


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   160       | * For Systems/C, the C compiler recognizes __offsetof(),                                        |  5566     4
   161       | * but we need a definition for versions of C++ prior to 1.85.52.                                |  5567     4
   162       | */                                                                                              |  5568     4
   163       |#if defined(__cplusplus) && (__SYSC_VER__ < (18600))                                             |  5569     4
   164       |#undef __offsetof                                                                                |  5570     4
   165       |#define __offsetof(type, field)  ((size_t)(&((type *)0)->field))                                 |  5571     4
   166       |#endif                                                                                           |  5572     4
   167       |                                                                                                 |  5573     4
   168       |/*                                                                                               |  5574     4
   169       | * Compiler-dependent macros to declare that functions take printf-like                          |  5575     4
   170       | * or scanf-like arguments.                                                                      |  5576     4
   171       | */                                                                                              |  5577     4
   172       |#define __printflike(fmtarg, firstvararg)                                                        |  5578     4
   173       |#define __scanflike(fmtarg, firstvararg)                                                         |  5579     4
   174       |#define __format_arg(fmtarg)                                                                     |  5580     4
   175       |#define __printf0like(fmtarg, firstvararg)                                                       |  5581     4
   176       |                                                                                                 |  5582     4
   177       |/* Compiler-dependent macros that rely on specific extensions. */                                |  5583     4
   178       |#define __printf0like(fmtarg, firstvararg)                                                       |  5584     4
   179       |                                                                                                 |  5585     4
   180       |  /* intended to generate a weak reference as an alias */                                        |  5586     4
   181       |#define __weak_reference(sym,alias)                                                              |  5587     4
   182       |  /* If this symbol is refrenced, cause the linker to emit "msg" */                              |  5588     4
   183       |#define __warn_references(sym,msg)                                                               |  5589     4
   184       |                                                                                                 |  5590     4
   185       | /* This places the string into the resulting object.  It should */                              |  5591     4
   186       | /* probably become #pragma ident */                                                             |  5592     4
   187       |#define __IDSTRING(name,string) static const char name[] __unused = string                       |  5593     4
   188       |                                                                                                 |  5594     4
   189       |#ifndef __RCSID                                                                                  |  5595     4
   190       |#define __RCSID(s)      __IDSTRING(rcsid,s)                                                      |  5596     4
   191       |#endif                                                                                           |  5597     4
   192       |                                                                                                 |  5598     4
   193       |/*                                                                                               |  5599     4
   194       | * Embed the rcs id of a source file in the resulting library.                                   |  5600     4
   195       | * Usage:                                                                                        |  5601     4
   196       | *      __SYSCID("Id: src/sys/sys/cdefs.h,v 1.28.2.8 2002/09/18                                  |  5602     4
   197       |*                                            04:05:13 mikeh Exp $");                             |  5603     4
   198       | */                                                                                              |  5604     4
   199       |#ifndef __SYSCID                                                                                 |  5605     4
   200       |#if !defined(lint) && !defined(STRIP_SYSCID)                                                     |  5606     4
   201       |#define __SYSCID(s)     __IDSTRING(__CONCAT(__rcsid_,__LINE__),s)                                |  5607     4
   202       |#else                                                                                            |  5608     4
   203       |#define __SYSCID(s)     struct __hack                                                            |  5609     4
   204       |#endif                                                                                           |  5610     4
   205       |#endif                                                                                           |  5611     4
   206       |                                                                                                 |  5612     4
   207       |#ifndef __RCSID_SOURCE                                                                           |  5613     4
   208       |#define __RCSID_SOURCE(s) __IDSTRING(rcsid_source,s)                                             |  5614     4
   209       |#endif                                                                                           |  5615     4
   210       |                                                                                                 |  5616     4
   211       |#ifndef __COPYRIGHT                                                                              |  5617     4
   212       |#define __COPYRIGHT(s)  __IDSTRING(copyright,s)                                                  |  5618     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   109


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   213       |#endif                                                                                           |  5619     4
   214       |                                                                                                 |  5620     4
   215       |                                                                                                 |  5621     4
   216       |#ifndef __DECONST                                                                                |  5622     4
   217       |#define __DECONST(type, var)    ((type)(uintptr_t)(const void *)(var))                           |  5623     4
   218       |#endif                                                                                           |  5624     4
   219       |                                                                                                 |  5625     4
   220       |#ifndef __DEVOLATILE                                                                             |  5626     4
   221       |#define __DEVOLATILE(type, var) ((type)(uintptr_t)(volatile void *)(var))                        |  5627     4
   222       |#endif                                                                                           |  5628     4
   223       |                                                                                                 |  5629     4
   224       |#ifndef __DEQUALIFY                                                                              |  5630     4
   225       |#define __DEQUALIFY(type, var)  ((type)(uintptr_t)(const volatile void *)(var))                  |  5631     4
   226       |#endif                                                                                           |  5632     4
   227       |                                                                                                 |  5633     4
   228       |                                                                                                 |  5634     4
   229       |/*-                                                                                              |  5635     4
   230       | * The following definitions are an extension of the behavior originally                         |  5636     4
   231       | * implemented in <sys/_posix.h>, but with a different level of granularity.                     |  5637     4
   232       | * POSIX.1 requires that the macros we test be defined before any standard                       |  5638     4
   233       | * header file is included.                                                                      |  5639     4
   234       | *                                                                                               |  5640     4
   235       | * Here's a quick run-down of the versions:                                                      |  5641     4
   236       | *  defined(_POSIX_SOURCE)              1003.1-1988                                              |  5642     4
   237       | *  _POSIX_C_SOURCE == 1                1003.1-1990                                              |  5643     4
   238       | *  _POSIX_C_SOURCE == 2                1003.2-1992 C Language Binding Option                    |  5644     4
   239       | *  _POSIX_C_SOURCE == 199309           1003.1b-1993                                             |  5645     4
   240       | *  _POSIX_C_SOURCE == 199506           1003.1c-1995, 1003.1i-1995,                              |  5646     4
   241       | *                                      and the omnibus ISO/IEC 9945-1: 1996                     |  5647     4
   242       | *  _POSIX_C_SOURCE == 200112           1003.1-2001                                              |  5648     4
   243       | *  _POSIX_C_SOURCE == 200809           1003.1-2008                                              |  5649     4
   244       | *                                                                                               |  5650     4
   245       | * In addition, the X/Open Portability Guide, which is now the Single UNIX                       |  5651     4
   246       | * Specification, defines a feature-test macro which indicates the version of                    |  5652     4
   247       | * that specification, and which subsumes _POSIX_C_SOURCE.                                       |  5653     4
   248       | *                                                                                               |  5654     4
   249       | * Our macros begin with two underscores to avoid namespace screwage.                            |  5655     4
   250       | */                                                                                              |  5656     4
   251       |                                                                                                 |  5657     4
   252       |/*                                                                                               |  5658     4
   253       | * If no special macro was specified, make the DragonFly extensions                              |  5659     4
   254       | * available. Also make them available when requested so.                                        |  5660     4
   255       | */                                                                                              |  5661     4
   256       |#if (!defined(_POSIX_C_SOURCE) && !defined(_XOPEN_SOURCE) && \                                   |  5662     4
   257       |    !defined(_ANSI_SOURCE) && !defined(_C99_SOURCE)) || \                                        |  5663     4
   258       |    defined(_DRAGONFLY_SOURCE) || defined(_NETBSD_SOURCE)                                        |  5664     4
   259       |#define __DF_VISIBLE    1                                                                        |  5665     4
   260       |#else                                                                                            |  5666     4
   261       |#define __DF_VISIBLE    0                                                                        |  5667     4
   262       |#endif                                                                                           |  5668     4
   263       |                                                                                                 |  5669     4
   264       |/*-                                                                                              |  5670     4
   265       | * The following definitions are an extension of the behavior originally                         |  5671     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   110


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   266       | * implemented in <sys/_posix.h>, but with a different level of granularity.                     |  5672     4
   267       | * POSIX.1 requires that the macros we test be defined before any standard                       |  5673     4
   268       | * header file is included.                                                                      |  5674     4
   269       | *                                                                                               |  5675     4
   270       | * Here's a quick run-down of the versions:                                                      |  5676     4
   271       | *  defined(_POSIX_SOURCE)              1003.1-1988                                              |  5677     4
   272       | *  _POSIX_C_SOURCE == 1                1003.1-1990                                              |  5678     4
   273       | *  _POSIX_C_SOURCE == 2                1003.2-1992 C Language Binding Option                    |  5679     4
   274       | *  _POSIX_C_SOURCE == 199309           1003.1b-1993                                             |  5680     4
   275       | *  _POSIX_C_SOURCE == 199506           1003.1c-1995, 1003.1i-1995,                              |  5681     4
   276       | *                                      and the omnibus ISO/IEC 9945-1: 1996                     |  5682     4
   277       | *  _POSIX_C_SOURCE == 200112           1003.1-2001                                              |  5683     4
   278       | *  _POSIX_C_SOURCE == 200809           1003.1-2008                                              |  5684     4
   279       | *                                                                                               |  5685     4
   280       | * In addition, the X/Open Portability Guide, which is now the Single UNIX                       |  5686     4
   281       | * Specification, defines a feature-test macro which indicates the version of                    |  5687     4
   282       | * that specification, and which subsumes _POSIX_C_SOURCE.                                       |  5688     4
   283       | *                                                                                               |  5689     4
   284       | * Our macros begin with two underscores to avoid namespace screwage.                            |  5690     4
   285       | */                                                                                              |  5691     4
   286       |                                                                                                 |  5692     4
   287       |/* Deal with IEEE Std. 1003.1-1990, in which _POSIX_C_SOURCE == 1. */                            |  5693     4
   288       |#if defined(_POSIX_C_SOURCE) && _POSIX_C_SOURCE == 1                                             |  5694     4
   289       |#undef _POSIX_C_SOURCE          /* Probably illegal, but beyond caring now. */                   |  5695     4
   290       |#define _POSIX_C_SOURCE         199009                                                           |  5696     4
   291       |#endif                                                                                           |  5697     4
   292       |                                                                                                 |  5698     4
   293       |/* Deal with IEEE Std. 1003.2-1992, in which _POSIX_C_SOURCE == 2. */                            |  5699     4
   294       |#if defined(_POSIX_C_SOURCE) && _POSIX_C_SOURCE == 2                                             |  5700     4
   295       |#undef _POSIX_C_SOURCE                                                                           |  5701     4
   296       |#define _POSIX_C_SOURCE         199209                                                           |  5702     4
   297       |#endif                                                                                           |  5703     4
   298       |                                                                                                 |  5704     4
   299       |/* Deal with various X/Open Portability Guides and Single UNIX Spec. */                          |  5705     4
   300       |#ifdef _XOPEN_SOURCE                                                                             |  5706     4
   301       |#if _XOPEN_SOURCE - 0 >= 700                                                                     |  5707     4
   302       |#define __XSI_VISIBLE           700                                                              |  5708     4
   303       |#undef _POSIX_C_SOURCE                                                                           |  5709     4
   304       |#define _POSIX_C_SOURCE         200809                                                           |  5710     4
   305       |#elif _XOPEN_SOURCE - 0 >= 600                                                                   |  5711     4
   306       |#define __XSI_VISIBLE           600                                                              |  5712     4
   307       |#undef _POSIX_C_SOURCE                                                                           |  5713     4
   308       |#define _POSIX_C_SOURCE         200112                                                           |  5714     4
   309       |#elif _XOPEN_SOURCE - 0 >= 500                                                                   |  5715     4
   310       |#define __XSI_VISIBLE           500                                                              |  5716     4
   311       |#undef _POSIX_C_SOURCE                                                                           |  5717     4
   312       |#define _POSIX_C_SOURCE         199506                                                           |  5718     4
   313       |#endif                                                                                           |  5719     4
   314       |#endif                                                                                           |  5720     4
   315       |                                                                                                 |  5721     4
   316       |/*                                                                                               |  5722     4
   317       | * Deal with all versions of POSIX.  The ordering relative to the tests above is                 |  5723     4
   318       | * important.                                                                                    |  5724     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   111


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   319       | */                                                                                              |  5725     4
   320       |#if defined(_POSIX_SOURCE) && !defined(_POSIX_C_SOURCE)                                          |  5726     4
   321       |#define _POSIX_C_SOURCE         198808                                                           |  5727     4
   322       |#endif                                                                                           |  5728     4
   323       |#ifdef _POSIX_C_SOURCE                                                                           |  5729     4
   324       |#if _POSIX_C_SOURCE >= 200809                                                                    |  5730     4
   325       |#define __POSIX_VISIBLE         200809                                                           |  5731     4
   326       |#define __ISO_C_VISIBLE         1999                                                             |  5732     4
   327       |#elif _POSIX_C_SOURCE >= 200112                                                                  |  5733     4
   328       |#define __POSIX_VISIBLE         200112                                                           |  5734     4
   329       |#define __ISO_C_VISIBLE         1999                                                             |  5735     4
   330       |#elif _POSIX_C_SOURCE >= 199506                                                                  |  5736     4
   331       |#define __POSIX_VISIBLE         199506                                                           |  5737     4
   332       |#define __ISO_C_VISIBLE         1990                                                             |  5738     4
   333       |#elif _POSIX_C_SOURCE >= 199309                                                                  |  5739     4
   334       |#define __POSIX_VISIBLE         199309                                                           |  5740     4
   335       |#define __ISO_C_VISIBLE         1990                                                             |  5741     4
   336       |#elif _POSIX_C_SOURCE >= 199209                                                                  |  5742     4
   337       |#define __POSIX_VISIBLE         199209                                                           |  5743     4
   338       |#define __ISO_C_VISIBLE         1990                                                             |  5744     4
   339       |#elif _POSIX_C_SOURCE >= 199009                                                                  |  5745     4
   340       |#define __POSIX_VISIBLE         199009                                                           |  5746     4
   341       |#define __ISO_C_VISIBLE         1990                                                             |  5747     4
   342       |#else                                                                                            |  5748     4
   343       |#define __POSIX_VISIBLE         198808                                                           |  5749     4
   344       |#define __ISO_C_VISIBLE         0                                                                |  5750     4
   345       |#endif /* _POSIX_C_SOURCE */                                                                     |  5751     4
   346       |#else                                                                                            |  5752     4
   347       |/*-                                                                                              |  5753     4
   348       | * Deal with _ANSI_SOURCE:                                                                       |  5754     4
   349       | * If it is defined, and no other compilation environment is explicitly                          |  5755     4
   350       | * requested, then define our internal feature-test macros to zero.  This                        |  5756     4
   351       | * makes no difference to the preprocessor (undefined symbols in preprocessing                   |  5757     4
   352       | * expressions are defined to have value zero), but makes it more convenient for                 |  5758     4
   353       | * a test program to print out the values.                                                       |  5759     4
   354       | *                                                                                               |  5760     4
   355       | * If a program mistakenly defines _ANSI_SOURCE and some other macro such as                     |  5761     4
   356       | * _POSIX_C_SOURCE, we will assume that it wants the broader compilation                         |  5762     4
   357       | * environment (and in fact we will never get here).                                             |  5763     4
   358       | */                                                                                              |  5764     4
   359       |#if defined(_ANSI_SOURCE)       /* Hide almost everything. */                                    |  5765     4
   360       |#define __POSIX_VISIBLE         0                                                                |  5766     4
   361       |#define __XSI_VISIBLE           0                                                                |  5767     4
   362       |#define __BSD_VISIBLE           0                                                                |  5768     4
   363       |#define __ISO_C_VISIBLE         1990                                                             |  5769     4
   364       |#define __EXT1_VISIBLE          0                                                                |  5770     4
   365       |#elif defined(_C99_SOURCE)      /* Localism to specify strict C99 env. */                        |  5771     4
   366       |#define __POSIX_VISIBLE         0                                                                |  5772     4
   367       |#define __XSI_VISIBLE           0                                                                |  5773     4
   368       |#define __BSD_VISIBLE           0                                                                |  5774     4
   369       |#define __ISO_C_VISIBLE         1999                                                             |  5775     4
   370       |#define __EXT1_VISIBLE          0                                                                |  5776     4
   371       |#elif defined(_C11_SOURCE)      /* Localism to specify strict C11 env. */                        |  5777     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   112


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   372       |#define __POSIX_VISIBLE         0                                                                |  5778     4
   373       |#define __XSI_VISIBLE           0                                                                |  5779     4
   374       |#define __BSD_VISIBLE           0                                                                |  5780     4
   375       |#define __ISO_C_VISIBLE         2011                                                             |  5781     4
   376       |#define __EXT1_VISIBLE          0                                                                |  5782     4
   377       |#else                           /* Default environment: show everything. */                      |  5783     4
   378       |#define __POSIX_VISIBLE         200809                                                           |  5784     4
   379       |#define __XSI_VISIBLE           700                                                              |  5785     4
   380       |#define __BSD_VISIBLE           1                                                                |  5786     4
   381       |#define __ISO_C_VISIBLE         2011                                                             |  5787     4
   382       |#define __EXT1_VISIBLE          1                                                                |  5788     4
   383       |#endif                                                                                           |  5789     4
   384       |#endif                                                                                           |  5790     4
   385       |                                                                                                 |  5791     4
   386       |/* User override __EXT1_VISIBLE */                                                               |  5792     4
   387       |#if defined(__STDC_WANT_LIB_EXT1__)                                                              |  5793     4
   388       |#undef  __EXT1_VISIBLE                                                                           |  5794     4
   389       |#if __STDC_WANT_LIB_EXT1__                                                                       |  5795     4
   390       |#define __EXT1_VISIBLE          1                                                                |  5796     4
   391       |#else                                                                                            |  5797     4
   392       |#define __EXT1_VISIBLE          0                                                                |  5798     4
   393       |#endif                                                                                           |  5799     4
   394       |#endif /* __STDC_WANT_LIB_EXT1__ */                                                              |  5800     4
   395       |                                                                                                 |  5801     4
   396       |#if defined(__370__) || defined(__mips) || defined(__powerpc64__)                                |  5802     4
   397       |#define __NO_TLS 1                                                                               |  5803     4
   398       |#endif                                                                                           |  5804     4
   399       |                                                                                                 |  5805     4
   400       |                                                                                                 |  5806     4
   401       |/* easier than stripping __FBSDID() from sources - Greg 2008/07/28 */                            |  5807     4
   402       |#define __FBSDID(x)                                                                              |  5808     4
   403       |                                                                                                 |  5809     4
   404       |#endif /* !_SYS_CDEFS_H_ */                                                                      |  5810     4
   405       |#pragma pack(reset)                                                                              |  5811     4
    50       |#include <sys/_null.h>                                                                           |  5812    16
     1       |/* release 2.25.00 */                                                                            |  5813    15
     2       |#pragma pack()                                                                                   |  5814    15
     3       |/*-                                                                                              |  5815    15
     4       | * Copyright (c) 2003 Marcel Moolenaar                                                           |  5816    15
     5       | * All rights reserved.                                                                          |  5817    15
     6       | *                                                                                               |  5818    15
     7       | * Redistribution and use in source and binary forms, with or without                            |  5819    15
     8       | * modification, are permitted provided that the following conditions                            |  5820    15
     9       | * are met:                                                                                      |  5821    15
    10       | *                                                                                               |  5822    15
    11       | * 1. Redistributions of source code must retain the above copyright                             |  5823    15
    12       | *    notice, this list of conditions and the following disclaimer.                              |  5824    15
    13       | * 2. Redistributions in binary form must reproduce the above copyright                          |  5825    15
    14       | *    notice, this list of conditions and the following disclaimer in the                        |  5826    15
    15       | *    documentation and/or other materials provided with the distribution.                       |  5827    15
    16       | *                                                                                               |  5828    15
    17       | * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR                          |  5829    15
    18       | * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES                     |  5830    15
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   113


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    19       | * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.                       |  5831    15
    20       | * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,                              |  5832    15
    21       | * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT                      |  5833    15
    22       | * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,                     |  5834    15
    23       | * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY                         |  5835    15
    24       | * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT                           |  5836    15
    25       | * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF                      |  5837    15
    26       | * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                             |  5838    15
    27       | *                                                                                               |  5839    15
    28       | * $FreeBSD: src/sys/sys/_null.h,v 1.7 2005/01/07 02:29:23 imp Exp $                             |  5840    15
    29       | */                                                                                              |  5841    15
    30       |                                                                                                 |  5842    15
    31       |#ifndef NULL                                                                                     |  5843    15
    32       |                                                                                                 |  5844    15
    33       |#if defined(_KERNEL) || !defined(__cplusplus)                                                    |  5845    15
    34       |#define NULL    ((void *)0)                                                                      |  5846    15
    35       |#else                                                                                            |  5847    15
    36       |#if defined(__LP64__)                                                                            |  5848    15
    37       |#define NULL    (0L)                                                                             |  5849    15
    38       |#else                                                                                            |  5850    15
    39       |#define NULL    0                                                                                |  5851    15
    40       |#endif  /* __LP64__ */                                                                           |  5852    15
    41       |#endif  /* _KERNEL || !__cplusplus */                                                            |  5853    15
    42       |                                                                                                 |  5854    15
    43       |#endif                                                                                           |  5855    15
    44       |#pragma pack(reset)                                                                              |  5856    15
    51       |#include <sys/_types.h>                                                                          |  5857    16
     1       |/* release 2.25.00 */                                                                            |  5858     6
     2       |#pragma pack()                                                                                   |  5859     6
     3       |/*-                                                                                              |  5860     6
     4       | * Copyright (c) 2002 Mike Barcroft <mike@FreeBSD.org>                                           |  5861     6
     5       | * All rights reserved.                                                                          |  5862     6
     6       | *                                                                                               |  5863     6
     7       | * Redistribution and use in source and binary forms, with or without                            |  5864     6
     8       | * modification, are permitted provided that the following conditions                            |  5865     6
     9       | * are met:                                                                                      |  5866     6
    10       | * 1. Redistributions of source code must retain the above copyright                             |  5867     6
    11       | *    notice, this list of conditions and the following disclaimer.                              |  5868     6
    12       | * 2. Redistributions in binary form must reproduce the above copyright                          |  5869     6
    13       | *    notice, this list of conditions and the following disclaimer in the                        |  5870     6
    14       | *    documentation and/or other materials provided with the distribution.                       |  5871     6
    15       | *                                                                                               |  5872     6
    16       | * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND                        |  5873     6
    17       | * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE                         |  5874     6
    18       | * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE                    |  5875     6
    19       | * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE                       |  5876     6
    20       | * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL                    |  5877     6
    21       | * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS                       |  5878     6
    22       | * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)                         |  5879     6
    23       | * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT                    |  5880     6
    24       | * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY                     |  5881     6
    25       | * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF                        |  5882     6
    26       | * SUCH DAMAGE.                                                                                  |  5883     6
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   114


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    27       | *                                                                                               |  5884     6
    28       | * $FreeBSD: src/sys/sys/_types.h,v 1.21 2005/03/22 01:19:17 das Exp $                           |  5885     6
    29       | */                                                                                              |  5886     6
    30       |                                                                                                 |  5887     6
    31       |#ifndef _SYS__TYPES_H_                                                                           |  5888     6
    32       |#define _SYS__TYPES_H_                                                                           |  5889     6
    33       |                                                                                                 |  5890     6
    34       |#include <sys/cdefs.h>                                                                           |  5891     6
    35       |#include <machine/_types.h>                                                                      |  5892     6
    36       |                                                                                                 |  5893     6
    37       |/*                                                                                               |  5894     6
    38       | * Standard type definitions.                                                                    |  5895     6
    39       | */                                                                                              |  5896     6
    40       |typedef __int32_t       __blksize_t;    /* file block size */                                    |  5897     6
    41       |typedef __int64_t       __blkcnt_t;     /* file block count */                                   |  5898     6
    42       |typedef __int32_t       __clockid_t;    /* clock_gettime()... */                                 |  5899     6
    43       |typedef __uint32_t      __fflags_t;     /* file flags */                                         |  5900     6
    44       |typedef __uint64_t      __fsblkcnt_t;                                                            |  5901     6
    45       |typedef __uint64_t      __fsfilcnt_t;                                                            |  5902     6
    46       |typedef __uint32_t      __gid_t;                                                                 |  5903     6
    47       |typedef __int64_t       __id_t;         /* can hold a gid_t, pid_t, or uid_t */                  |  5904     6
    48       |typedef __uint32_t      __ino_t;        /* inode number */                                       |  5905     6
    49       |typedef long            __key_t;        /* IPC key (for Sys V IPC) */                            |  5906     6
    50       |typedef __int32_t       __lwpid_t;      /* Thread ID (a.k.a. LWP) */                             |  5907     6
    51       |typedef __uint16_t      __mode_t;       /* permissions */                                        |  5908     6
    52       |typedef int             __nl_item;                                                               |  5909     6
    53       |typedef __uint16_t      __nlink_t;      /* link count */                                         |  5910     6
    54       |typedef __int64_t       __off_t;        /* file offset */                                        |  5911     6
    55       |typedef __int32_t       __pid_t;        /* process [group] */                                    |  5912     6
    56       |typedef __int64_t       __rlim_t;       /* resource limit - intentionally */                     |  5913     6
    57       |                                        /* signed, because of legacy code */                     |  5914     6
    58       |                                        /* that uses -1 for RLIM_INFINITY */                     |  5915     6
    59       |typedef __uint8_t       __sa_family_t;                                                           |  5916     6
    60       |typedef __uint32_t      __socklen_t;                                                             |  5917     6
    61       |typedef long            __suseconds_t;  /* microseconds (signed) */                              |  5918     6
    62       |typedef __int32_t       __timer_t;      /* timer_gettime()... */                                 |  5919     6
    63       |typedef __uint32_t      __uid_t;                                                                 |  5920     6
    64       |typedef unsigned int    __useconds_t;   /* microseconds (unsigned) */                            |  5921     6
    65       |                                                                                                 |  5922     6
    66       |/*                                                                                               |  5923     6
    67       | * Unusual type definitions.                                                                     |  5924     6
    68       | */                                                                                              |  5925     6
    69       |/*                                                                                               |  5926     6
    70       | * rune_t is declared to be an ``int'' instead of the more natural                               |  5927     6
    71       | * ``unsigned long'' or ``long''.  Two things are happening here.  It is not                     |  5928     6
    72       | * unsigned so that EOF (-1) can be naturally assigned to it and used.  Also,                    |  5929     6
    73       | * it looks like 10646 will be a 31 bit standard.  This means that if your                       |  5930     6
    74       | * ints cannot hold 32 bits, you will be in trouble.  The reason an int was                      |  5931     6
    75       | * chosen over a long is that the is*() and to*() routines take ints (says                       |  5932     6
    76       | * ANSI C), but they use __ct_rune_t instead of int.                                             |  5933     6
    77       | *                                                                                               |  5934     6
    78       | * NOTE: rune_t is not covered by ANSI nor other standards, and should not                       |  5935     6
    79       | * be instantiated outside of lib/libc/locale.  Use wchar_t.  wchar_t and                        |  5936     6
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   115


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    80       | * rune_t must be the same type.  Also, wint_t must be no narrower than                          |  5937     6
    81       | * wchar_t, and should be able to hold all members of the largest                                |  5938     6
    82       | * character set plus one extra value (WEOF), and must be at least 16 bits.                      |  5939     6
    83       | */                                                                                              |  5940     6
    84       |#ifdef __cplusplus                                                                               |  5941     6
    85       |/* DCXX provides a builtin definition of wchar_t as a keyword, and it matters                    |  5942     6
    86       | * for parameter type matching even though it's the same type (4-byte signed) */                 |  5943     6
    87       |typedef wchar_t         __ct_rune_t;    /* arg type for ctype funcs */                           |  5944     6
    88       |#else                                                                                            |  5945     6
    89       |typedef int             __ct_rune_t;    /* arg type for ctype funcs */                           |  5946     6
    90       |#endif                                                                                           |  5947     6
    91       |typedef __ct_rune_t     __rune_t;       /* rune_t (see above) */                                 |  5948     6
    92       |typedef __ct_rune_t     __wchar_t;      /* wchar_t (see above) */                                |  5949     6
    93       |typedef __ct_rune_t     __wint_t;       /* wint_t (see above) */                                 |  5950     6
    94       |                                                                                                 |  5951     6
    95       |/* In C++11, char16_t and char32_t are builtin types */                                          |  5952     6
    96       |#if defined(__cplusplus) && __cplusplus >= 201103L                                               |  5953     6
    97       |#define _CHAR16_T_DECLARED                                                                       |  5954     6
    98       |#define _CHAR32_T_DECLARED                                                                       |  5955     6
    99       |#endif                                                                                           |  5956     6
   100       |                                                                                                 |  5957     6
   101       |#if !defined(__cplusplus)                                                                        |  5958     6
   102       |typedef __uint_least16_t __char16_t;                                                             |  5959     6
   103       |typedef __uint_least32_t __char32_t;                                                             |  5960     6
   104       |#endif                                                                                           |  5961     6
   105       |                                                                                                 |  5962     6
   106       |                                                                                                 |  5963     6
   107       |typedef __uint32_t      __dev_t;        /* device number */                                      |  5964     6
   108       |                                                                                                 |  5965     6
   109       |typedef __uint32_t      __fixpt_t;      /* fixed point number */                                 |  5966     6
   110       |                                                                                                 |  5967     6
   111       |/*                                                                                               |  5968     6
   112       | * mbstate_t is an opaque object to keep conversion state during multibyte                       |  5969     6
   113       | * stream conversions.                                                                           |  5970     6
   114       | */                                                                                              |  5971     6
   115       |typedef union {                                                                                  |  5972     6
   116       |        char            __mbstate8[128];                                                         |  5973     6
   117       |        __int64_t       _mbstateL;      /* for alignment */                                      |  5974     6
   118       |} __mbstate_t;                                                                                   |  5975     6
   119       |                                                                                                 |  5976     6
   120       |#endif /* !_SYS__TYPES_H_ */                                                                     |  5977     6
   121       |#pragma pack(reset)                                                                              |  5978     6
    52       |                                                                                                 |  5979    16
    53       |#if __POSIX_VISIBLE > 0 && __POSIX_VISIBLE < 200112 || __BSD_VISIBLE                             |  5980    16
    54       |/*                                                                                               |  5981    16
    55       | * Frequency of the clock ticks reported by times().  Deprecated - use                           |  5982    16
    56       | * sysconf(_SC_CLK_TCK) instead.  (Removed in 1003.1-2001.)                                      |  5983    16
    57       | *                                                                                               |  5984    16
    58       | */                                                                                              |  5985    16
    58       +                                                                                                 +  5985    16
    59       |#define CLK_TCK         10000                                                                    |  5986    16
    60       |#endif                                                                                           |  5987    16
    61       |                                                                                                 |  5988    16
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   116


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    62       |/* Frequency of the clock ticks reported by clock().  */                                         |  5989    16
    63       |#define CLOCKS_PER_SEC  128                                                                      |  5990    16
    64       |                                                                                                 |  5991    16
    65       |#ifndef _CLOCK_T_DECLARED                                                                        |  5992    16
    66       |typedef __clock_t       clock_t;                                                                 |  5993    16
    67       |#define _CLOCK_T_DECLARED                                                                        |  5994    16
    68       |#endif                                                                                           |  5995    16
    69       |                                                                                                 |  5996    16
    70       |#ifndef _TIME_T_DECLARED                                                                         |  5997    16
    71       |typedef __time_t        time_t;                                                                  |  5998    16
    72       |#define _TIME_T_DECLARED                                                                         |  5999    16
    73       |#endif                                                                                           |  6000    16
    74       |                                                                                                 |  6001    16
    75       |#ifndef _SIZE_T_DECLARED                                                                         |  6002    16
    76       |typedef __size_t        size_t;                                                                  |  6003    16
    77       |#define _SIZE_T_DECLARED                                                                         |  6004    16
    78       |#endif                                                                                           |  6005    16
    79       |                                                                                                 |  6006    16
    80       |#if __POSIX_VISIBLE >= 199309                                                                    |  6007    16
    81       |/*                                                                                               |  6008    16
    82       | * New in POSIX 1003.1b-1993.                                                                    |  6009    16
    83       | */                                                                                              |  6010    16
    83       +                                                                                                 +  6010    16
    84       |#ifndef _CLOCKID_T_DECLARED                                                                      |  6011    16
    85       |typedef __clockid_t     clockid_t;                                                               |  6012    16
    86       |#define _CLOCKID_T_DECLARED                                                                      |  6013    16
    87       |#endif                                                                                           |  6014    16
    88       |                                                                                                 |  6015    16
    89       |#ifndef _TIMER_T_DECLARED                                                                        |  6016    16
    90       |typedef __timer_t       timer_t;                                                                 |  6017    16
    91       |#define _TIMER_T_DECLARED                                                                        |  6018    16
    92       |#endif                                                                                           |  6019    16
    93       |                                                                                                 |  6020    16
    94       |#include <sys/timespec.h>                                                                        |  6021    16
     1       |/* release 2.25.00 */                                                                            |  6022    12
     2       |#pragma pack()                                                                                   |  6023    12
     3       |/*-                                                                                              |  6024    12
     4       | * Copyright (c) 1982, 1986, 1993                                                                |  6025    12
     5       | *      The Regents of the University of California.  All rights reserved.                       |  6026    12
     6       | *                                                                                               |  6027    12
     7       | * Redistribution and use in source and binary forms, with or without                            |  6028    12
     8       | * modification, are permitted provided that the following conditions                            |  6029    12
     9       | * are met:                                                                                      |  6030    12
    10       | * 1. Redistributions of source code must retain the above copyright                             |  6031    12
    11       | *    notice, this list of conditions and the following disclaimer.                              |  6032    12
    12       | * 2. Redistributions in binary form must reproduce the above copyright                          |  6033    12
    13       | *    notice, this list of conditions and the following disclaimer in the                        |  6034    12
    14       | *    documentation and/or other materials provided with the distribution.                       |  6035    12
    15       | * 4. Neither the name of the University nor the names of its contributors                       |  6036    12
    16       | *    may be used to endorse or promote products derived from this software                      |  6037    12
    17       | *    without specific prior written permission.                                                 |  6038    12
    18       | *                                                                                               |  6039    12
    19       | * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND                       |  6040    12
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   117


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    20       | * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE                         |  6041    12
    21       | * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE                    |  6042    12
    22       | * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE                      |  6043    12
    23       | * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL                    |  6044    12
    24       | * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS                       |  6045    12
    25       | * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)                         |  6046    12
    26       | * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT                    |  6047    12
    27       | * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY                     |  6048    12
    28       | * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF                        |  6049    12
    29       | * SUCH DAMAGE.                                                                                  |  6050    12
    30       | *                                                                                               |  6051    12
    31       | *      @(#)time.h      8.5 (Berkeley) 5/4/95                                                    |  6052    12
    32       | * from: FreeBSD: src/sys/sys/time.h,v 1.43 2000/03/20 14:09:05 phk Exp                          |  6053    12
    33       | *      $FreeBSD: src/sys/sys/timespec.h,v 1.4 2005/01/07 02:29:24 imp Exp $                     |  6054    12
    34       | */                                                                                              |  6055    12
    35       |                                                                                                 |  6056    12
    36       |/*                                                                                               |  6057    12
    37       | * Prerequisites: <sys/cdefs.h>, <sys/_types.h>                                                  |  6058    12
    38       | */                                                                                              |  6059    12
    39       |                                                                                                 |  6060    12
    40       |#ifndef _SYS_TIMESPEC_H_                                                                         |  6061    12
    41       |#define _SYS_TIMESPEC_H_                                                                         |  6062    12
    42       |                                                                                                 |  6063    12
    43       |#include <sys/_types.h>                                                                          |  6064    12
    44       |                                                                                                 |  6065    12
    45       |#ifndef _TIME_T_DECLARED                                                                         |  6066    12
    46       |typedef __time_t        time_t;                                                                  |  6067    12
    47       |#define _TIME_T_DECLARED                                                                         |  6068    12
    48       |#endif                                                                                           |  6069    12
    49       |                                                                                                 |  6070    12
    50       |struct timespec {                                                                                |  6071    12
    51       |        time_t  tv_sec;         /* seconds */                                                    |  6072    12
    52       |        long    tv_nsec;        /* and nanoseconds */                                            |  6073    12
    53       |};                                                                                               |  6074    12
    54       |                                                                                                 |  6075    12
    55       |#if __BSD_VISIBLE                                                                                |  6076    12
    56       |#define TIMEVAL_TO_TIMESPEC(tv, ts)                                     \                        |  6077    12
    57       |        do {                                                            \                        |  6078    12
    58       |                (ts)->tv_sec = (tv)->tv_sec;                            \                        |  6079    12
    59       |                (ts)->tv_nsec = (tv)->tv_usec * 1000;                   \                        |  6080    12
    60       |        } while (0)                                                                              |  6081    12
    61       |#define TIMESPEC_TO_TIMEVAL(tv, ts)                                     \                        |  6082    12
    62       |        do {                                                            \                        |  6083    12
    63       |                (tv)->tv_sec = (ts)->tv_sec;                            \                        |  6084    12
    64       |                (tv)->tv_usec = (ts)->tv_nsec / 1000;                   \                        |  6085    12
    65       |        } while (0)                                                                              |  6086    12
    66       |                                                                                                 |  6087    12
    67       |#endif /* __BSD_VISIBLE */                                                                       |  6088    12
    68       |                                                                                                 |  6089    12
    69       |#endif /* _SYS_TIMESPEC_H_ */                                                                    |  6090    12
    70       |#pragma pack(reset)                                                                              |  6091    12
    95       |#endif /* __POSIX_VISIBLE >= 199309 */                                                           |  6092    16
    96       |                                                                                                 |  6093    16
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   118


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    97       |/* These macros are also in sys/time.h. */                                                       |  6094    16
    98       |#if !defined(CLOCK_REALTIME) && __POSIX_VISIBLE >= 200112                                        |  6095    16
    99       |#define CLOCK_REALTIME  0                                                                        |  6096    16
   100       |#if 0                                                                                            |  6097    16
   101       |  /* only CLOCK_REALTIME exists in this implementation */                                        |  6098    16
   102       |#ifdef __BSD_VISIBLE                                                                             |  6099    16
   103       |#define CLOCK_VIRTUAL   1                                                                        |  6100    16
   104       |#define CLOCK_PROF      2                                                                        |  6101    16
   105       |#endif                                                                                           |  6102    16
   106       |#define CLOCK_MONOTONIC 4                                                                        |  6103    16
   107       |#endif /* 0 */                                                                                   |  6104    16
   108       |#endif /* !defined(CLOCK_REALTIME) && __POSIX_VISIBLE >= 200112 */                               |  6105    16
   109       |                                                                                                 |  6106    16
   109       +                                                                                                 +  6106    16
   110       |#if !defined(TIMER_ABSTIME) && __POSIX_VISIBLE >= 200112                                         |  6107    16
   111       |#if __BSD_VISIBLE                                                                                |  6108    16
   112       |#define TIMER_RELTIME   0x0     /* relative timer */                                             |  6109    16
   113       |#endif                                                                                           |  6110    16
   114       |#define TIMER_ABSTIME   0x1     /* absolute timer */                                             |  6111    16
   115       |#endif /* !defined(TIMER_ABSTIME) && __POSIX_VISIBLE >= 200112 */                                |  6112    16
   116       |                                                                                                 |  6113    16
   116       +                                                                                                 +  6113    16
   117       |struct tm {                                                                                      |  6114    16
   118       |        int     tm_sec;         /* seconds after the minute [0-60] */                            |  6115    16
   119       |        int     tm_min;         /* minutes after the hour [0-59] */                              |  6116    16
   120       |        int     tm_hour;        /* hours since midnight [0-23] */                                |  6117    16
   121       |        int     tm_mday;        /* day of the month [1-31] */                                    |  6118    16
   122       |        int     tm_mon;         /* months since January [0-11] */                                |  6119    16
   123       |        int     tm_year;        /* years since 1900 */                                           |  6120    16
   124       |        int     tm_wday;        /* days since Sunday [0-6] */                                    |  6121    16
   125       |        int     tm_yday;        /* days since January 1 [0-365] */                               |  6122    16
   126       |        int     tm_isdst;       /* Daylight Savings Time flag */                                 |  6123    16
   127       |        long    tm_gmtoff;      /* offset from UTC in seconds */                                 |  6124    16
   128       |        char    *tm_zone;       /* timezone abbreviation */                                      |  6125    16
   129       |};                                                                                               |  6126    16
   130       |                                                                                                 |  6127    16
   131       |#if __POSIX_VISIBLE                                                                              |  6128    16
   132       |extern char *tzname[];                                                                           |  6129    16
   132       +extern char *tzname[];                                                                           +  6129    16
   133       |#endif                                                                                           |  6130    16
   134       |                                                                                                 |  6131    16
   135       |__BEGIN_DECLS                                                                                    |  6132    16
   135       +                                                                                                 +  6132    16
   136       |char *asctime(const struct tm *);                                                                |  6133    16
   137       |clock_t clock(void);                                                                             |  6134    16
   138       |char *ctime(const time_t *);                                                                     |  6135    16
   139       |double difftime(time_t, time_t);                                                                 |  6136    16
   140       |/* XXX missing: getdate() */                                                                     |  6137    16
   141       |struct tm *gmtime(const time_t *);                                                               |  6138    16
   142       |#pragma map (localtime, "LC@LTIME")                                                              |  6139    16
   143       |struct tm *localtime(const time_t *);                                                            |  6140    16
   144       |time_t mktime(struct tm *);                                                                      |  6141    16
   145       |size_t strftime(char * __restrict, size_t, const char * __restrict,                              |  6142    16
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   119


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   145       +size_t strftime(char * __restrict__, size_t, const char * __restrict__,                          +  6142    16
   146       |    const struct tm * __restrict);                                                               |  6143    16
   146       +        const struct tm * __restrict__);                                                         +  6143    16
   147       |time_t time(time_t *);                                                                           |  6144    16
   148       |                                                                                                 |  6145    16
   149       |#if __POSIX_VISIBLE                                                                              |  6146    16
   150       |void tzset(void);                                                                                |  6147    16
   150       +void tzset(void);                                                                                +  6147    16
   151       |#endif                                                                                           |  6148    16
   152       |                                                                                                 |  6149    16
   153       |#if __POSIX_VISIBLE >= 199309                                                                    |  6150    16
   154       |#pragma map(clock_getres, "@@CLKRES")                                                            |  6151    16
   154       +#pragma map ( clock_getres , "@@CLKRES" )                                                        +  6151    16
   155       |int clock_getres(clockid_t, struct timespec *);                                                  |  6152    16
   156       |#pragma map(clock_gettime, "@@CLKGET")                                                           |  6153    16
   157       |int clock_gettime(clockid_t, struct timespec *);                                                 |  6154    16
   158       |#pragma map(clock_settime, "@@CLKSET")                                                           |  6155    16
   159       |int clock_settime(clockid_t, const struct timespec *);                                           |  6156    16
   160       |#pragma map(nanosleep,"@@NNOSLP")                                                                |  6157    16
   161       |int nanosleep(const struct timespec *, struct timespec *);                                       |  6158    16
   162       |#endif /* __POSIX_VISIBLE >= 199309 */                                                           |  6159    16
   163       |                                                                                                 |  6160    16
   164       |#if __POSIX_VISIBLE >= 199506                                                                    |  6161    16
   165       |#pragma map(asctime_r, "@@ASCT@R")                                                               |  6162    16
   165       +#pragma map ( asctime_r , "@@ASCT@R" )                                                           +  6162    16
   166       |char *asctime_r(const struct tm *, char *);                                                      |  6163    16
   167       |#pragma map(ctime_r, "@@CTME@R")                                                                 |  6164    16
   168       |char *ctime_r(const time_t *, char *);                                                           |  6165    16
   169       |#pragma map(gmtime_r, "@@GMTM@R")                                                                |  6166    16
   170       |struct tm *gmtime_r(const time_t *, struct tm *);                                                |  6167    16
   171       |#pragma map(localtime_r, "@@LCLT@R")                                                             |  6168    16
   172       |struct tm *localtime_r(const time_t *, struct tm *);                                             |  6169    16
   173       |#endif                                                                                           |  6170    16
   174       |                                                                                                 |  6171    16
   175       |#if __XSI_VISIBLE                                                                                |  6172    16
   176       |char *strptime(const char * __restrict, const char * __restrict,                                 |  6173    16
   176       +char *strptime(const char * __restrict__, const char * __restrict__,                             +  6173    16
   177       |    struct tm * __restrict);                                                                     |  6174    16
   177       +        struct tm * __restrict__);                                                               +  6174    16
   178       |#endif                                                                                           |  6175    16
   179       |                                                                                                 |  6176    16
   180       |#if __BSD_VISIBLE                                                                                |  6177    16
   181       |char *timezone(int, int);       /* XXX XSI conflict */                                           |  6178    16
   181       +char *timezone(int, int);                                                                        +  6178    16
   182       |void tzsetwall(void);                                                                            |  6179    16
   183       |#pragma map (timelocal, "TIMELC@L")                                                              |  6180    16
   184       |time_t timelocal(struct tm * const);                                                             |  6181    16
   185       |time_t timegm(struct tm * const);                                                                |  6182    16
   186       |#endif /* __BSD_VISIBLE */                                                                       |  6183    16
   187       |__END_DECLS                                                                                      |  6184    16
   187       +                                                                                                 +  6184    16
   188       |                                                                                                 |  6185    16
   189       |#endif /* !_TIME_H_ */                                                                           |  6186    16
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   120


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   190       |#pragma pack(reset)                                                                              |  6187    16
    24       |#include <sys/time.h>                                                                            |  6188     2
     1       |/* release 2.25.00 */                                                                            |  6189    17
     2       |#pragma pack()                                                                                   |  6190    17
     3       |/*-                                                                                              |  6191    17
     4       | * Copyright (c) 1982, 1986, 1993                                                                |  6192    17
     5       | *      The Regents of the University of California.  All rights reserved.                       |  6193    17
     6       | *                                                                                               |  6194    17
     7       | * Redistribution and use in source and binary forms, with or without                            |  6195    17
     8       | * modification, are permitted provided that the following conditions                            |  6196    17
     9       | * are met:                                                                                      |  6197    17
    10       | * 1. Redistributions of source code must retain the above copyright                             |  6198    17
    11       | *    notice, this list of conditions and the following disclaimer.                              |  6199    17
    12       | * 2. Redistributions in binary form must reproduce the above copyright                          |  6200    17
    13       | *    notice, this list of conditions and the following disclaimer in the                        |  6201    17
    14       | *    documentation and/or other materials provided with the distribution.                       |  6202    17
    15       | * 4. Neither the name of the University nor the names of its contributors                       |  6203    17
    16       | *    may be used to endorse or promote products derived from this software                      |  6204    17
    17       | *    without specific prior written permission.                                                 |  6205    17
    18       | *                                                                                               |  6206    17
    19       | * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND                       |  6207    17
    20       | * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE                         |  6208    17
    21       | * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE                    |  6209    17
    22       | * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE                      |  6210    17
    23       | * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL                    |  6211    17
    24       | * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS                       |  6212    17
    25       | * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)                         |  6213    17
    26       | * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT                    |  6214    17
    27       | * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY                     |  6215    17
    28       | * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF                        |  6216    17
    29       | * SUCH DAMAGE.                                                                                  |  6217    17
    30       | *                                                                                               |  6218    17
    31       | *      @(#)time.h      8.5 (Berkeley) 5/4/95                                                    |  6219    17
    32       | * $FreeBSD: src/sys/sys/time.h,v 1.69 2005/04/02 12:33:27 das Exp $                             |  6220    17
    33       | */                                                                                              |  6221    17
    34       |                                                                                                 |  6222    17
    35       |#ifndef _SYS_TIME_H_                                                                             |  6223    17
    36       |#define _SYS_TIME_H_                                                                             |  6224    17
    37       |                                                                                                 |  6225    17
    38       |#include <sys/_timeval.h>                                                                        |  6226    17
     1       |/* release 2.25.00 */                                                                            |  6227    11
     2       |#pragma pack()                                                                                   |  6228    11
     3       |/*-                                                                                              |  6229    11
     4       | * Copyright (c) 2002 Mike Barcroft <mike@FreeBSD.org>                                           |  6230    11
     5       | * All rights reserved.                                                                          |  6231    11
     6       | *                                                                                               |  6232    11
     7       | * Redistribution and use in source and binary forms, with or without                            |  6233    11
     8       | * modification, are permitted provided that the following conditions                            |  6234    11
     9       | * are met:                                                                                      |  6235    11
    10       | * 1. Redistributions of source code must retain the above copyright                             |  6236    11
    11       | *    notice, this list of conditions and the following disclaimer.                              |  6237    11
    12       | * 2. Redistributions in binary form must reproduce the above copyright                          |  6238    11
    13       | *    notice, this list of conditions and the following disclaimer in the                        |  6239    11
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   121


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    14       | *    documentation and/or other materials provided with the distribution.                       |  6240    11
    15       | *                                                                                               |  6241    11
    16       | * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND                        |  6242    11
    17       | * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE                         |  6243    11
    18       | * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE                    |  6244    11
    19       | * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE                       |  6245    11
    20       | * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL                    |  6246    11
    21       | * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS                       |  6247    11
    22       | * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)                         |  6248    11
    23       | * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT                    |  6249    11
    24       | * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY                     |  6250    11
    25       | * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF                        |  6251    11
    26       | * SUCH DAMAGE.                                                                                  |  6252    11
    27       | *                                                                                               |  6253    11
    28       | * $FreeBSD: src/sys/sys/_timeval.h,v 1.1.12.1 2006/06/23 23:41:05 cognet Exp $                  |  6254    11
    29       | */                                                                                              |  6255    11
    30       |                                                                                                 |  6256    11
    31       |#ifndef _SYS__TIMEVAL_H_                                                                         |  6257    11
    32       |#define _SYS__TIMEVAL_H_                                                                         |  6258    11
    33       |                                                                                                 |  6259    11
    34       |#include <sys/_types.h>                                                                          |  6260    11
    35       |                                                                                                 |  6261    11
    36       |#ifndef _SUSECONDS_T_DECLARED                                                                    |  6262    11
    37       |typedef __suseconds_t   suseconds_t;                                                             |  6263    11
    38       |#define _SUSECONDS_T_DECLARED                                                                    |  6264    11
    39       |#endif                                                                                           |  6265    11
    40       |                                                                                                 |  6266    11
    41       |#ifndef _TIME_T_DECLARED                                                                         |  6267    11
    42       |typedef __time_t        time_t;                                                                  |  6268    11
    43       |#define _TIME_T_DECLARED                                                                         |  6269    11
    44       |#endif                                                                                           |  6270    11
    45       |                                                                                                 |  6271    11
    46       |/*                                                                                               |  6272    11
    47       | * Structure returned by gettimeofday(2) system call, and used in other calls.                   |  6273    11
    48       | */                                                                                              |  6274    11
    49       |struct timeval {                                                                                 |  6275    11
    50       |        time_t          tv_sec;                                                                  |  6276    11
    51       |        suseconds_t     tv_usec;        /* and microseconds */                                   |  6277    11
    52       |};                                                                                               |  6278    11
    53       |                                                                                                 |  6279    11
    54       |#endif /* !_SYS__TIMEVAL_H_ */                                                                   |  6280    11
    55       |#pragma pack(reset)                                                                              |  6281    11
    39       |#include <sys/types.h>                                                                           |  6282    17
     1       |/* release 2.25.00 */                                                                            |  6283     3
     2       |#pragma pack()                                                                                   |  6284     3
     3       |/*-                                                                                              |  6285     3
     4       | * Copyright (c) 1982, 1986, 1991, 1993, 1994                                                    |  6286     3
     5       | *      The Regents of the University of California.  All rights reserved.                       |  6287     3
     6       | * (c) UNIX System Laboratories, Inc.                                                            |  6288     3
     7       | * All or some portions of this file are derived from material licensed                          |  6289     3
     8       | * to the University of California by American Telephone and Telegraph                           |  6290     3
     9       | * Co. or Unix System Laboratories, Inc. and are reproduced herein with                          |  6291     3
    10       | * the permission of UNIX System Laboratories, Inc.                                              |  6292     3
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   122


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    11       | *                                                                                               |  6293     3
    12       | * Redistribution and use in source and binary forms, with or without                            |  6294     3
    13       | * modification, are permitted provided that the following conditions                            |  6295     3
    14       | * are met:                                                                                      |  6296     3
    15       | * 1. Redistributions of source code must retain the above copyright                             |  6297     3
    16       | *    notice, this list of conditions and the following disclaimer.                              |  6298     3
    17       | * 2. Redistributions in binary form must reproduce the above copyright                          |  6299     3
    18       | *    notice, this list of conditions and the following disclaimer in the                        |  6300     3
    19       | *    documentation and/or other materials provided with the distribution.                       |  6301     3
    20       | * 4. Neither the name of the University nor the names of its contributors                       |  6302     3
    21       | *    may be used to endorse or promote products derived from this software                      |  6303     3
    22       | *    without specific prior written permission.                                                 |  6304     3
    23       | *                                                                                               |  6305     3
    24       | * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND                       |  6306     3
    25       | * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE                         |  6307     3
    26       | * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE                    |  6308     3
    27       | * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE                      |  6309     3
    28       | * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL                    |  6310     3
    29       | * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS                       |  6311     3
    30       | * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)                         |  6312     3
    31       | * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT                    |  6313     3
    32       | * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY                     |  6314     3
    33       | * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF                        |  6315     3
    34       | * SUCH DAMAGE.                                                                                  |  6316     3
    35       | *                                                                                               |  6317     3
    36       | *      @(#)types.h     8.6 (Berkeley) 2/19/95                                                   |  6318     3
    37       | * $FreeBSD: src/sys/sys/types.h,v 1.92 2005/05/31 15:18:17 rodrigc Exp $                        |  6319     3
    38       | */                                                                                              |  6320     3
    39       |                                                                                                 |  6321     3
    40       |#ifndef _SYS_TYPES_H_                                                                            |  6322     3
    41       |#define _SYS_TYPES_H_                                                                            |  6323     3
    42       |                                                                                                 |  6324     3
    43       |#include <sys/cdefs.h>                                                                           |  6325     3
    44       |                                                                                                 |  6326     3
    45       |/* Machine type dependent parameters. */                                                         |  6327     3
    46       |#include <machine/endian.h>                                                                      |  6328     3
    47       |#include <sys/_types.h>                                                                          |  6329     3
    48       |                                                                                                 |  6330     3
    49       |#include <sys/_pthreadtypes.h>                                                                   |  6331     3
    50       |                                                                                                 |  6332     3
    51       |#if __BSD_VISIBLE                                                                                |  6333     3
    52       |typedef unsigned char   u_char;                                                                  |  6334     3
    53       |typedef unsigned short  u_short;                                                                 |  6335     3
    54       |typedef unsigned int    u_int;                                                                   |  6336     3
    55       |typedef unsigned long   u_long;                                                                  |  6337     3
    56       |#ifndef _KERNEL                                                                                  |  6338     3
    57       |typedef unsigned short  ushort;         /* Sys V compatibility */                                |  6339     3
    58       |typedef unsigned int    uint;           /* Sys V compatibility */                                |  6340     3
    59       |#endif                                                                                           |  6341     3
    60       |#endif                                                                                           |  6342     3
    61       |                                                                                                 |  6343     3
    62       |/*                                                                                               |  6344     3
    63       | * XXX POSIX sized integrals that should appear only in <sys/stdint.h>.                          |  6345     3
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   123


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    64       | */                                                                                              |  6346     3
    65       |#ifndef _INT8_T_DECLARED                                                                         |  6347     3
    66       |typedef __int8_t        int8_t;                                                                  |  6348     3
    67       |#define _INT8_T_DECLARED                                                                         |  6349     3
    68       |#endif                                                                                           |  6350     3
    69       |                                                                                                 |  6351     3
    70       |#ifndef _INT16_T_DECLARED                                                                        |  6352     3
    71       |typedef __int16_t       int16_t;                                                                 |  6353     3
    72       |#define _INT16_T_DECLARED                                                                        |  6354     3
    73       |#endif                                                                                           |  6355     3
    74       |                                                                                                 |  6356     3
    75       |#ifndef _INT32_T_DECLARED                                                                        |  6357     3
    76       |typedef __int32_t       int32_t;                                                                 |  6358     3
    77       |#define _INT32_T_DECLARED                                                                        |  6359     3
    78       |#endif                                                                                           |  6360     3
    79       |                                                                                                 |  6361     3
    80       |#ifndef _INT64_T_DECLARED                                                                        |  6362     3
    81       |typedef __int64_t       int64_t;                                                                 |  6363     3
    82       |#define _INT64_T_DECLARED                                                                        |  6364     3
    83       |#endif                                                                                           |  6365     3
    84       |                                                                                                 |  6366     3
    85       |#ifndef _UINT8_T_DECLARED                                                                        |  6367     3
    86       |typedef __uint8_t       uint8_t;                                                                 |  6368     3
    87       |#define _UINT8_T_DECLARED                                                                        |  6369     3
    88       |#endif                                                                                           |  6370     3
    89       |                                                                                                 |  6371     3
    90       |#ifndef _UINT16_T_DECLARED                                                                       |  6372     3
    91       |typedef __uint16_t      uint16_t;                                                                |  6373     3
    92       |#define _UINT16_T_DECLARED                                                                       |  6374     3
    93       |#endif                                                                                           |  6375     3
    94       |                                                                                                 |  6376     3
    95       |#ifndef _UINT32_T_DECLARED                                                                       |  6377     3
    96       |typedef __uint32_t      uint32_t;                                                                |  6378     3
    97       |#define _UINT32_T_DECLARED                                                                       |  6379     3
    98       |#endif                                                                                           |  6380     3
    99       |                                                                                                 |  6381     3
   100       |#ifndef _UINT64_T_DECLARED                                                                       |  6382     3
   101       |typedef __uint64_t      uint64_t;                                                                |  6383     3
   102       |#define _UINT64_T_DECLARED                                                                       |  6384     3
   103       |#endif                                                                                           |  6385     3
   104       |                                                                                                 |  6386     3
   105       |#ifndef _INTPTR_T_DECLARED                                                                       |  6387     3
   106       |typedef __intptr_t      intptr_t;                                                                |  6388     3
   107       |typedef __uintptr_t     uintptr_t;                                                               |  6389     3
   108       |#define _INTPTR_T_DECLARED                                                                       |  6390     3
   109       |#endif                                                                                           |  6391     3
   110       |                                                                                                 |  6392     3
   111       |typedef __uint8_t       u_int8_t;       /* unsigned integrals (deprecated) */                    |  6393     3
   112       |typedef __uint16_t      u_int16_t;                                                               |  6394     3
   113       |typedef __uint32_t      u_int32_t;                                                               |  6395     3
   114       |typedef __uint64_t      u_int64_t;                                                               |  6396     3
   115       |                                                                                                 |  6397     3
   116       |typedef __uint64_t      u_quad_t;       /* quads (deprecated) */                                 |  6398     3
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   124


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   117       |typedef __int64_t       quad_t;                                                                  |  6399     3
   118       |typedef quad_t *        qaddr_t;                                                                 |  6400     3
   119       |                                                                                                 |  6401     3
   120       |typedef char *          caddr_t;        /* core address */                                       |  6402     3
   121       |typedef __const char *  c_caddr_t;      /* core address, pointer to const */                     |  6403     3
   122       |typedef __volatile char *v_caddr_t;     /* core address, pointer to volatile */                  |  6404     3
   123       |                                                                                                 |  6405     3
   124       |#ifndef _BLKSIZE_T_DECLARED                                                                      |  6406     3
   125       |typedef __blksize_t     blksize_t;                                                               |  6407     3
   126       |#define _BLKSIZE_T_DECLARED                                                                      |  6408     3
   127       |#endif                                                                                           |  6409     3
   128       |                                                                                                 |  6410     3
   129       |#ifndef _BLKCNT_T_DECLARED                                                                       |  6411     3
   130       |typedef __blkcnt_t      blkcnt_t;                                                                |  6412     3
   131       |#define _BLKCNT_T_DECLARED                                                                       |  6413     3
   132       |#endif                                                                                           |  6414     3
   133       |                                                                                                 |  6415     3
   134       |#ifndef _CLOCK_T_DECLARED                                                                        |  6416     3
   135       |typedef __clock_t       clock_t;                                                                 |  6417     3
   136       |#define _CLOCK_T_DECLARED                                                                        |  6418     3
   137       |#endif                                                                                           |  6419     3
   138       |                                                                                                 |  6420     3
   139       |#ifndef _CLOCKID_T_DECLARED                                                                      |  6421     3
   140       |typedef __clockid_t     clockid_t;                                                               |  6422     3
   141       |#define _CLOCKID_T_DECLARED                                                                      |  6423     3
   142       |#endif                                                                                           |  6424     3
   143       |                                                                                                 |  6425     3
   144       |typedef __critical_t    critical_t;     /* Critical section value */                             |  6426     3
   145       |typedef __int64_t       daddr_t;        /* disk address */                                       |  6427     3
   146       |                                                                                                 |  6428     3
   147       |#ifndef _DEV_T_DECLARED                                                                          |  6429     3
   148       |typedef __dev_t         dev_t;          /* device number or struct cdev */                       |  6430     3
   149       |#define _DEV_T_DECLARED                                                                          |  6431     3
   150       |#endif                                                                                           |  6432     3
   151       |                                                                                                 |  6433     3
   152       |#ifndef _FFLAGS_T_DECLARED                                                                       |  6434     3
   153       |typedef __fflags_t      fflags_t;       /* file flags */                                         |  6435     3
   154       |#define _FFLAGS_T_DECLARED                                                                       |  6436     3
   155       |#endif                                                                                           |  6437     3
   156       |                                                                                                 |  6438     3
   157       |typedef __fixpt_t       fixpt_t;        /* fixed point number */                                 |  6439     3
   158       |                                                                                                 |  6440     3
   159       |#ifndef _FSBLKCNT_T_DECLARED            /* for statvfs() */                                      |  6441     3
   160       |typedef __fsblkcnt_t    fsblkcnt_t;                                                              |  6442     3
   161       |typedef __fsfilcnt_t    fsfilcnt_t;                                                              |  6443     3
   162       |#define _FSBLKCNT_T_DECLARED                                                                     |  6444     3
   163       |#endif                                                                                           |  6445     3
   164       |                                                                                                 |  6446     3
   165       |#ifndef _GID_T_DECLARED                                                                          |  6447     3
   166       |typedef __gid_t         gid_t;          /* group id */                                           |  6448     3
   167       |#define _GID_T_DECLARED                                                                          |  6449     3
   168       |#endif                                                                                           |  6450     3
   169       |                                                                                                 |  6451     3
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   125


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   170       |#ifndef _IN_ADDR_T_DECLARED                                                                      |  6452     3
   171       |typedef __uint32_t      in_addr_t;      /* base type for internet address */                     |  6453     3
   172       |#define _IN_ADDR_T_DECLARED                                                                      |  6454     3
   173       |#endif                                                                                           |  6455     3
   174       |                                                                                                 |  6456     3
   175       |#ifndef _IN_PORT_T_DECLARED                                                                      |  6457     3
   176       |typedef __uint16_t      in_port_t;                                                               |  6458     3
   177       |#define _IN_PORT_T_DECLARED                                                                      |  6459     3
   178       |#endif                                                                                           |  6460     3
   179       |                                                                                                 |  6461     3
   180       |#ifndef _ID_T_DECLARED                                                                           |  6462     3
   181       |typedef __id_t          id_t;           /* can hold a uid_t or pid_t */                          |  6463     3
   182       |#define _ID_T_DECLARED                                                                           |  6464     3
   183       |#endif                                                                                           |  6465     3
   184       |                                                                                                 |  6466     3
   185       |#ifndef _INO_T_DECLARED                                                                          |  6467     3
   186       |typedef __ino_t         ino_t;          /* inode number */                                       |  6468     3
   187       |#define _INO_T_DECLARED                                                                          |  6469     3
   188       |#endif                                                                                           |  6470     3
   189       |                                                                                                 |  6471     3
   190       |#ifndef _KEY_T_DECLARED                                                                          |  6472     3
   191       |typedef __key_t         key_t;          /* IPC key (for Sys V IPC) */                            |  6473     3
   192       |#define _KEY_T_DECLARED                                                                          |  6474     3
   193       |#endif                                                                                           |  6475     3
   194       |                                                                                                 |  6476     3
   195       |#ifndef _LWPID_T_DECLARED                                                                        |  6477     3
   196       |typedef __lwpid_t       lwpid_t;        /* Thread ID (a.k.a. LWP) */                             |  6478     3
   197       |#define _LWPID_T_DECLARED                                                                        |  6479     3
   198       |#endif                                                                                           |  6480     3
   199       |                                                                                                 |  6481     3
   200       |#ifndef _MODE_T_DECLARED                                                                         |  6482     3
   201       |typedef __mode_t        mode_t;         /* permissions */                                        |  6483     3
   202       |#define _MODE_T_DECLARED                                                                         |  6484     3
   203       |#endif                                                                                           |  6485     3
   204       |                                                                                                 |  6486     3
   205       |#ifndef _NLINK_T_DECLARED                                                                        |  6487     3
   206       |typedef __nlink_t       nlink_t;        /* link count */                                         |  6488     3
   207       |#define _NLINK_T_DECLARED                                                                        |  6489     3
   208       |#endif                                                                                           |  6490     3
   209       |                                                                                                 |  6491     3
   210       |#ifndef _OFF_T_DECLARED                                                                          |  6492     3
   211       |typedef __off_t         off_t;          /* file offset */                                        |  6493     3
   212       |#define _OFF_T_DECLARED                                                                          |  6494     3
   213       |#endif                                                                                           |  6495     3
   214       |                                                                                                 |  6496     3
   215       |#ifndef _PID_T_DECLARED                                                                          |  6497     3
   216       |typedef __pid_t         pid_t;          /* process id */                                         |  6498     3
   217       |#define _PID_T_DECLARED                                                                          |  6499     3
   218       |#endif                                                                                           |  6500     3
   219       |                                                                                                 |  6501     3
   220       |typedef __register_t    register_t;                                                              |  6502     3
   221       |                                                                                                 |  6503     3
   222       |#ifndef _RLIM_T_DECLARED                                                                         |  6504     3
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   126


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   223       |typedef __rlim_t        rlim_t;         /* resource limit */                                     |  6505     3
   224       |#define _RLIM_T_DECLARED                                                                         |  6506     3
   225       |#endif                                                                                           |  6507     3
   226       |                                                                                                 |  6508     3
   227       |typedef __segsz_t       segsz_t;        /* segment size (in pages) */                            |  6509     3
   228       |                                                                                                 |  6510     3
   229       |#ifndef _SIZE_T_DECLARED                                                                         |  6511     3
   230       |typedef __size_t        size_t;                                                                  |  6512     3
   231       |#define _SIZE_T_DECLARED                                                                         |  6513     3
   232       |#endif                                                                                           |  6514     3
   233       |                                                                                                 |  6515     3
   234       |#ifndef _SSIZE_T_DECLARED                                                                        |  6516     3
   235       |typedef __ssize_t       ssize_t;                                                                 |  6517     3
   236       |#define _SSIZE_T_DECLARED                                                                        |  6518     3
   237       |#endif                                                                                           |  6519     3
   238       |                                                                                                 |  6520     3
   239       |#ifndef _SUSECONDS_T_DECLARED                                                                    |  6521     3
   240       |typedef __suseconds_t   suseconds_t;    /* microseconds (signed) */                              |  6522     3
   241       |#define _SUSECONDS_T_DECLARED                                                                    |  6523     3
   242       |#endif                                                                                           |  6524     3
   243       |                                                                                                 |  6525     3
   244       |#ifndef _TIME_T_DECLARED                                                                         |  6526     3
   245       |typedef __time_t        time_t;                                                                  |  6527     3
   246       |#define _TIME_T_DECLARED                                                                         |  6528     3
   247       |#endif                                                                                           |  6529     3
   248       |                                                                                                 |  6530     3
   249       |#ifndef _TIMER_T_DECLARED                                                                        |  6531     3
   250       |typedef __timer_t       timer_t;                                                                 |  6532     3
   251       |#define _TIMER_T_DECLARED                                                                        |  6533     3
   252       |#endif                                                                                           |  6534     3
   253       |                                                                                                 |  6535     3
   254       |typedef __u_register_t  u_register_t;                                                            |  6536     3
   255       |                                                                                                 |  6537     3
   256       |#ifndef _UID_T_DECLARED                                                                          |  6538     3
   257       |typedef __uid_t         uid_t;          /* user id */                                            |  6539     3
   258       |#define _UID_T_DECLARED                                                                          |  6540     3
   259       |#endif                                                                                           |  6541     3
   260       |                                                                                                 |  6542     3
   261       |#ifndef _USECONDS_T_DECLARED                                                                     |  6543     3
   262       |typedef __useconds_t    useconds_t;     /* microseconds (unsigned) */                            |  6544     3
   263       |#define _USECONDS_T_DECLARED                                                                     |  6545     3
   264       |#endif                                                                                           |  6546     3
   265       |                                                                                                 |  6547     3
   266       |typedef __vm_offset_t   vm_offset_t;                                                             |  6548     3
   267       |typedef __vm_ooffset_t  vm_ooffset_t;                                                            |  6549     3
   268       |typedef __vm_paddr_t    vm_paddr_t;                                                              |  6550     3
   269       |typedef __vm_pindex_t   vm_pindex_t;                                                             |  6551     3
   270       |typedef __vm_size_t     vm_size_t;                                                               |  6552     3
   271       |                                                                                                 |  6553     3
   272       |#ifdef _KERNEL                                                                                   |  6554     3
   273       |typedef int             boolean_t;                                                               |  6555     3
   274       |typedef __cpumask_t     cpumask_t;                                                               |  6556     3
   275       |typedef __intfptr_t     intfptr_t;                                                               |  6557     3
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   127


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   276       |                                                                                                 |  6558     3
   277       |/*-                                                                                              |  6559     3
   278       | * XXX this is fixed width for historical reasons.  It should have had type                      |  6560     3
   279       | * __int_fast32_t.  Fixed-width types should not be used unless binary                           |  6561     3
   280       | * compatibility is essential.  Least-width types should be used even less                       |  6562     3
   281       | * since they provide smaller benefits.                                                          |  6563     3
   282       | * XXX should be MD.                                                                             |  6564     3
   283       | * XXX this is bogus in -current, but still used for spl*().                                     |  6565     3
   284       | */                                                                                              |  6566     3
   285       |typedef __uint32_t      intrmask_t;     /* Interrupt mask (spl, xxx_imask...) */                 |  6567     3
   286       |                                                                                                 |  6568     3
   287       |typedef __uintfptr_t    uintfptr_t;                                                              |  6569     3
   288       |typedef __uint64_t      uoff_t;                                                                  |  6570     3
   289       |typedef struct vm_page  *vm_page_t;                                                              |  6571     3
   290       |                                                                                                 |  6572     3
   291       |#define offsetof(type, field) __offsetof(type, field)                                            |  6573     3
   292       |                                                                                                 |  6574     3
   293       |#endif /* !_KERNEL */                                                                            |  6575     3
   294       |                                                                                                 |  6576     3
   295       |/*                                                                                               |  6577     3
   296       | * The following are all things that really shouldn't exist in this header,                      |  6578     3
   297       | * since its purpose is to provide typedefs, not miscellaneous doodads.                          |  6579     3
   298       | */                                                                                              |  6580     3
   299       |#if __BSD_VISIBLE                                                                                |  6581     3
   300       |                                                                                                 |  6582     3
   301       |#include <sys/select.h>                                                                          |  6583     3
   302       |                                                                                                 |  6584     3
   303       |#ifndef _KERNEL                                                                                  |  6585     3
   304       |#define major(x)     ((int)(((u_int)(x) >> 16)&0xffff))    /* major number */                    |  6586     3
   305       |#define minor(x)     ((int)((x)&0x0000ffff))               /* minor number */                    |  6587     3
   306       |#endif /* !_KERNEL */                                                                            |  6588     3
   307       |                                                                                                 |  6589     3
   308       |#define makedev(x,y) ((dev_t)(((x) << 16) | ((y)&0xffff))) /* create dev_t */                    |  6590     3
   309       |                                                                                                 |  6591     3
   310       |/*                                                                                               |  6592     3
   311       | * These declarations belong elsewhere, but are repeated here and in                             |  6593     3
   312       | * <stdio.h> to give broken programs a better chance of working with                             |  6594     3
   313       | * 64-bit off_t's.                                                                               |  6595     3
   314       | */                                                                                              |  6596     3
   315       |#ifndef _KERNEL                                                                                  |  6597     3
   316       |__BEGIN_DECLS                                                                                    |  6598     3
   317       |#ifndef _FTRUNCATE_DECLARED                                                                      |  6599     3
   318       |#define _FTRUNCATE_DECLARED                                                                      |  6600     3
   319       |#pragma map (ftruncate, "@@FTRUNC")                                                              |  6601     3
   320       |int      ftruncate(int, off_t);                                                                  |  6602     3
   321       |#endif                                                                                           |  6603     3
   322       |#ifndef _LSEEK_DECLARED                                                                          |  6604     3
   323       |#define _LSEEK_DECLARED                                                                          |  6605     3
   324       |off_t    lseek(int, off_t, int);                                                                 |  6606     3
   325       |#endif                                                                                           |  6607     3
   326       |#ifndef _MMAP_DECLARED                                                                           |  6608     3
   327       |#define _MMAP_DECLARED                                                                           |  6609     3
   328       |void *   mmap(void *, size_t, int, int, int, off_t);                                             |  6610     3
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   128


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   329       |#endif                                                                                           |  6611     3
   330       |#ifndef _TRUNCATE_DECLARED                                                                       |  6612     3
   331       |#define _TRUNCATE_DECLARED                                                                       |  6613     3
   332       |int      truncate(const char *, off_t);                                                          |  6614     3
   333       |#endif                                                                                           |  6615     3
   334       |__END_DECLS                                                                                      |  6616     3
   335       |#endif /* !_KERNEL */                                                                            |  6617     3
   336       |                                                                                                 |  6618     3
   337       |#endif /* __BSD_VISIBLE */                                                                       |  6619     3
   338       |                                                                                                 |  6620     3
   339       |#endif /* !_SYS_TYPES_H_ */                                                                      |  6621     3
   340       |#pragma pack(reset)                                                                              |  6622     3
    40       |#include <sys/timespec.h>                                                                        |  6623    17
     1       |/* release 2.25.00 */                                                                            |  6624    12
     2       |#pragma pack()                                                                                   |  6625    12
     3       |/*-                                                                                              |  6626    12
     4       | * Copyright (c) 1982, 1986, 1993                                                                |  6627    12
     5       | *      The Regents of the University of California.  All rights reserved.                       |  6628    12
     6       | *                                                                                               |  6629    12
     7       | * Redistribution and use in source and binary forms, with or without                            |  6630    12
     8       | * modification, are permitted provided that the following conditions                            |  6631    12
     9       | * are met:                                                                                      |  6632    12
    10       | * 1. Redistributions of source code must retain the above copyright                             |  6633    12
    11       | *    notice, this list of conditions and the following disclaimer.                              |  6634    12
    12       | * 2. Redistributions in binary form must reproduce the above copyright                          |  6635    12
    13       | *    notice, this list of conditions and the following disclaimer in the                        |  6636    12
    14       | *    documentation and/or other materials provided with the distribution.                       |  6637    12
    15       | * 4. Neither the name of the University nor the names of its contributors                       |  6638    12
    16       | *    may be used to endorse or promote products derived from this software                      |  6639    12
    17       | *    without specific prior written permission.                                                 |  6640    12
    18       | *                                                                                               |  6641    12
    19       | * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND                       |  6642    12
    20       | * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE                         |  6643    12
    21       | * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE                    |  6644    12
    22       | * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE                      |  6645    12
    23       | * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL                    |  6646    12
    24       | * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS                       |  6647    12
    25       | * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)                         |  6648    12
    26       | * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT                    |  6649    12
    27       | * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY                     |  6650    12
    28       | * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF                        |  6651    12
    29       | * SUCH DAMAGE.                                                                                  |  6652    12
    30       | *                                                                                               |  6653    12
    31       | *      @(#)time.h      8.5 (Berkeley) 5/4/95                                                    |  6654    12
    32       | * from: FreeBSD: src/sys/sys/time.h,v 1.43 2000/03/20 14:09:05 phk Exp                          |  6655    12
    33       | *      $FreeBSD: src/sys/sys/timespec.h,v 1.4 2005/01/07 02:29:24 imp Exp $                     |  6656    12
    34       | */                                                                                              |  6657    12
    35       |                                                                                                 |  6658    12
    36       |/*                                                                                               |  6659    12
    37       | * Prerequisites: <sys/cdefs.h>, <sys/_types.h>                                                  |  6660    12
    38       | */                                                                                              |  6661    12
    39       |                                                                                                 |  6662    12
    40       |#ifndef _SYS_TIMESPEC_H_                                                                         |  6663    12
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   129


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    41       |#define _SYS_TIMESPEC_H_                                                                         |  6664    12
    42       |                                                                                                 |  6665    12
    43       |#include <sys/_types.h>                                                                          |  6666    12
    44       |                                                                                                 |  6667    12
    45       |#ifndef _TIME_T_DECLARED                                                                         |  6668    12
    46       |typedef __time_t        time_t;                                                                  |  6669    12
    47       |#define _TIME_T_DECLARED                                                                         |  6670    12
    48       |#endif                                                                                           |  6671    12
    49       |                                                                                                 |  6672    12
    50       |struct timespec {                                                                                |  6673    12
    51       |        time_t  tv_sec;         /* seconds */                                                    |  6674    12
    52       |        long    tv_nsec;        /* and nanoseconds */                                            |  6675    12
    53       |};                                                                                               |  6676    12
    54       |                                                                                                 |  6677    12
    55       |#if __BSD_VISIBLE                                                                                |  6678    12
    56       |#define TIMEVAL_TO_TIMESPEC(tv, ts)                                     \                        |  6679    12
    57       |        do {                                                            \                        |  6680    12
    58       |                (ts)->tv_sec = (tv)->tv_sec;                            \                        |  6681    12
    59       |                (ts)->tv_nsec = (tv)->tv_usec * 1000;                   \                        |  6682    12
    60       |        } while (0)                                                                              |  6683    12
    61       |#define TIMESPEC_TO_TIMEVAL(tv, ts)                                     \                        |  6684    12
    62       |        do {                                                            \                        |  6685    12
    63       |                (tv)->tv_sec = (ts)->tv_sec;                            \                        |  6686    12
    64       |                (tv)->tv_usec = (ts)->tv_nsec / 1000;                   \                        |  6687    12
    65       |        } while (0)                                                                              |  6688    12
    66       |                                                                                                 |  6689    12
    67       |#endif /* __BSD_VISIBLE */                                                                       |  6690    12
    68       |                                                                                                 |  6691    12
    69       |#endif /* _SYS_TIMESPEC_H_ */                                                                    |  6692    12
    70       |#pragma pack(reset)                                                                              |  6693    12
    41       |                                                                                                 |  6694    17
    42       |struct timezone {                                                                                |  6695    17
    43       |        int     tz_minuteswest; /* minutes west of Greenwich */                                  |  6696    17
    44       |        int     tz_dsttime;     /* type of dst correction */                                     |  6697    17
    45       |};                                                                                               |  6698    17
    46       |#define DST_NONE        0       /* not on dst */                                                 |  6699    17
    47       |#define DST_USA         1       /* USA style dst */                                              |  6700    17
    48       |#define DST_AUST        2       /* Australian style dst */                                       |  6701    17
    49       |#define DST_WET         3       /* Western European dst */                                       |  6702    17
    50       |#define DST_MET         4       /* Middle European dst */                                        |  6703    17
    51       |#define DST_EET         5       /* Eastern European dst */                                       |  6704    17
    52       |#define DST_CAN         6       /* Canada */                                                     |  6705    17
    53       |                                                                                                 |  6706    17
    54       |#if __BSD_VISIBLE                                                                                |  6707    17
    55       |struct bintime {                                                                                 |  6708    17
    55       +struct bintime {                                                                                 +  6708    17
    56       |        time_t  sec;                                                                             |  6709    17
    57       |        uint64_t frac;                                                                           |  6710    17
    58       |};                                                                                               |  6711    17
    59       |                                                                                                 |  6712    17
    60       |static __inline void                                                                             |  6713    17
    60       +static __inline__ void                                                                           +  6713    17
    61       |bintime_addx(struct bintime *bt, uint64_t x)                                                     |  6714    17
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   130


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    62       |{                                                                                                |  6715    17
    63       |        uint64_t u;                                                                              |  6716    17
    64       |                                                                                                 |  6717    17
    65       |        u = bt->frac;                                                                            |  6718    17
    66       |        bt->frac += x;                                                                           |  6719    17
    67       |        if (u > bt->frac)                                                                        |  6720    17
    68       |                bt->sec++;                                                                       |  6721    17
    69       |}                                                                                                |  6722    17
    70       |                                                                                                 |  6723    17
    71       |static __inline void                                                                             |  6724    17
    71       +static __inline__ void                                                                           +  6724    17
    72       |bintime_add(struct bintime *bt, const struct bintime *bt2)                                       |  6725    17
    73       |{                                                                                                |  6726    17
    74       |        uint64_t u;                                                                              |  6727    17
    75       |                                                                                                 |  6728    17
    76       |        u = bt->frac;                                                                            |  6729    17
    77       |        bt->frac += bt2->frac;                                                                   |  6730    17
    78       |        if (u > bt->frac)                                                                        |  6731    17
    79       |                bt->sec++;                                                                       |  6732    17
    80       |        bt->sec += bt2->sec;                                                                     |  6733    17
    81       |}                                                                                                |  6734    17
    82       |                                                                                                 |  6735    17
    83       |static __inline void                                                                             |  6736    17
    83       +static __inline__ void                                                                           +  6736    17
    84       |bintime_sub(struct bintime *bt, const struct bintime *bt2)                                       |  6737    17
    85       |{                                                                                                |  6738    17
    86       |        uint64_t u;                                                                              |  6739    17
    87       |                                                                                                 |  6740    17
    88       |        u = bt->frac;                                                                            |  6741    17
    89       |        bt->frac -= bt2->frac;                                                                   |  6742    17
    90       |        if (u < bt->frac)                                                                        |  6743    17
    91       |                bt->sec--;                                                                       |  6744    17
    92       |        bt->sec -= bt2->sec;                                                                     |  6745    17
    93       |}                                                                                                |  6746    17
    94       |                                                                                                 |  6747    17
    95       |/*-                                                                                              |  6748    17
    96       | * Background information:                                                                       |  6749    17
    97       | *                                                                                               |  6750    17
    98       | * When converting between timestamps on parallel timescales of differing                        |  6751    17
    99       | * resolutions it is historical and scientific practice to round down rather                     |  6752    17
   100       | * than doing 4/5 rounding.                                                                      |  6753    17
   101       | *                                                                                               |  6754    17
   102       | *   The date changes at midnight, not at noon.                                                  |  6755    17
   103       | *                                                                                               |  6756    17
   104       | *   Even at 15:59:59.999999999 it's not four'o'clock.                                           |  6757    17
   105       | *                                                                                               |  6758    17
   106       | *   time_second ticks after N.999999999 not after N.4999999999                                  |  6759    17
   107       | */                                                                                              |  6760    17
   108       |                                                                                                 |  6761    17
   109       |static __inline void                                                                             |  6762    17
   109       +static __inline__ void                                                                           +  6762    17
   110       |bintime2timespec(const struct bintime *bt, struct timespec *ts)                                  |  6763    17
   111       |{                                                                                                |  6764    17
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   131


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   112       |                                                                                                 |  6765    17
   113       |        ts->tv_sec = bt->sec;                                                                    |  6766    17
   114       |        ts->tv_nsec = ((uint64_t)1000000000 * (uint32_t)(bt->frac >> 32)) >> 32;                 |  6767    17
   115       |}                                                                                                |  6768    17
   116       |                                                                                                 |  6769    17
   117       |static __inline void                                                                             |  6770    17
   117       +static __inline__ void                                                                           +  6770    17
   118       |timespec2bintime(const struct timespec *ts, struct bintime *bt)                                  |  6771    17
   119       |{                                                                                                |  6772    17
   120       |                                                                                                 |  6773    17
   121       |        bt->sec = ts->tv_sec;                                                                    |  6774    17
   122       |        /* 18446744073 = int(2^64 / 1000000000) */                                               |  6775    17
   123       |        bt->frac = ts->tv_nsec * (uint64_t)18446744073LL;                                        |  6776    17
   124       |}                                                                                                |  6777    17
   125       |                                                                                                 |  6778    17
   126       |static __inline void                                                                             |  6779    17
   126       +static __inline__ void                                                                           +  6779    17
   127       |bintime2timeval(const struct bintime *bt, struct timeval *tv)                                    |  6780    17
   128       |{                                                                                                |  6781    17
   129       |                                                                                                 |  6782    17
   130       |        tv->tv_sec = bt->sec;                                                                    |  6783    17
   131       |        tv->tv_usec = ((uint64_t)1000000 * (uint32_t)(bt->frac >> 32)) >> 32;                    |  6784    17
   132       |}                                                                                                |  6785    17
   133       |                                                                                                 |  6786    17
   134       |static __inline void                                                                             |  6787    17
   134       +static __inline__ void                                                                           +  6787    17
   135       |timeval2bintime(const struct timeval *tv, struct bintime *bt)                                    |  6788    17
   136       |{                                                                                                |  6789    17
   137       |                                                                                                 |  6790    17
   138       |        bt->sec = tv->tv_sec;                                                                    |  6791    17
   139       |        /* 18446744073709 = int(2^64 / 1000000) */                                               |  6792    17
   140       |        bt->frac = tv->tv_usec * (uint64_t)18446744073709LL;                                     |  6793    17
   141       |}                                                                                                |  6794    17
   142       |#endif /* __BSD_VISIBLE */                                                                       |  6795    17
   143       |                                                                                                 |  6796    17
   144       |#ifdef _KERNEL                                                                                   |  6797    17
   145       |                                                                                                 |  6798    17
   146       |/* Operations on timespecs */                                                                    |  6799    17
   147       |#define timespecclear(tvp)      ((tvp)->tv_sec = (tvp)->tv_nsec = 0)                             |  6800    17
   148       |#define timespecisset(tvp)      ((tvp)->tv_sec || (tvp)->tv_nsec)                                |  6801    17
   149       |#define timespeccmp(tvp, uvp, cmp)                                      \                        |  6802    17
   150       |        (((tvp)->tv_sec == (uvp)->tv_sec) ?                             \                        |  6803    17
   151       |            ((tvp)->tv_nsec cmp (uvp)->tv_nsec) :                       \                        |  6804    17
   152       |            ((tvp)->tv_sec cmp (uvp)->tv_sec))                                                   |  6805    17
   153       |#define timespecadd(vvp, uvp)                                           \                        |  6806    17
   154       |        do {                                                            \                        |  6807    17
   155       |                (vvp)->tv_sec += (uvp)->tv_sec;                         \                        |  6808    17
   156       |                (vvp)->tv_nsec += (uvp)->tv_nsec;                       \                        |  6809    17
   157       |                if ((vvp)->tv_nsec >= 1000000000) {                     \                        |  6810    17
   158       |                        (vvp)->tv_sec++;                                \                        |  6811    17
   159       |                        (vvp)->tv_nsec -= 1000000000;                   \                        |  6812    17
   160       |                }                                                       \                        |  6813    17
   161       |        } while (0)                                                                              |  6814    17
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   132


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   162       |#define timespecsub(vvp, uvp)                                           \                        |  6815    17
   163       |        do {                                                            \                        |  6816    17
   164       |                (vvp)->tv_sec -= (uvp)->tv_sec;                         \                        |  6817    17
   165       |                (vvp)->tv_nsec -= (uvp)->tv_nsec;                       \                        |  6818    17
   166       |                if ((vvp)->tv_nsec < 0) {                               \                        |  6819    17
   167       |                        (vvp)->tv_sec--;                                \                        |  6820    17
   168       |                        (vvp)->tv_nsec += 1000000000;                   \                        |  6821    17
   169       |                }                                                       \                        |  6822    17
   170       |        } while (0)                                                                              |  6823    17
   171       |                                                                                                 |  6824    17
   172       |/* Operations on timevals. */                                                                    |  6825    17
   173       |                                                                                                 |  6826    17
   174       |#define timevalclear(tvp)               ((tvp)->tv_sec = (tvp)->tv_usec = 0)                     |  6827    17
   175       |#define timevalisset(tvp)               ((tvp)->tv_sec || (tvp)->tv_usec)                        |  6828    17
   176       |#define timevalcmp(tvp, uvp, cmp)                                       \                        |  6829    17
   177       |        (((tvp)->tv_sec == (uvp)->tv_sec) ?                             \                        |  6830    17
   178       |            ((tvp)->tv_usec cmp (uvp)->tv_usec) :                       \                        |  6831    17
   179       |            ((tvp)->tv_sec cmp (uvp)->tv_sec))                                                   |  6832    17
   180       |                                                                                                 |  6833    17
   181       |/* timevaladd and timevalsub are not inlined */                                                  |  6834    17
   182       |                                                                                                 |  6835    17
   183       |#endif /* _KERNEL */                                                                             |  6836    17
   184       |                                                                                                 |  6837    17
   185       |#ifndef _KERNEL                 /* NetBSD/OpenBSD compatible interfaces */                       |  6838    17
   186       |                                                                                                 |  6839    17
   187       |#define timerclear(tvp)         ((tvp)->tv_sec = (tvp)->tv_usec = 0)                             |  6840    17
   188       |#define timerisset(tvp)         ((tvp)->tv_sec || (tvp)->tv_usec)                                |  6841    17
   189       |#define timercmp(tvp, uvp, cmp)                                 \                                |  6842    17
   190       |        (((tvp)->tv_sec == (uvp)->tv_sec) ?                             \                        |  6843    17
   191       |            ((tvp)->tv_usec cmp (uvp)->tv_usec) :                       \                        |  6844    17
   192       |            ((tvp)->tv_sec cmp (uvp)->tv_sec))                                                   |  6845    17
   193       |#define timeradd(tvp, uvp, vvp)                                         \                        |  6846    17
   194       |        do {                                                            \                        |  6847    17
   195       |                (vvp)->tv_sec = (tvp)->tv_sec + (uvp)->tv_sec;          \                        |  6848    17
   196       |                (vvp)->tv_usec = (tvp)->tv_usec + (uvp)->tv_usec;       \                        |  6849    17
   197       |                if ((vvp)->tv_usec >= 1000000) {                        \                        |  6850    17
   198       |                        (vvp)->tv_sec++;                                \                        |  6851    17
   199       |                        (vvp)->tv_usec -= 1000000;                      \                        |  6852    17
   200       |                }                                                       \                        |  6853    17
   201       |        } while (0)                                                                              |  6854    17
   202       |#define timersub(tvp, uvp, vvp)                                         \                        |  6855    17
   203       |        do {                                                            \                        |  6856    17
   204       |                (vvp)->tv_sec = (tvp)->tv_sec - (uvp)->tv_sec;          \                        |  6857    17
   205       |                (vvp)->tv_usec = (tvp)->tv_usec - (uvp)->tv_usec;       \                        |  6858    17
   206       |                if ((vvp)->tv_usec < 0) {                               \                        |  6859    17
   207       |                        (vvp)->tv_sec--;                                \                        |  6860    17
   208       |                        (vvp)->tv_usec += 1000000;                      \                        |  6861    17
   209       |                }                                                       \                        |  6862    17
   210       |        } while (0)                                                                              |  6863    17
   211       |#endif                                                                                           |  6864    17
   212       |                                                                                                 |  6865    17
   213       |/*                                                                                               |  6866    17
   214       | * Names of the interval timers, and structure                                                   |  6867    17
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   133


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   215       | * defining a timer setting.                                                                     |  6868    17
   216       | */                                                                                              |  6869    17
   217       |#define ITIMER_REAL     0                                                                        |  6870    17
   218       |#define ITIMER_VIRTUAL  1                                                                        |  6871    17
   219       |#define ITIMER_PROF     2                                                                        |  6872    17
   220       |                                                                                                 |  6873    17
   221       |struct itimerval {                                                                               |  6874    17
   222       |        struct  timeval it_interval;    /* timer interval */                                     |  6875    17
   223       |        struct  timeval it_value;       /* current value */                                      |  6876    17
   224       |};                                                                                               |  6877    17
   225       |                                                                                                 |  6878    17
   226       |/*                                                                                               |  6879    17
   227       | * Getkerninfo clock information structure                                                       |  6880    17
   228       | */                                                                                              |  6881    17
   229       |struct clockinfo {                                                                               |  6882    17
   230       |        int     hz;             /* clock frequency */                                            |  6883    17
   231       |        int     tick;           /* micro-seconds per hz tick */                                  |  6884    17
   232       |        int     spare;                                                                           |  6885    17
   233       |        int     stathz;         /* statistics clock frequency */                                 |  6886    17
   234       |        int     profhz;         /* profiling clock frequency */                                  |  6887    17
   235       |};                                                                                               |  6888    17
   236       |                                                                                                 |  6889    17
   237       |/* These macros are also in time.h. */                                                           |  6890    17
   238       |#ifndef CLOCK_REALTIME                                                                           |  6891    17
   239       |#define CLOCK_REALTIME  0                                                                        |  6892    17
   240       |#if 0                                                                                            |  6893    17
   241       |  /* only CLOCK_REALTIME exists in this implementation */                                        |  6894    17
   242       |#define CLOCK_VIRTUAL   1                                                                        |  6895    17
   243       |#define CLOCK_PROF      2                                                                        |  6896    17
   244       |#define CLOCK_MONOTONIC 4                                                                        |  6897    17
   245       |#endif                                                                                           |  6898    17
   246       |#endif                                                                                           |  6899    17
   247       |                                                                                                 |  6900    17
   248       |#ifndef TIMER_ABSTIME                                                                            |  6901    17
   249       |#define TIMER_RELTIME   0x0     /* relative timer */                                             |  6902    17
   250       |#define TIMER_ABSTIME   0x1     /* absolute timer */                                             |  6903    17
   251       |#endif                                                                                           |  6904    17
   252       |                                                                                                 |  6905    17
   253       |#ifdef _KERNEL                                                                                   |  6906    17
   254       |extern time_t   time_second;                                                                     |  6907    17
   255       |extern time_t   time_uptime;                                                                     |  6908    17
   256       |extern struct timeval boottime;                                                                  |  6909    17
   257       |                                                                                                 |  6910    17
   258       |/*                                                                                               |  6911    17
   259       | * Functions for looking at our clock: [get]{bin,nano,micro}[up]time()                           |  6912    17
   260       | *                                                                                               |  6913    17
   261       | * Functions without the "get" prefix returns the best timestamp                                 |  6914    17
   262       | * we can produce in the given format.                                                           |  6915    17
   263       | *                                                                                               |  6916    17
   264       | * "bin"   == struct bintime  == seconds + 64 bit fraction of seconds.                           |  6917    17
   265       | * "nano"  == struct timespec == seconds + nanoseconds.                                          |  6918    17
   266       | * "micro" == struct timeval  == seconds + microseconds.                                         |  6919    17
   267       | *                                                                                               |  6920    17
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   134


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   268       | * Functions containing "up" returns time relative to boot and                                   |  6921    17
   269       | * should be used for calculating time intervals.                                                |  6922    17
   270       | *                                                                                               |  6923    17
   271       | * Functions without "up" returns GMT time.                                                      |  6924    17
   272       | *                                                                                               |  6925    17
   273       | * Functions with the "get" prefix returns a less precise result                                 |  6926    17
   274       | * much faster than the functions without "get" prefix and should                                |  6927    17
   275       | * be used where a precision of 10 msec is acceptable or where                                   |  6928    17
   276       | * performance is priority. (NB: "precision", _not_ "resolution" !)                              |  6929    17
   277       | *                                                                                               |  6930    17
   278       | */                                                                                              |  6931    17
   279       |                                                                                                 |  6932    17
   280       |void    binuptime(struct bintime *bt);                                                           |  6933    17
   281       |void    nanouptime(struct timespec *tsp);                                                        |  6934    17
   282       |void    microuptime(struct timeval *tvp);                                                        |  6935    17
   283       |                                                                                                 |  6936    17
   284       |void    bintime(struct bintime *bt);                                                             |  6937    17
   285       |void    nanotime(struct timespec *tsp);                                                          |  6938    17
   286       |void    microtime(struct timeval *tvp);                                                          |  6939    17
   287       |                                                                                                 |  6940    17
   288       |void    getbinuptime(struct bintime *bt);                                                        |  6941    17
   289       |void    getnanouptime(struct timespec *tsp);                                                     |  6942    17
   290       |void    getmicrouptime(struct timeval *tvp);                                                     |  6943    17
   291       |                                                                                                 |  6944    17
   292       |void    getbintime(struct bintime *bt);                                                          |  6945    17
   293       |void    getnanotime(struct timespec *tsp);                                                       |  6946    17
   294       |void    getmicrotime(struct timeval *tvp);                                                       |  6947    17
   295       |                                                                                                 |  6948    17
   296       |/* Other functions */                                                                            |  6949    17
   297       |int     itimerdecr(struct itimerval *itp, int usec);                                             |  6950    17
   298       |int     itimerfix(struct timeval *tv);                                                           |  6951    17
   299       |int     ppsratecheck(struct timeval *, int *, int);                                              |  6952    17
   300       |int     ratecheck(struct timeval *, const struct timeval *);                                     |  6953    17
   301       |void    timevaladd(struct timeval *t1, const struct timeval *t2);                                |  6954    17
   302       |void    timevalsub(struct timeval *t1, const struct timeval *t2);                                |  6955    17
   303       |int     tvtohz(struct timeval *tv);                                                              |  6956    17
   304       |#else /* !_KERNEL */                                                                             |  6957    17
   305       |#include <time.h>                                                                                |  6958    17
     1       |/* release 2.25.00 */                                                                            |  6959    16
     2       |#pragma pack()                                                                                   |  6960    16
     3       |/*                                                                                               |  6961    16
     4       | * Copyright (c) 1989, 1993                                                                      |  6962    16
     5       | *      The Regents of the University of California.  All rights reserved.                       |  6963    16
     6       | * (c) UNIX System Laboratories, Inc.                                                            |  6964    16
     7       | * All or some portions of this file are derived from material licensed                          |  6965    16
     8       | * to the University of California by American Telephone and Telegraph                           |  6966    16
     9       | * Co. or Unix System Laboratories, Inc. and are reproduced herein with                          |  6967    16
    10       | * the permission of UNIX System Laboratories, Inc.                                              |  6968    16
    11       | *                                                                                               |  6969    16
    12       | * Redistribution and use in source and binary forms, with or without                            |  6970    16
    13       | * modification, are permitted provided that the following conditions                            |  6971    16
    14       | * are met:                                                                                      |  6972    16
    15       | * 1. Redistributions of source code must retain the above copyright                             |  6973    16
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   135


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    16       | *    notice, this list of conditions and the following disclaimer.                              |  6974    16
    17       | * 2. Redistributions in binary form must reproduce the above copyright                          |  6975    16
    18       | *    notice, this list of conditions and the following disclaimer in the                        |  6976    16
    19       | *    documentation and/or other materials provided with the distribution.                       |  6977    16
    20       | * 3. All advertising materials mentioning features or use of this software                      |  6978    16
    21       | *    must display the following acknowledgement:                                                |  6979    16
    22       | *      This product includes software developed by the University of                            |  6980    16
    23       | *      California, Berkeley and its contributors.                                               |  6981    16
    24       | * 4. Neither the name of the University nor the names of its contributors                       |  6982    16
    25       | *    may be used to endorse or promote products derived from this software                      |  6983    16
    26       | *    without specific prior written permission.                                                 |  6984    16
    27       | *                                                                                               |  6985    16
    28       | * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND                       |  6986    16
    29       | * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE                         |  6987    16
    30       | * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE                    |  6988    16
    31       | * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE                      |  6989    16
    32       | * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL                    |  6990    16
    33       | * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS                       |  6991    16
    34       | * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)                         |  6992    16
    35       | * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT                    |  6993    16
    36       | * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY                     |  6994    16
    37       | * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF                        |  6995    16
    38       | * SUCH DAMAGE.                                                                                  |  6996    16
    39       | *                                                                                               |  6997    16
    40       | *      @(#)time.h      8.3 (Berkeley) 1/21/94                                                   |  6998    16
    41       | */                                                                                              |  6999    16
    42       |                                                                                                 |  7000    16
    43       |/*                                                                                               |  7001    16
    44       | */                                                                                              |  7002    16
    45       |                                                                                                 |  7003    16
    46       |#ifndef _TIME_H_                                                                                 |  7004    16
    47       |#define _TIME_H_                                                                                 |  7005    16
    48       |                                                                                                 |  7006    16
    49       |#include <sys/cdefs.h>                                                                           |  7007    16
    50       |#include <sys/_null.h>                                                                           |  7008    16
    51       |#include <sys/_types.h>                                                                          |  7009    16
    52       |                                                                                                 |  7010    16
    53       |#if __POSIX_VISIBLE > 0 && __POSIX_VISIBLE < 200112 || __BSD_VISIBLE                             |  7011    16
    54       |/*                                                                                               |  7012    16
    55       | * Frequency of the clock ticks reported by times().  Deprecated - use                           |  7013    16
    56       | * sysconf(_SC_CLK_TCK) instead.  (Removed in 1003.1-2001.)                                      |  7014    16
    57       | *                                                                                               |  7015    16
    58       | */                                                                                              |  7016    16
    59       |#define CLK_TCK         10000                                                                    |  7017    16
    60       |#endif                                                                                           |  7018    16
    61       |                                                                                                 |  7019    16
    62       |/* Frequency of the clock ticks reported by clock().  */                                         |  7020    16
    63       |#define CLOCKS_PER_SEC  128                                                                      |  7021    16
    64       |                                                                                                 |  7022    16
    65       |#ifndef _CLOCK_T_DECLARED                                                                        |  7023    16
    66       |typedef __clock_t       clock_t;                                                                 |  7024    16
    67       |#define _CLOCK_T_DECLARED                                                                        |  7025    16
    68       |#endif                                                                                           |  7026    16
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   136


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    69       |                                                                                                 |  7027    16
    70       |#ifndef _TIME_T_DECLARED                                                                         |  7028    16
    71       |typedef __time_t        time_t;                                                                  |  7029    16
    72       |#define _TIME_T_DECLARED                                                                         |  7030    16
    73       |#endif                                                                                           |  7031    16
    74       |                                                                                                 |  7032    16
    75       |#ifndef _SIZE_T_DECLARED                                                                         |  7033    16
    76       |typedef __size_t        size_t;                                                                  |  7034    16
    77       |#define _SIZE_T_DECLARED                                                                         |  7035    16
    78       |#endif                                                                                           |  7036    16
    79       |                                                                                                 |  7037    16
    80       |#if __POSIX_VISIBLE >= 199309                                                                    |  7038    16
    81       |/*                                                                                               |  7039    16
    82       | * New in POSIX 1003.1b-1993.                                                                    |  7040    16
    83       | */                                                                                              |  7041    16
    84       |#ifndef _CLOCKID_T_DECLARED                                                                      |  7042    16
    85       |typedef __clockid_t     clockid_t;                                                               |  7043    16
    86       |#define _CLOCKID_T_DECLARED                                                                      |  7044    16
    87       |#endif                                                                                           |  7045    16
    88       |                                                                                                 |  7046    16
    89       |#ifndef _TIMER_T_DECLARED                                                                        |  7047    16
    90       |typedef __timer_t       timer_t;                                                                 |  7048    16
    91       |#define _TIMER_T_DECLARED                                                                        |  7049    16
    92       |#endif                                                                                           |  7050    16
    93       |                                                                                                 |  7051    16
    94       |#include <sys/timespec.h>                                                                        |  7052    16
    95       |#endif /* __POSIX_VISIBLE >= 199309 */                                                           |  7053    16
    96       |                                                                                                 |  7054    16
    97       |/* These macros are also in sys/time.h. */                                                       |  7055    16
    98       |#if !defined(CLOCK_REALTIME) && __POSIX_VISIBLE >= 200112                                        |  7056    16
    99       |#define CLOCK_REALTIME  0                                                                        |  7057    16
   100       |#if 0                                                                                            |  7058    16
   101       |  /* only CLOCK_REALTIME exists in this implementation */                                        |  7059    16
   102       |#ifdef __BSD_VISIBLE                                                                             |  7060    16
   103       |#define CLOCK_VIRTUAL   1                                                                        |  7061    16
   104       |#define CLOCK_PROF      2                                                                        |  7062    16
   105       |#endif                                                                                           |  7063    16
   106       |#define CLOCK_MONOTONIC 4                                                                        |  7064    16
   107       |#endif /* 0 */                                                                                   |  7065    16
   108       |#endif /* !defined(CLOCK_REALTIME) && __POSIX_VISIBLE >= 200112 */                               |  7066    16
   109       |                                                                                                 |  7067    16
   110       |#if !defined(TIMER_ABSTIME) && __POSIX_VISIBLE >= 200112                                         |  7068    16
   111       |#if __BSD_VISIBLE                                                                                |  7069    16
   112       |#define TIMER_RELTIME   0x0     /* relative timer */                                             |  7070    16
   113       |#endif                                                                                           |  7071    16
   114       |#define TIMER_ABSTIME   0x1     /* absolute timer */                                             |  7072    16
   115       |#endif /* !defined(TIMER_ABSTIME) && __POSIX_VISIBLE >= 200112 */                                |  7073    16
   116       |                                                                                                 |  7074    16
   117       |struct tm {                                                                                      |  7075    16
   118       |        int     tm_sec;         /* seconds after the minute [0-60] */                            |  7076    16
   119       |        int     tm_min;         /* minutes after the hour [0-59] */                              |  7077    16
   120       |        int     tm_hour;        /* hours since midnight [0-23] */                                |  7078    16
   121       |        int     tm_mday;        /* day of the month [1-31] */                                    |  7079    16
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   137


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   122       |        int     tm_mon;         /* months since January [0-11] */                                |  7080    16
   123       |        int     tm_year;        /* years since 1900 */                                           |  7081    16
   124       |        int     tm_wday;        /* days since Sunday [0-6] */                                    |  7082    16
   125       |        int     tm_yday;        /* days since January 1 [0-365] */                               |  7083    16
   126       |        int     tm_isdst;       /* Daylight Savings Time flag */                                 |  7084    16
   127       |        long    tm_gmtoff;      /* offset from UTC in seconds */                                 |  7085    16
   128       |        char    *tm_zone;       /* timezone abbreviation */                                      |  7086    16
   129       |};                                                                                               |  7087    16
   130       |                                                                                                 |  7088    16
   131       |#if __POSIX_VISIBLE                                                                              |  7089    16
   132       |extern char *tzname[];                                                                           |  7090    16
   133       |#endif                                                                                           |  7091    16
   134       |                                                                                                 |  7092    16
   135       |__BEGIN_DECLS                                                                                    |  7093    16
   136       |char *asctime(const struct tm *);                                                                |  7094    16
   137       |clock_t clock(void);                                                                             |  7095    16
   138       |char *ctime(const time_t *);                                                                     |  7096    16
   139       |double difftime(time_t, time_t);                                                                 |  7097    16
   140       |/* XXX missing: getdate() */                                                                     |  7098    16
   141       |struct tm *gmtime(const time_t *);                                                               |  7099    16
   142       |#pragma map (localtime, "LC@LTIME")                                                              |  7100    16
   143       |struct tm *localtime(const time_t *);                                                            |  7101    16
   144       |time_t mktime(struct tm *);                                                                      |  7102    16
   145       |size_t strftime(char * __restrict, size_t, const char * __restrict,                              |  7103    16
   146       |    const struct tm * __restrict);                                                               |  7104    16
   147       |time_t time(time_t *);                                                                           |  7105    16
   148       |                                                                                                 |  7106    16
   149       |#if __POSIX_VISIBLE                                                                              |  7107    16
   150       |void tzset(void);                                                                                |  7108    16
   151       |#endif                                                                                           |  7109    16
   152       |                                                                                                 |  7110    16
   153       |#if __POSIX_VISIBLE >= 199309                                                                    |  7111    16
   154       |#pragma map(clock_getres, "@@CLKRES")                                                            |  7112    16
   155       |int clock_getres(clockid_t, struct timespec *);                                                  |  7113    16
   156       |#pragma map(clock_gettime, "@@CLKGET")                                                           |  7114    16
   157       |int clock_gettime(clockid_t, struct timespec *);                                                 |  7115    16
   158       |#pragma map(clock_settime, "@@CLKSET")                                                           |  7116    16
   159       |int clock_settime(clockid_t, const struct timespec *);                                           |  7117    16
   160       |#pragma map(nanosleep,"@@NNOSLP")                                                                |  7118    16
   161       |int nanosleep(const struct timespec *, struct timespec *);                                       |  7119    16
   162       |#endif /* __POSIX_VISIBLE >= 199309 */                                                           |  7120    16
   163       |                                                                                                 |  7121    16
   164       |#if __POSIX_VISIBLE >= 199506                                                                    |  7122    16
   165       |#pragma map(asctime_r, "@@ASCT@R")                                                               |  7123    16
   166       |char *asctime_r(const struct tm *, char *);                                                      |  7124    16
   167       |#pragma map(ctime_r, "@@CTME@R")                                                                 |  7125    16
   168       |char *ctime_r(const time_t *, char *);                                                           |  7126    16
   169       |#pragma map(gmtime_r, "@@GMTM@R")                                                                |  7127    16
   170       |struct tm *gmtime_r(const time_t *, struct tm *);                                                |  7128    16
   171       |#pragma map(localtime_r, "@@LCLT@R")                                                             |  7129    16
   172       |struct tm *localtime_r(const time_t *, struct tm *);                                             |  7130    16
   173       |#endif                                                                                           |  7131    16
   174       |                                                                                                 |  7132    16
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   138


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   175       |#if __XSI_VISIBLE                                                                                |  7133    16
   176       |char *strptime(const char * __restrict, const char * __restrict,                                 |  7134    16
   177       |    struct tm * __restrict);                                                                     |  7135    16
   178       |#endif                                                                                           |  7136    16
   179       |                                                                                                 |  7137    16
   180       |#if __BSD_VISIBLE                                                                                |  7138    16
   181       |char *timezone(int, int);       /* XXX XSI conflict */                                           |  7139    16
   182       |void tzsetwall(void);                                                                            |  7140    16
   183       |#pragma map (timelocal, "TIMELC@L")                                                              |  7141    16
   184       |time_t timelocal(struct tm * const);                                                             |  7142    16
   185       |time_t timegm(struct tm * const);                                                                |  7143    16
   186       |#endif /* __BSD_VISIBLE */                                                                       |  7144    16
   187       |__END_DECLS                                                                                      |  7145    16
   188       |                                                                                                 |  7146    16
   189       |#endif /* !_TIME_H_ */                                                                           |  7147    16
   190       |#pragma pack(reset)                                                                              |  7148    16
   306       |                                                                                                 |  7149    17
   307       |#include <sys/cdefs.h>                                                                           |  7150    17
     1       |/* release 2.25.00 */                                                                            |  7151     4
     2       |#pragma pack()                                                                                   |  7152     4
     3       |/*                                                                                               |  7153     4
     4       | * Copyright (c) 1991, 1993                                                                      |  7154     4
     5       | *      The Regents of the University of California.  All rights reserved.                       |  7155     4
     6       | *                                                                                               |  7156     4
     7       | * This code is derived from software contributed to Berkeley by                                 |  7157     4
     8       | * Berkeley Software Design, Inc.                                                                |  7158     4
     9       | *                                                                                               |  7159     4
    10       | * Redistribution and use in source and binary forms, with or without                            |  7160     4
    11       | * modification, are permitted provided that the following conditions                            |  7161     4
    12       | * are met:                                                                                      |  7162     4
    13       | * 1. Redistributions of source code must retain the above copyright                             |  7163     4
    14       | *    notice, this list of conditions and the following disclaimer.                              |  7164     4
    15       | * 2. Redistributions in binary form must reproduce the above copyright                          |  7165     4
    16       | *    notice, this list of conditions and the following disclaimer in the                        |  7166     4
    17       | *    documentation and/or other materials provided with the distribution.                       |  7167     4
    18       | * 3. All advertising materials mentioning features or use of this software                      |  7168     4
    19       | *    must display the following acknowledgement:                                                |  7169     4
    20       | *      This product includes software developed by the University of                            |  7170     4
    21       | *      California, Berkeley and its contributors.                                               |  7171     4
    22       | * 4. Neither the name of the University nor the names of its contributors                       |  7172     4
    23       | *    may be used to endorse or promote products derived from this software                      |  7173     4
    24       | *    without specific prior written permission.                                                 |  7174     4
    25       | *                                                                                               |  7175     4
    26       | * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND                       |  7176     4
    27       | * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE                         |  7177     4
    28       | * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE                    |  7178     4
    29       | * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE                      |  7179     4
    30       | * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL                    |  7180     4
    31       | * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS                       |  7181     4
    32       | * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)                         |  7182     4
    33       | * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT                    |  7183     4
    34       | * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY                     |  7184     4
    35       | * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF                        |  7185     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   139


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    36       | * SUCH DAMAGE.                                                                                  |  7186     4
    37       | *                                                                                               |  7187     4
    38       | *      @(#)cdefs.h     8.8 (Berkeley) 1/9/95                                                    |  7188     4
    39       | */                                                                                              |  7189     4
    40       |                                                                                                 |  7190     4
    41       |#ifndef _SYS_CDEFS_H_                                                                            |  7191     4
    42       |#define _SYS_CDEFS_H_                                                                            |  7192     4
    43       |                                                                                                 |  7193     4
    44       |#if defined(__cplusplus)                                                                         |  7194     4
    45       |#define __BEGIN_DECLS   extern "C" {                                                             |  7195     4
    46       |#define __END_DECLS     }                                                                        |  7196     4
    47       |#else                                                                                            |  7197     4
    48       |#define __BEGIN_DECLS                                                                            |  7198     4
    49       |#define __END_DECLS                                                                              |  7199     4
    50       |#endif                                                                                           |  7200     4
    51       |                                                                                                 |  7201     4
    52       |/*                                                                                               |  7202     4
    53       | * This code has been put in place to help reduce the addition of                                |  7203     4
    54       | * compiler specific defines in the code.  It helps to aid in                                    |  7204     4
    55       | * having a compiler-agnostic source tree.                                                       |  7205     4
    56       | */                                                                                              |  7206     4
    57       |#define __CC_SUPPORTS_INLINE 1                                                                   |  7207     4
    58       |#define __CC_SUPPORTS___INLINE 1                                                                 |  7208     4
    59       |#define __CC_SUPPORTS___INLINE__ 1                                                               |  7209     4
    60       |                                                                                                 |  7210     4
    61       |#define __CC_SUPPORTS___FUNC__ 1                                                                 |  7211     4
    62       |                                                                                                 |  7212     4
    63       |                                                                                                 |  7213     4
    64       |/*                                                                                               |  7214     4
    65       | * The __CONCAT macro is used to concatenate parts of symbol names, e.g.                         |  7215     4
    66       | * with "#define OLD(foo) __CONCAT(old,foo)", OLD(foo) produces oldfoo.                          |  7216     4
    67       | * The __CONCAT macro is a bit tricky to use if it must work in non-ANSI                         |  7217     4
    68       | * mode -- there must be no spaces between its arguments, and for nested                         |  7218     4
    69       | * __CONCAT's, all the __CONCAT's must be at the left.  __CONCAT can also                        |  7219     4
    70       | * concatenate double-quoted strings produced by the __STRING macro, but                         |  7220     4
    71       | * this only works with ANSI C.                                                                  |  7221     4
    72       | *                                                                                               |  7222     4
    73       | * __XSTRING is like __STRING, but it expands any macros in its argument                         |  7223     4
    74       | * first.  It is only available with ANSI C.                                                     |  7224     4
    75       | */                                                                                              |  7225     4
    76       |#if defined(__STDC__) || defined(__cplusplus)                                                    |  7226     4
    77       |#define __P(protos)     protos          /* full-blown ANSI C */                                  |  7227     4
    78       |#define __CONCAT1(x,y)  x ## y                                                                   |  7228     4
    79       |#define __CONCAT(x,y)   __CONCAT1(x,y)                                                           |  7229     4
    80       |#define __STRING(x)     #x              /* stringify without expanding x */                      |  7230     4
    81       |#define __XSTRING(x)    __STRING(x)     /* expand x, then stringify */                           |  7231     4
    82       |                                                                                                 |  7232     4
    83       |#define __const         const           /* define reserved names to standard */                  |  7233     4
    84       |#define __signed        signed                                                                   |  7234     4
    85       |#define __volatile      volatile                                                                 |  7235     4
    86       |#if defined(__cplusplus)                                                                         |  7236     4
    87       |#define __inline        inline          /* convert to C++ keyword */                             |  7237     4
    88       |#else                                                                                            |  7238     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   140


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    89       |#define __inline        __inline__      /* Use the Systems/C keyword */                          |  7239     4
    90       |#endif /* !__cplusplus */                                                                        |  7240     4
    91       |                                                                                                 |  7241     4
    92       |#else   /* !(__STDC__ || __cplusplus) */                                                         |  7242     4
    93       |#define __P(protos)     ()              /* traditional C preprocessor */                         |  7243     4
    94       |#define __CONCAT(x,y)   x/**/y                                                                   |  7244     4
    95       |#define __STRING(x)     "x"                                                                      |  7245     4
    96       |                                                                                                 |  7246     4
    97       |#define __const                         /* delete pseudo-ANSI C keywords */                      |  7247     4
    98       |#define __inline                                                                                 |  7248     4
    99       |#define __signed                                                                                 |  7249     4
   100       |#define __volatile                                                                               |  7250     4
   101       |/*                                                                                               |  7251     4
   102       | * In non-ANSI C environments, new programs will want ANSI-only C keywords                       |  7252     4
   103       | * deleted from the program and old programs will want them left alone.                          |  7253     4
   104       | * When using a compiler other than Dignus, programs using the ANSI C keywords                   |  7254     4
   105       | * const, inline etc. as normal identifiers should define -DNO_ANSI_KEYWORDS.                    |  7255     4
   106       | */                                                                                              |  7256     4
   107       |#ifndef NO_ANSI_KEYWORDS                                                                         |  7257     4
   108       |#define const                           /* delete ANSI C keywords */                             |  7258     4
   109       |#define inline                                                                                   |  7259     4
   110       |#define signed                                                                                   |  7260     4
   111       |#define volatile                                                                                 |  7261     4
   112       |#endif  /* !NO_ANSI_KEYWORDS */                                                                  |  7262     4
   113       |#endif  /* !(__STDC__ || __cplusplus) */                                                         |  7263     4
   114       |                                                                                                 |  7264     4
   115       |/*                                                                                               |  7265     4
   116       | * Compiler-dependent macros to help declare dead (non-returning) and                            |  7266     4
   117       | * pure (no side effects) functions, and unused variables.                                       |  7267     4
   118       | */                                                                                              |  7268     4
   119       |#define __dead2 __attribute__((__noreturn__))                                                    |  7269     4
   120       |#define __pure  __attribute__((__pure__))                                                        |  7270     4
   121       |#define __pure2 __attribute__((__const__))                                                       |  7271     4
   122       |#define __unused                                                                                 |  7272     4
   123       |#define __aligned(x)                                                                             |  7273     4
   124       |#define __section(x)                                                                             |  7274     4
   125       |#define __nonnull(x)                                                                             |  7275     4
   126       |#define __used                                                                                   |  7276     4
   127       |                                                                                                 |  7277     4
   128       |#define __always_inline __attribute__((__always_inline__))                                       |  7278     4
   129       |#define __noinline      __attribute__((__noinline__))                                            |  7279     4
   130       |                                                                                                 |  7280     4
   131       |#if __STDC_VERSION__ < 199901                                                                    |  7281     4
   132       |#define __func__  NULL                                                                           |  7282     4
   133       |#endif                                                                                           |  7283     4
   134       |                                                                                                 |  7284     4
   135       |#if !defined(__STRICT_ANSI__) || __STDC_VERSION__ >= 199901                                      |  7285     4
   136       |#define __LONG_LONG_SUPPORTED                                                                    |  7286     4
   137       |#endif                                                                                           |  7287     4
   138       |                                                                                                 |  7288     4
   139       |/* Systems/C recognizes they keyword __restrict__ in both                                        |  7289     4
   140       | * ANSI and non-ANSI mode to indicate C99 restrict semantics.                                    |  7290     4
   141       | **/                                                                                             |  7291     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   141


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   142       |#ifndef __cplusplus                                                                              |  7292     4
   143       |#define __restrict __restrict__                                                                  |  7293     4
   144       |#else                                                                                            |  7294     4
   145       |/* Systems/C++ does not */                                                                       |  7295     4
   146       |#define __restrict                                                                               |  7296     4
   147       |#endif                                                                                           |  7297     4
   148       |                                                                                                 |  7298     4
   149       |/*                                                                                               |  7299     4
   150       | * define-away GCC-specific branch-prediction markers                                            |  7300     4
   151       | */                                                                                              |  7301     4
   152       |#define __predict_true(exp)     (exp)                                                            |  7302     4
   153       |#define __predict_false(exp)    (exp)                                                            |  7303     4
   154       |                                                                                                 |  7304     4
   155       |                                                                                                 |  7305     4
   156       |/*                                                                                               |  7306     4
   157       | * provide a definition of __offsetof(), <stddef.h> and                                          |  7307     4
   158       | * <sys/types.h> reference __offsetof().                                                         |  7308     4
   159       | *                                                                                               |  7309     4
   160       | * For Systems/C, the C compiler recognizes __offsetof(),                                        |  7310     4
   161       | * but we need a definition for versions of C++ prior to 1.85.52.                                |  7311     4
   162       | */                                                                                              |  7312     4
   163       |#if defined(__cplusplus) && (__SYSC_VER__ < (18600))                                             |  7313     4
   164       |#undef __offsetof                                                                                |  7314     4
   165       |#define __offsetof(type, field)  ((size_t)(&((type *)0)->field))                                 |  7315     4
   166       |#endif                                                                                           |  7316     4
   167       |                                                                                                 |  7317     4
   168       |/*                                                                                               |  7318     4
   169       | * Compiler-dependent macros to declare that functions take printf-like                          |  7319     4
   170       | * or scanf-like arguments.                                                                      |  7320     4
   171       | */                                                                                              |  7321     4
   172       |#define __printflike(fmtarg, firstvararg)                                                        |  7322     4
   173       |#define __scanflike(fmtarg, firstvararg)                                                         |  7323     4
   174       |#define __format_arg(fmtarg)                                                                     |  7324     4
   175       |#define __printf0like(fmtarg, firstvararg)                                                       |  7325     4
   176       |                                                                                                 |  7326     4
   177       |/* Compiler-dependent macros that rely on specific extensions. */                                |  7327     4
   178       |#define __printf0like(fmtarg, firstvararg)                                                       |  7328     4
   179       |                                                                                                 |  7329     4
   180       |  /* intended to generate a weak reference as an alias */                                        |  7330     4
   181       |#define __weak_reference(sym,alias)                                                              |  7331     4
   182       |  /* If this symbol is refrenced, cause the linker to emit "msg" */                              |  7332     4
   183       |#define __warn_references(sym,msg)                                                               |  7333     4
   184       |                                                                                                 |  7334     4
   185       | /* This places the string into the resulting object.  It should */                              |  7335     4
   186       | /* probably become #pragma ident */                                                             |  7336     4
   187       |#define __IDSTRING(name,string) static const char name[] __unused = string                       |  7337     4
   188       |                                                                                                 |  7338     4
   189       |#ifndef __RCSID                                                                                  |  7339     4
   190       |#define __RCSID(s)      __IDSTRING(rcsid,s)                                                      |  7340     4
   191       |#endif                                                                                           |  7341     4
   192       |                                                                                                 |  7342     4
   193       |/*                                                                                               |  7343     4
   194       | * Embed the rcs id of a source file in the resulting library.                                   |  7344     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   142


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   195       | * Usage:                                                                                        |  7345     4
   196       | *      __SYSCID("Id: src/sys/sys/cdefs.h,v 1.28.2.8 2002/09/18                                  |  7346     4
   197       |*                                            04:05:13 mikeh Exp $");                             |  7347     4
   198       | */                                                                                              |  7348     4
   199       |#ifndef __SYSCID                                                                                 |  7349     4
   200       |#if !defined(lint) && !defined(STRIP_SYSCID)                                                     |  7350     4
   201       |#define __SYSCID(s)     __IDSTRING(__CONCAT(__rcsid_,__LINE__),s)                                |  7351     4
   202       |#else                                                                                            |  7352     4
   203       |#define __SYSCID(s)     struct __hack                                                            |  7353     4
   204       |#endif                                                                                           |  7354     4
   205       |#endif                                                                                           |  7355     4
   206       |                                                                                                 |  7356     4
   207       |#ifndef __RCSID_SOURCE                                                                           |  7357     4
   208       |#define __RCSID_SOURCE(s) __IDSTRING(rcsid_source,s)                                             |  7358     4
   209       |#endif                                                                                           |  7359     4
   210       |                                                                                                 |  7360     4
   211       |#ifndef __COPYRIGHT                                                                              |  7361     4
   212       |#define __COPYRIGHT(s)  __IDSTRING(copyright,s)                                                  |  7362     4
   213       |#endif                                                                                           |  7363     4
   214       |                                                                                                 |  7364     4
   215       |                                                                                                 |  7365     4
   216       |#ifndef __DECONST                                                                                |  7366     4
   217       |#define __DECONST(type, var)    ((type)(uintptr_t)(const void *)(var))                           |  7367     4
   218       |#endif                                                                                           |  7368     4
   219       |                                                                                                 |  7369     4
   220       |#ifndef __DEVOLATILE                                                                             |  7370     4
   221       |#define __DEVOLATILE(type, var) ((type)(uintptr_t)(volatile void *)(var))                        |  7371     4
   222       |#endif                                                                                           |  7372     4
   223       |                                                                                                 |  7373     4
   224       |#ifndef __DEQUALIFY                                                                              |  7374     4
   225       |#define __DEQUALIFY(type, var)  ((type)(uintptr_t)(const volatile void *)(var))                  |  7375     4
   226       |#endif                                                                                           |  7376     4
   227       |                                                                                                 |  7377     4
   228       |                                                                                                 |  7378     4
   229       |/*-                                                                                              |  7379     4
   230       | * The following definitions are an extension of the behavior originally                         |  7380     4
   231       | * implemented in <sys/_posix.h>, but with a different level of granularity.                     |  7381     4
   232       | * POSIX.1 requires that the macros we test be defined before any standard                       |  7382     4
   233       | * header file is included.                                                                      |  7383     4
   234       | *                                                                                               |  7384     4
   235       | * Here's a quick run-down of the versions:                                                      |  7385     4
   236       | *  defined(_POSIX_SOURCE)              1003.1-1988                                              |  7386     4
   237       | *  _POSIX_C_SOURCE == 1                1003.1-1990                                              |  7387     4
   238       | *  _POSIX_C_SOURCE == 2                1003.2-1992 C Language Binding Option                    |  7388     4
   239       | *  _POSIX_C_SOURCE == 199309           1003.1b-1993                                             |  7389     4
   240       | *  _POSIX_C_SOURCE == 199506           1003.1c-1995, 1003.1i-1995,                              |  7390     4
   241       | *                                      and the omnibus ISO/IEC 9945-1: 1996                     |  7391     4
   242       | *  _POSIX_C_SOURCE == 200112           1003.1-2001                                              |  7392     4
   243       | *  _POSIX_C_SOURCE == 200809           1003.1-2008                                              |  7393     4
   244       | *                                                                                               |  7394     4
   245       | * In addition, the X/Open Portability Guide, which is now the Single UNIX                       |  7395     4
   246       | * Specification, defines a feature-test macro which indicates the version of                    |  7396     4
   247       | * that specification, and which subsumes _POSIX_C_SOURCE.                                       |  7397     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   143


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   248       | *                                                                                               |  7398     4
   249       | * Our macros begin with two underscores to avoid namespace screwage.                            |  7399     4
   250       | */                                                                                              |  7400     4
   251       |                                                                                                 |  7401     4
   252       |/*                                                                                               |  7402     4
   253       | * If no special macro was specified, make the DragonFly extensions                              |  7403     4
   254       | * available. Also make them available when requested so.                                        |  7404     4
   255       | */                                                                                              |  7405     4
   256       |#if (!defined(_POSIX_C_SOURCE) && !defined(_XOPEN_SOURCE) && \                                   |  7406     4
   257       |    !defined(_ANSI_SOURCE) && !defined(_C99_SOURCE)) || \                                        |  7407     4
   258       |    defined(_DRAGONFLY_SOURCE) || defined(_NETBSD_SOURCE)                                        |  7408     4
   259       |#define __DF_VISIBLE    1                                                                        |  7409     4
   260       |#else                                                                                            |  7410     4
   261       |#define __DF_VISIBLE    0                                                                        |  7411     4
   262       |#endif                                                                                           |  7412     4
   263       |                                                                                                 |  7413     4
   264       |/*-                                                                                              |  7414     4
   265       | * The following definitions are an extension of the behavior originally                         |  7415     4
   266       | * implemented in <sys/_posix.h>, but with a different level of granularity.                     |  7416     4
   267       | * POSIX.1 requires that the macros we test be defined before any standard                       |  7417     4
   268       | * header file is included.                                                                      |  7418     4
   269       | *                                                                                               |  7419     4
   270       | * Here's a quick run-down of the versions:                                                      |  7420     4
   271       | *  defined(_POSIX_SOURCE)              1003.1-1988                                              |  7421     4
   272       | *  _POSIX_C_SOURCE == 1                1003.1-1990                                              |  7422     4
   273       | *  _POSIX_C_SOURCE == 2                1003.2-1992 C Language Binding Option                    |  7423     4
   274       | *  _POSIX_C_SOURCE == 199309           1003.1b-1993                                             |  7424     4
   275       | *  _POSIX_C_SOURCE == 199506           1003.1c-1995, 1003.1i-1995,                              |  7425     4
   276       | *                                      and the omnibus ISO/IEC 9945-1: 1996                     |  7426     4
   277       | *  _POSIX_C_SOURCE == 200112           1003.1-2001                                              |  7427     4
   278       | *  _POSIX_C_SOURCE == 200809           1003.1-2008                                              |  7428     4
   279       | *                                                                                               |  7429     4
   280       | * In addition, the X/Open Portability Guide, which is now the Single UNIX                       |  7430     4
   281       | * Specification, defines a feature-test macro which indicates the version of                    |  7431     4
   282       | * that specification, and which subsumes _POSIX_C_SOURCE.                                       |  7432     4
   283       | *                                                                                               |  7433     4
   284       | * Our macros begin with two underscores to avoid namespace screwage.                            |  7434     4
   285       | */                                                                                              |  7435     4
   286       |                                                                                                 |  7436     4
   287       |/* Deal with IEEE Std. 1003.1-1990, in which _POSIX_C_SOURCE == 1. */                            |  7437     4
   288       |#if defined(_POSIX_C_SOURCE) && _POSIX_C_SOURCE == 1                                             |  7438     4
   289       |#undef _POSIX_C_SOURCE          /* Probably illegal, but beyond caring now. */                   |  7439     4
   290       |#define _POSIX_C_SOURCE         199009                                                           |  7440     4
   291       |#endif                                                                                           |  7441     4
   292       |                                                                                                 |  7442     4
   293       |/* Deal with IEEE Std. 1003.2-1992, in which _POSIX_C_SOURCE == 2. */                            |  7443     4
   294       |#if defined(_POSIX_C_SOURCE) && _POSIX_C_SOURCE == 2                                             |  7444     4
   295       |#undef _POSIX_C_SOURCE                                                                           |  7445     4
   296       |#define _POSIX_C_SOURCE         199209                                                           |  7446     4
   297       |#endif                                                                                           |  7447     4
   298       |                                                                                                 |  7448     4
   299       |/* Deal with various X/Open Portability Guides and Single UNIX Spec. */                          |  7449     4
   300       |#ifdef _XOPEN_SOURCE                                                                             |  7450     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   144


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   301       |#if _XOPEN_SOURCE - 0 >= 700                                                                     |  7451     4
   302       |#define __XSI_VISIBLE           700                                                              |  7452     4
   303       |#undef _POSIX_C_SOURCE                                                                           |  7453     4
   304       |#define _POSIX_C_SOURCE         200809                                                           |  7454     4
   305       |#elif _XOPEN_SOURCE - 0 >= 600                                                                   |  7455     4
   306       |#define __XSI_VISIBLE           600                                                              |  7456     4
   307       |#undef _POSIX_C_SOURCE                                                                           |  7457     4
   308       |#define _POSIX_C_SOURCE         200112                                                           |  7458     4
   309       |#elif _XOPEN_SOURCE - 0 >= 500                                                                   |  7459     4
   310       |#define __XSI_VISIBLE           500                                                              |  7460     4
   311       |#undef _POSIX_C_SOURCE                                                                           |  7461     4
   312       |#define _POSIX_C_SOURCE         199506                                                           |  7462     4
   313       |#endif                                                                                           |  7463     4
   314       |#endif                                                                                           |  7464     4
   315       |                                                                                                 |  7465     4
   316       |/*                                                                                               |  7466     4
   317       | * Deal with all versions of POSIX.  The ordering relative to the tests above is                 |  7467     4
   318       | * important.                                                                                    |  7468     4
   319       | */                                                                                              |  7469     4
   320       |#if defined(_POSIX_SOURCE) && !defined(_POSIX_C_SOURCE)                                          |  7470     4
   321       |#define _POSIX_C_SOURCE         198808                                                           |  7471     4
   322       |#endif                                                                                           |  7472     4
   323       |#ifdef _POSIX_C_SOURCE                                                                           |  7473     4
   324       |#if _POSIX_C_SOURCE >= 200809                                                                    |  7474     4
   325       |#define __POSIX_VISIBLE         200809                                                           |  7475     4
   326       |#define __ISO_C_VISIBLE         1999                                                             |  7476     4
   327       |#elif _POSIX_C_SOURCE >= 200112                                                                  |  7477     4
   328       |#define __POSIX_VISIBLE         200112                                                           |  7478     4
   329       |#define __ISO_C_VISIBLE         1999                                                             |  7479     4
   330       |#elif _POSIX_C_SOURCE >= 199506                                                                  |  7480     4
   331       |#define __POSIX_VISIBLE         199506                                                           |  7481     4
   332       |#define __ISO_C_VISIBLE         1990                                                             |  7482     4
   333       |#elif _POSIX_C_SOURCE >= 199309                                                                  |  7483     4
   334       |#define __POSIX_VISIBLE         199309                                                           |  7484     4
   335       |#define __ISO_C_VISIBLE         1990                                                             |  7485     4
   336       |#elif _POSIX_C_SOURCE >= 199209                                                                  |  7486     4
   337       |#define __POSIX_VISIBLE         199209                                                           |  7487     4
   338       |#define __ISO_C_VISIBLE         1990                                                             |  7488     4
   339       |#elif _POSIX_C_SOURCE >= 199009                                                                  |  7489     4
   340       |#define __POSIX_VISIBLE         199009                                                           |  7490     4
   341       |#define __ISO_C_VISIBLE         1990                                                             |  7491     4
   342       |#else                                                                                            |  7492     4
   343       |#define __POSIX_VISIBLE         198808                                                           |  7493     4
   344       |#define __ISO_C_VISIBLE         0                                                                |  7494     4
   345       |#endif /* _POSIX_C_SOURCE */                                                                     |  7495     4
   346       |#else                                                                                            |  7496     4
   347       |/*-                                                                                              |  7497     4
   348       | * Deal with _ANSI_SOURCE:                                                                       |  7498     4
   349       | * If it is defined, and no other compilation environment is explicitly                          |  7499     4
   350       | * requested, then define our internal feature-test macros to zero.  This                        |  7500     4
   351       | * makes no difference to the preprocessor (undefined symbols in preprocessing                   |  7501     4
   352       | * expressions are defined to have value zero), but makes it more convenient for                 |  7502     4
   353       | * a test program to print out the values.                                                       |  7503     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   145


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   354       | *                                                                                               |  7504     4
   355       | * If a program mistakenly defines _ANSI_SOURCE and some other macro such as                     |  7505     4
   356       | * _POSIX_C_SOURCE, we will assume that it wants the broader compilation                         |  7506     4
   357       | * environment (and in fact we will never get here).                                             |  7507     4
   358       | */                                                                                              |  7508     4
   359       |#if defined(_ANSI_SOURCE)       /* Hide almost everything. */                                    |  7509     4
   360       |#define __POSIX_VISIBLE         0                                                                |  7510     4
   361       |#define __XSI_VISIBLE           0                                                                |  7511     4
   362       |#define __BSD_VISIBLE           0                                                                |  7512     4
   363       |#define __ISO_C_VISIBLE         1990                                                             |  7513     4
   364       |#define __EXT1_VISIBLE          0                                                                |  7514     4
   365       |#elif defined(_C99_SOURCE)      /* Localism to specify strict C99 env. */                        |  7515     4
   366       |#define __POSIX_VISIBLE         0                                                                |  7516     4
   367       |#define __XSI_VISIBLE           0                                                                |  7517     4
   368       |#define __BSD_VISIBLE           0                                                                |  7518     4
   369       |#define __ISO_C_VISIBLE         1999                                                             |  7519     4
   370       |#define __EXT1_VISIBLE          0                                                                |  7520     4
   371       |#elif defined(_C11_SOURCE)      /* Localism to specify strict C11 env. */                        |  7521     4
   372       |#define __POSIX_VISIBLE         0                                                                |  7522     4
   373       |#define __XSI_VISIBLE           0                                                                |  7523     4
   374       |#define __BSD_VISIBLE           0                                                                |  7524     4
   375       |#define __ISO_C_VISIBLE         2011                                                             |  7525     4
   376       |#define __EXT1_VISIBLE          0                                                                |  7526     4
   377       |#else                           /* Default environment: show everything. */                      |  7527     4
   378       |#define __POSIX_VISIBLE         200809                                                           |  7528     4
   379       |#define __XSI_VISIBLE           700                                                              |  7529     4
   380       |#define __BSD_VISIBLE           1                                                                |  7530     4
   381       |#define __ISO_C_VISIBLE         2011                                                             |  7531     4
   382       |#define __EXT1_VISIBLE          1                                                                |  7532     4
   383       |#endif                                                                                           |  7533     4
   384       |#endif                                                                                           |  7534     4
   385       |                                                                                                 |  7535     4
   386       |/* User override __EXT1_VISIBLE */                                                               |  7536     4
   387       |#if defined(__STDC_WANT_LIB_EXT1__)                                                              |  7537     4
   388       |#undef  __EXT1_VISIBLE                                                                           |  7538     4
   389       |#if __STDC_WANT_LIB_EXT1__                                                                       |  7539     4
   390       |#define __EXT1_VISIBLE          1                                                                |  7540     4
   391       |#else                                                                                            |  7541     4
   392       |#define __EXT1_VISIBLE          0                                                                |  7542     4
   393       |#endif                                                                                           |  7543     4
   394       |#endif /* __STDC_WANT_LIB_EXT1__ */                                                              |  7544     4
   395       |                                                                                                 |  7545     4
   396       |#if defined(__370__) || defined(__mips) || defined(__powerpc64__)                                |  7546     4
   397       |#define __NO_TLS 1                                                                               |  7547     4
   398       |#endif                                                                                           |  7548     4
   399       |                                                                                                 |  7549     4
   400       |                                                                                                 |  7550     4
   401       |/* easier than stripping __FBSDID() from sources - Greg 2008/07/28 */                            |  7551     4
   402       |#define __FBSDID(x)                                                                              |  7552     4
   403       |                                                                                                 |  7553     4
   404       |#endif /* !_SYS_CDEFS_H_ */                                                                      |  7554     4
   405       |#pragma pack(reset)                                                                              |  7555     4
   308       |                                                                                                 |  7556    17
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   146


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   309       |__BEGIN_DECLS                                                                                    |  7557    17
   309       +                                                                                                 +  7557    17
   310       |int     adjtime(const struct timeval *, struct timeval *);                                       |  7558    17
   311       |int     futimes(int, const struct timeval *);                                                    |  7559    17
   312       |#pragma map (getitimer, "@@GITMR")                                                               |  7560    17
   313       |int     getitimer(int, struct itimerval *);                                                      |  7561    17
   314       |#pragma map (gettimeofday,"GETTFD@Y")                                                            |  7562    17
   315       |int     gettimeofday(struct timeval *, struct timezone *);                                       |  7563    17
   316       |int     lutimes(const char *, const struct timeval *);                                           |  7564    17
   317       |#pragma map (setitimer, "@@SITMR")                                                               |  7565    17
   318       |int     setitimer(int, const struct itimerval *, struct itimerval *);                            |  7566    17
   319       |int     settimeofday(const struct timeval *, const struct timezone *);                           |  7567    17
   320       |int     utimes(const char *, const struct timeval *);                                            |  7568    17
   321       |__END_DECLS                                                                                      |  7569    17
   321       +                                                                                                 +  7569    17
   322       |                                                                                                 |  7570    17
   323       |#endif /* !_KERNEL */                                                                            |  7571    17
   324       |                                                                                                 |  7572    17
   325       |#endif /* !_SYS_TIME_H_ */                                                                       |  7573    17
   326       |#pragma pack(reset)                                                                              |  7574    17
    25       |#else                                                                                            |  7575     2
    26       |#define INLINE                                                                                   |  7576     2
    27       |#endif                                                                                           |  7577     2
    28       |                                                                                                 |  7578     2
    29       |static unsigned char E2U[256] =                                                                  |  7579     2
    30       |{                                                                                                |  7580     2
    31       |    {0x00},{0x01},{0x02},{0x03},{0x9C},{0x09},{0x86},{0x7F},{0x97},                              |  7581     2
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
    32       |    {0x8D},{0x8E},{0x0B},{0x0C},{0x0D},{0x0E},{0x0F},{0x10},{0x11},                              |  7582     2
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
    33       |    {0x12},{0x13},{0x9D},{0x85},{0x08},{0x87},{0x18},{0x19},{0x92},                              |  7583     2
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   147


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
    34       |    {0x8F},{0x1C},{0x1D},{0x1E},{0x1F},{0x80},{0x81},{0x82},{0x83},                              |  7584     2
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
    35       |    {0x84},{0x0A},{0x17},{0x1B},{0x88},{0x89},{0x8A},{0x8B},{0x8C},                              |  7585     2
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
    36       |    {0x05},{0x06},{0x07},{0x90},{0x91},{0x16},{0x93},{0x94},{0x95},                              |  7586     2
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
    37       |    {0x96},{0x04},{0x98},{0x99},{0x9A},{0x9B},{0x14},{0x15},{0x9E},                              |  7587     2
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
    38       |    {0x1A},{0x20},{0xA0},{0xE2},{0xE4},{0xE0},{0xE1},{0xE3},{0xE5},                              |  7588     2
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   148


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    39       |    {0xE7},{0xF1},{0xA2},{0x2E},{0x3C},{0x28},{0x2B},{0x7C},{0x26},                              |  7589     2
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
    40       |    {0xE9},{0xEA},{0xEB},{0xE8},{0xED},{0xEE},{0xEF},{0xEC},{0xDF},                              |  7590     2
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
    41       |    {0x21},{0x24},{0x2A},{0x29},{0x3B},{0x5E},{0x2D},{0x2F},{0xC2},                              |  7591     2
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
    42       |    {0xC4},{0xC0},{0xC1},{0xC3},{0xC5},{0xC7},{0xD1},{0xA6},{0x2C},                              |  7592     2
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
    43       |    {0x25},{0x5F},{0x3E},{0x3F},{0xF8},{0xC9},{0xCA},{0xCB},{0xC8},                              |  7593     2
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
    44       |    {0xCD},{0xCE},{0xCF},{0xCC},{0x60},{0x3A},{0x23},{0x40},{0x27},                              |  7594     2
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   149


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
    45       |    {0x3D},{0x22},{0xD8},{0x61},{0x62},{0x63},{0x64},{0x65},{0x66},                              |  7595     2
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
    46       |    {0x67},{0x68},{0x69},{0xAB},{0xBB},{0xF0},{0xFD},{0xFE},{0xB1},                              |  7596     2
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
    47       |    {0xB0},{0x6A},{0x6B},{0x6C},{0x6D},{0x6E},{0x6F},{0x70},{0x71},                              |  7597     2
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
    48       |    {0x72},{0xAA},{0xBA},{0xE6},{0xB8},{0xC6},{0xA4},{0xB5},{0x7E},                              |  7598     2
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
    49       |    {0x73},{0x74},{0x75},{0x76},{0x77},{0x78},{0x79},{0x7A},{0xA1},                              |  7599     2
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   150


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
    50       |    {0xBF},{0xD0},{0x5B},{0xDE},{0xAE},{0xAC},{0xA3},{0xA5},{0xB7},                              |  7600     2
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
    51       |    {0xA9},{0xA7},{0xB6},{0xBC},{0xBD},{0xBE},{0xDD},{0xA8},{0xAF},                              |  7601     2
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
    52       |    {0x5D},{0xB4},{0xD7},{0x7B},{0x41},{0x42},{0x43},{0x44},{0x45},                              |  7602     2
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
    53       |    {0x46},{0x47},{0x48},{0x49},{0xAD},{0xF4},{0xF6},{0xF2},{0xF3},                              |  7603     2
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
    54       |    {0xF5},{0x7D},{0x4A},{0x4B},{0x4C},{0x4D},{0x4E},{0x4F},{0x50},                              |  7604     2
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   151


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
    55       |    {0x51},{0x52},{0xB9},{0xFB},{0xFC},{0xF9},{0xFA},{0xFF},{0x5C},                              |  7605     2
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
    56       |    {0xF7},{0x53},{0x54},{0x55},{0x56},{0x57},{0x58},{0x59},{0x5A},                              |  7606     2
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
    57       |    {0xB2},{0xD4},{0xD6},{0xD2},{0xD3},{0xD5},{0x30},{0x31},{0x32},                              |  7607     2
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
    58       |    {0x33},{0x34},{0x35},{0x36},{0x37},{0x38},{0x39},{0xB3},{0xDB},                              |  7608     2
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
    59       |    {0xDC},{0xD9},{0xDA},{0x9F}                                                                  |  7609     2
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
*=Warning===> cc: #2198 braces around scalar initializer for 'E2U'
    60       |};                                                                                               |  7610     2
    61       |                                                                                                 |  7611     2
    62       |static unsigned char U2E[256] =                                                                  |  7612     2
    63       |{                                                                                                |  7613     2
    64       |    {0x00},{0x01},{0x02},{0x03},{0x37},{0x2D},{0x2E},{0x2F},{0x16},                              |  7614     2
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   152


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
    65       |    {0x05},{0x15},{0x0B},{0x0C},{0x0D},{0x0E},{0x0F},{0x10},{0x11},                              |  7615     2
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
    66       |    {0x12},{0x13},{0x3C},{0x3D},{0x32},{0x26},{0x18},{0x19},{0x3F},                              |  7616     2
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
    67       |    {0x27},{0x1C},{0x1D},{0x1E},{0x1F},{0x40},{0x5A},{0x7F},{0x7B},                              |  7617     2
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
    68       |    {0x5B},{0x6C},{0x50},{0x7D},{0x4D},{0x5D},{0x5C},{0x4E},{0x6B},                              |  7618     2
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
    69       |    {0x60},{0x4B},{0x61},{0xF0},{0xF1},{0xF2},{0xF3},{0xF4},{0xF5},                              |  7619     2
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   153


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
    70       |    {0xF6},{0xF7},{0xF8},{0xF9},{0x7A},{0x5E},{0x4C},{0x7E},{0x6E},                              |  7620     2
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
    71       |    {0x6F},{0x7C},{0xC1},{0xC2},{0xC3},{0xC4},{0xC5},{0xC6},{0xC7},                              |  7621     2
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
    72       |    {0xC8},{0xC9},{0xD1},{0xD2},{0xD3},{0xD4},{0xD5},{0xD6},{0xD7},                              |  7622     2
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
    73       |    {0xD8},{0xD9},{0xE2},{0xE3},{0xE4},{0xE5},{0xE6},{0xE7},{0xE8},                              |  7623     2
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
    74       |    {0xE9},{0xAD},{0xE0},{0xBD},{0x5F},{0x6D},{0x79},{0x81},{0x82},                              |  7624     2
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   154


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
    75       |    {0x83},{0x84},{0x85},{0x86},{0x87},{0x88},{0x89},{0x91},{0x92},                              |  7625     2
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
    76       |    {0x93},{0x94},{0x95},{0x96},{0x97},{0x98},{0x99},{0xA2},{0xA3},                              |  7626     2
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
    77       |    {0xA4},{0xA5},{0xA6},{0xA7},{0xA8},{0xA9},{0xC0},{0x4F},{0xD0},                              |  7627     2
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
    78       |    {0xA1},{0x07},{0x20},{0x21},{0x22},{0x23},{0x24},{0x25},{0x06},                              |  7628     2
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
    79       |    {0x17},{0x28},{0x29},{0x2A},{0x2B},{0x2C},{0x09},{0x0A},{0x1B},                              |  7629     2
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
    80       |    {0x30},{0x31},{0x1A},{0x33},{0x34},{0x35},{0x36},{0x08},{0x38},                              |  7630     2
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   155


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
    81       |    {0x39},{0x3A},{0x3B},{0x04},{0x14},{0x3E},{0xFF},{0x80},{0X00},                              |  7631     2
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
    82       |    {0X00},{0X00},{0X00},{0X00},{0X00},{0X00},{0X00},{0X00},{0X00},                              |  7632     2
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
    83       |    {0X00},{0X00},{0X00},{0X00},{0X00},{0X00},{0X00},{0X00},{0X00},                              |  7633     2
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
    84       |    {0X00},{0X00},{0X00},{0X00},{0X00},{0X00},{0X00},{0X00},{0X00},                              |  7634     2
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
    85       |    {0X00},{0X00},{0X00},{0x8A},{0X00},{0X00},{0X00},{0X00},{0X00},                              |  7635     2
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   156


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
    86       |    {0X00},{0X00},{0X00},{0X00},{0X00},{0X00},{0X00},{0X00},{0X00},                              |  7636     2
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
    87       |    {0X00},{0X00},{0X00},{0X00},{0X00},{0X00},{0X00},{0X00},{0X00},                              |  7637     2
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
    88       |    {0X00},{0X00},{0X00},{0X00},{0X00},{0X00},{0X00},{0X00},{0x8B},                              |  7638     2
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
    89       |    {0X00},{0X00},{0X00},{0X00},{0X00},{0X00},{0X00},{0X00},{0X00},                              |  7639     2
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
    90       |    {0X00},{0X00},{0X00},{0X00},{0X00},{0X00},{0X00},{0X00},{0X00},                              |  7640     2
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   157


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
    91       |    {0X00},{0X00},{0X00},{0X00},{0X00},{0X00},{0X00},{0X00},{0X00},                              |  7641     2
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
    92       |    {0X00},{0X00},{0X00},{0X00}                                                                  |  7642     2
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
*=Warning===> cc: #2198 braces around scalar initializer for 'U2E'
    93       |};                                                                                               |  7643     2
    94       |                                                                                                 |  7644     2
    95       |static RD_INLINE void ebcdic_2_utf8(unsigned char* buf, size_t len)                              |  7645     2
*=Warning===> cc: #2163 explicit type is missing, (int) is assumed
*=Error===> cc: #2100 syntax error: expected semicolon after declaration
    96       |{                                                                                                |  7646     2
    97       |    while (len > 0)                                                                              |  7647     2
    98       |    {                                                                                            |  7648     2
    99       |        *buf = E2U[*buf];                                                                        |  7649     2
   100       |        buf++;                                                                                   |  7650     2
   101       |        len--;                                                                                   |  7651     2
   102       |    }                                                                                            |  7652     2
   103       |}                                                                                                |  7653     2
   104       |                                                                                                 |  7654     2
   105       |static RD_INLINE void utf8_2_ebcdic(unsigned char* buf, size_t len)                              |  7655     2
*=Warning===> cc: #2163 explicit type is missing, (int) is assumed
*=Error===> cc: #2100 syntax error: expected semicolon after declaration
   106       |{                                                                                                |  7656     2
   107       |    while (len > 0)                                                                              |  7657     2
   108       |    {                                                                                            |  7658     2
   109       |        *buf = U2E[*buf];                                                                        |  7659     2
   110       |        buf++;                                                                                   |  7660     2
   111       |        len--;                                                                                   |  7661     2
   112       |    }                                                                                            |  7662     2
   113       |}                                                                                                |  7663     2
   114       |                                                                                                 |  7664     2
   115       |#endif /* sysc_h */                                                                              |  7665     2
     1       |/*                                                                                               |  7666     1
     2       | * librdkafka - The Apache Kafka C/C++ library                                                   |  7667     1
     3       | *                                                                                               |  7668     1
     4       | * Copyright (c) 2014-2016 Magnus Edenhill                                                       |  7669     1
     5       | * All rights reserved.                                                                          |  7670     1
     6       | *                                                                                               |  7671     1
     7       | * Redistribution and use in source and binary forms, with or without                            |  7672     1
     8       | * modification, are permitted provided that the following conditions are met:                   |  7673     1
     9       | *                                                                                               |  7674     1
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   158


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    10       | * 1. Redistributions of source code must retain the above copyright notice,                     |  7675     1
    11       | *    this list of conditions and the following disclaimer.                                      |  7676     1
    12       | * 2. Redistributions in binary form must reproduce the above copyright notice,                  |  7677     1
    13       | *    this list of conditions and the following disclaimer in the documentation                  |  7678     1
    14       | *    and/or other materials provided with the distribution.                                     |  7679     1
    15       | *                                                                                               |  7680     1
    16       | * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"                   |  7681     1
    17       | * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE                     |  7682     1
    18       | * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE                    |  7683     1
    19       | * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE                      |  7684     1
    20       | * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR                           |  7685     1
    21       | * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF                          |  7686     1
    22       | * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS                      |  7687     1
    23       | * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN                       |  7688     1
    24       | * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)                       |  7689     1
    25       | * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE                    |  7690     1
    26       | * POSSIBILITY OF SUCH DAMAGE.                                                                   |  7691     1
    27       | */                                                                                              |  7692     1
    28       |                                                                                                 |  7693     1
    29       | /*                                                                                              |  7694     1
    30       |  * ASG_LK: MODIFICATION HISTORY                                                                 |  7695     1
    31       |  * ==================================================================================           |  7696     1
    32       |  * TAG          |   DATE (DD/MM/YYYY)    |   JIRA    |   DESCRIPTION                            |  7697     1
    33       |  * ==================================================================================           |  7698     1
    34       |  * ASG_LK01         22/04/2021              -           SYSTEM-C                                |  7699     1
    35       |  * ==================================================================================           |  7700     1
    36       | */                                                                                              |  7701     1
    37       |                                                                                                 |  7702     1
    38       |#ifndef _RDATOMIC_H_                                                                             |  7703     1
    39       |#define _RDATOMIC_H_                                                                             |  7704     1
    40       |                                                                                                 |  7705     1
    41       |#include "tinycthread.h"                                                                         |  7706     1
     1       |/* -*- mode: c; tab-width: 2; indent-tabs-mode: nil; -*-                                         |  7707    18
     2       |Copyright (c) 2012 Marcus Geelnard                                                               |  7708    18
     3       |Copyright (c) 2013-2014 Evan Nemerson                                                            |  7709    18
     4       |                                                                                                 |  7710    18
     5       |This software is provided 'as-is', without any express or implied                                |  7711    18
     6       |warranty. In no event will the authors be held liable for any damages                            |  7712    18
     7       |arising from the use of this software.                                                           |  7713    18
     8       |                                                                                                 |  7714    18
     9       |Permission is granted to anyone to use this software for any purpose,                            |  7715    18
    10       |including commercial applications, and to alter it and redistribute it                           |  7716    18
    11       |freely, subject to the following restrictions:                                                   |  7717    18
    12       |                                                                                                 |  7718    18
    13       |    1. The origin of this software must not be misrepresented; you must not                      |  7719    18
    14       |    claim that you wrote the original software. If you use this software                         |  7720    18
    15       |    in a product, an acknowledgment in the product documentation would be                        |  7721    18
    16       |    appreciated but is not required.                                                             |  7722    18
    17       |                                                                                                 |  7723    18
    18       |    2. Altered source versions must be plainly marked as such, and must not be                   |  7724    18
    19       |    misrepresented as being the original software.                                               |  7725    18
    20       |                                                                                                 |  7726    18
    21       |    3. This notice may not be removed or altered from any source                                 |  7727    18
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   159


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    22       |    distribution.                                                                                |  7728    18
    23       |*/                                                                                               |  7729    18
    24       |                                                                                                 |  7730    18
    25       |#ifndef _TINYCTHREAD_H_                                                                          |  7731    18
    26       |#define _TINYCTHREAD_H_                                                                          |  7732    18
    27       |                                                                                                 |  7733    18
    28       |/* Include config to know if C11 threads are available */                                        |  7734    18
    29       |#ifdef _WIN32                                                                                    |  7735    18
    30       |#include "win32_config.h"                                                                        |  7736    18
    31       |#else                                                                                            |  7737    18
    32       |#include "../config.h"                                                                           |  7738    18
     1       |// Automatically generated by ./configure                                                        |  7739    19
     2       |#ifndef _CONFIG_H_                                                                               |  7740    19
     3       |#define _CONFIG_H_                                                                               |  7741    19
     4       |// distro                                                                                        |  7742    19
     5       |#define SOLIB_EXT ".dylib"                                                                       |  7743    19
     6       |#define ARCH "x86_64"                                                                            |  7744    19
     7       |#define CPU "generic"                                                                            |  7745    19
     8       |#define WITHOUT_OPTIMIZATION 0                                                                   |  7746    19
     9       |#define WITH_STRIP 0                                                                             |  7747    19
    10       |// #define ENABLE_ZLIB "try"                                                                     |  7748    19
    11       |// #define ENABLE_ZSTD "try"                                                                     |  7749    19
    12       |// #define ENABLE_SSL "try"                                                                      |  7750    19
    13       |// #define ENABLE_GSSAPI "try"                                                                   |  7751    19
    14       |#define ENABLE_ZLIB 0                                                                            |  7752    19
    15       |#define ENABLE_ZSTD 0                                                                            |  7753    19
    16       |#define ENABLE_SSL 0                                                                             |  7754    19
    17       |#define ENABLE_GSSAPI 0                                                                          |  7755    19
    18       |#define ENABLE_DEVEL 0                                                                           |  7756    19
    19       |#define ENABLE_VALGRIND 0                                                                        |  7757    19
    20       |#define ENABLE_REFCNT_DEBUG 0                                                                    |  7758    19
    21       |#define ENABLE_LZ4_EXT 1                                                                         |  7759    19
    22       |#define ENABLE_LZ4_EXT 1                                                                         |  7760    19
    23       |#define ENABLE_REGEX_EXT 1                                                                       |  7761    19
    24       |#define ENABLE_C11THREADS "try"                                                                  |  7762    19
    25       |#define ENABLE_SYSLOG 1                                                                          |  7763    19
    26       |#define MKL_APP_NAME "librdkafka"                                                                |  7764    19
    27       |#define MKL_APP_DESC_ONELINE "The Apache Kafka C/C++ library"                                    |  7765    19
    28       |// gcc                                                                                           |  7766    19
    29       |#define WITH_GCC 0                                                                               |  7767    19
    30       |// gxx                                                                                           |  7768    19
    31       |#define WITH_GXX 0                                                                               |  7769    19
    32       |// pkgconfig                                                                                     |  7770    19
    33       |#define WITH_PKGCONFIG 1                                                                         |  7771    19
    34       |// PIC                                                                                           |  7772    19
    35       |#define HAVE_PIC 1                                                                               |  7773    19
    36       |// osxlib                                                                                        |  7774    19
    37       |#define WITH_OSXLD 1                                                                             |  7775    19
    38       |// __atomic_32                                                                                   |  7776    19
    39       |#define HAVE_ATOMICS_32 1                                                                        |  7777    19
    40       |// __atomic_32                                                                                   |  7778    19
    41       |#define HAVE_ATOMICS_32_ATOMIC 1                                                                 |  7779    19
    42       |// atomic_32                                                                                     |  7780    19
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   160


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    43       |#define ATOMIC_OP32(OP1,OP2,PTR,VAL) __atomic_ ## OP1 ## _ ## OP2(PTR, VAL, __ATOMIC_SEQ_CST)    |  7781    19
    44       |// __atomic_64                                                                                   |  7782    19
    45       |#define HAVE_ATOMICS_64 1                                                                        |  7783    19
    46       |// __atomic_64                                                                                   |  7784    19
    47       |#define HAVE_ATOMICS_64_ATOMIC 1                                                                 |  7785    19
    48       |// atomic_64                                                                                     |  7786    19
    49       |#define ATOMIC_OP64(OP1,OP2,PTR,VAL) __atomic_ ## OP1 ## _ ## OP2(PTR, VAL, __ATOMIC_SEQ_CST)    |  7787    19
    50       |// atomic_64                                                                                     |  7788    19
    51       |#define ATOMIC_OP(OP1,OP2,PTR,VAL) __atomic_ ## OP1 ## _ ## OP2(PTR, VAL, __ATOMIC_SEQ_CST)      |  7789    19
    52       |// parseversion                                                                                  |  7790    19
    53       |#define RDKAFKA_VERSION_STR "1.6.1"                                                              |  7791    19
    54       |// parseversion                                                                                  |  7792    19
    55       |#define MKL_APP_VERSION "1.6.1"                                                                  |  7793    19
    56       |// libdl                                                                                         |  7794    19
    57       |#define WITH_LIBDL 1                                                                             |  7795    19
    58       |// WITH_PLUGINS                                                                                  |  7796    19
    59       |#define WITH_PLUGINS 1                                                                           |  7797    19
    60       |// zlib                                                                                          |  7798    19
    61       |#define WITH_ZLIB 0                                                                              |  7799    19
    62       |// libsasl2                                                                                      |  7800    19
    63       |#define WITH_SASL_CYRUS 1                                                                        |  7801    19
    64       |// WITH_HDRHISTOGRAM                                                                             |  7802    19
    65       |#define WITH_HDRHISTOGRAM 1                                                                      |  7803    19
    66       |// syslog                                                                                        |  7804    19
    67       |#define WITH_SYSLOG 1                                                                            |  7805    19
    68       |// WITH_SNAPPY                                                                                   |  7806    19
    69       |#define WITH_SNAPPY 1                                                                            |  7807    19
    70       |// WITH_SOCKEM                                                                                   |  7808    19
    71       |#define WITH_SOCKEM 1                                                                            |  7809    19
    72       |// crc32chw                                                                                      |  7810    19
    73       | /* ZLRD01 */                                                                                    |  7811    19
    74       |#define WITH_CRC32C_HW 0                                                                         |  7812    19
    75       |// regex                                                                                         |  7813    19
    76       |#define HAVE_REGEX 1                                                                             |  7814    19
    77       |// rand_r                                                                                        |  7815    19
    78       |#define HAVE_RAND_R 1                                                                            |  7816    19
    79       |// strndup                                                                                       |  7817    19
    80       |#define HAVE_STRNDUP 0                                                                           |  7818    19
    81       |// strlcpy                                                                                       |  7819    19
    82       |#define HAVE_STRLCPY 0                                                                           |  7820    19
    83       |// strerror_r                                                                                    |  7821    19
    84       |#define HAVE_STRERROR_R 0                                                                        |  7822    19
    85       |// pthread_setname_darwin                                                                        |  7823    19
    86       |#define HAVE_PTHREAD_SETNAME_DARWIN 0                                                            |  7824    19
    87       |// getrusage                                                                                     |  7825    19
    88       |#define HAVE_GETRUSAGE 1                                                                         |  7826    19
    89       |// BUILT_WITH                                                                                    |  7827    19
    90       |#define BUILT_WITH "GCC GXX PKGCONFIG OSXLD LIBDL PLUGINS SASL_CYRUS HDRHISTOGRAM SYSLOG SNAPPY S|  7828    19
    90       +OCKEM CRC32C_HW"                                                                                 +  7828    19
    91       |#endif /* _CONFIG_H_ */                                                                          |  7829    19
    33       |#endif                                                                                           |  7830    18
    34       |                                                                                                 |  7831    18
    35       |#if WITH_C11THREADS                                                                              |  7832    18
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   161


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    36       |#include <threads.h>                                                                             |  7833    18
    37       |#else                                                                                            |  7834    18
    38       |                                                                                                 |  7835    18
    39       |#ifdef __cplusplus                                                                               |  7836    18
    40       |extern "C" {                                                                                     |  7837    18
    41       |#endif                                                                                           |  7838    18
    42       |                                                                                                 |  7839    18
    43       |/**                                                                                              |  7840    18
    44       |* @file                                                                                          |  7841    18
    45       |* @mainpage TinyCThread API Reference                                                            |  7842    18
    46       |*                                                                                                |  7843    18
    47       |* @section intro_sec Introduction                                                                |  7844    18
    48       |* TinyCThread is a minimal, portable implementation of basic threading                           |  7845    18
    49       |* classes for C.                                                                                 |  7846    18
    50       |*                                                                                                |  7847    18
    51       |* They closely mimic the functionality and naming of the C11 standard, and                       |  7848    18
    52       |* should be easily replaceable with the corresponding standard variants.                         |  7849    18
    53       |*                                                                                                |  7850    18
    54       |* @section port_sec Portability                                                                  |  7851    18
    55       |* The Win32 variant uses the native Win32 API for implementing the thread                        |  7852    18
    56       |* classes, while for other systems, the POSIX threads API (pthread) is used.                     |  7853    18
    57       |*                                                                                                |  7854    18
    58       |* @section misc_sec Miscellaneous                                                                |  7855    18
    59       |* The following special keywords are available: #_Thread_local.                                  |  7856    18
    60       |*                                                                                                |  7857    18
    61       |* For more detailed information, browse the different sections of this                           |  7858    18
    62       |* documentation. A good place to start is:                                                       |  7859    18
    63       |* tinycthread.h.                                                                                 |  7860    18
    64       |*/                                                                                               |  7861    18
    65       |                                                                                                 |  7862    18
    66       |/* Which platform are we on? */                                                                  |  7863    18
    67       |#if !defined(_TTHREAD_PLATFORM_DEFINED_)                                                         |  7864    18
    68       |  #if defined(_WIN32) || defined(__WIN32__) || defined(__WINDOWS__)                              |  7865    18
    69       |    #define _TTHREAD_WIN32_                                                                      |  7866    18
    70       |  #else                                                                                          |  7867    18
    71       |    #define _TTHREAD_POSIX_                                                                      |  7868    18
    72       |  #endif                                                                                         |  7869    18
    73       |  #define _TTHREAD_PLATFORM_DEFINED_                                                             |  7870    18
    74       |#endif                                                                                           |  7871    18
    75       |                                                                                                 |  7872    18
    76       |/* Activate some POSIX functionality (e.g. clock_gettime and recursive mutexes) */               |  7873    18
    77       |#if defined(_TTHREAD_POSIX_)                                                                     |  7874    18
    78       |  #undef _FEATURES_H                                                                             |  7875    18
    79       |  #if !defined(_GNU_SOURCE)                                                                      |  7876    18
    80       |    #define _GNU_SOURCE                                                                          |  7877    18
    81       |  #endif                                                                                         |  7878    18
    82       |  #if !defined(_POSIX_C_SOURCE) || ((_POSIX_C_SOURCE - 0) < 199309L)                             |  7879    18
    83       |    #undef _POSIX_C_SOURCE                                                                       |  7880    18
    84       |    #define _POSIX_C_SOURCE 199309L                                                              |  7881    18
    85       |  #endif                                                                                         |  7882    18
    86       |  #if !defined(_XOPEN_SOURCE) || ((_XOPEN_SOURCE - 0) < 500)                                     |  7883    18
    87       |    #undef _XOPEN_SOURCE                                                                         |  7884    18
    88       |    #define _XOPEN_SOURCE 500                                                                    |  7885    18
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   162


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    89       |  #endif                                                                                         |  7886    18
    90       |#endif                                                                                           |  7887    18
    91       |                                                                                                 |  7888    18
    92       |/* Generic includes */                                                                           |  7889    18
    93       |#include <time.h>                                                                                |  7890    18
     1       |/* release 2.25.00 */                                                                            |  7891    16
     2       |#pragma pack()                                                                                   |  7892    16
     3       |/*                                                                                               |  7893    16
     4       | * Copyright (c) 1989, 1993                                                                      |  7894    16
     5       | *      The Regents of the University of California.  All rights reserved.                       |  7895    16
     6       | * (c) UNIX System Laboratories, Inc.                                                            |  7896    16
     7       | * All or some portions of this file are derived from material licensed                          |  7897    16
     8       | * to the University of California by American Telephone and Telegraph                           |  7898    16
     9       | * Co. or Unix System Laboratories, Inc. and are reproduced herein with                          |  7899    16
    10       | * the permission of UNIX System Laboratories, Inc.                                              |  7900    16
    11       | *                                                                                               |  7901    16
    12       | * Redistribution and use in source and binary forms, with or without                            |  7902    16
    13       | * modification, are permitted provided that the following conditions                            |  7903    16
    14       | * are met:                                                                                      |  7904    16
    15       | * 1. Redistributions of source code must retain the above copyright                             |  7905    16
    16       | *    notice, this list of conditions and the following disclaimer.                              |  7906    16
    17       | * 2. Redistributions in binary form must reproduce the above copyright                          |  7907    16
    18       | *    notice, this list of conditions and the following disclaimer in the                        |  7908    16
    19       | *    documentation and/or other materials provided with the distribution.                       |  7909    16
    20       | * 3. All advertising materials mentioning features or use of this software                      |  7910    16
    21       | *    must display the following acknowledgement:                                                |  7911    16
    22       | *      This product includes software developed by the University of                            |  7912    16
    23       | *      California, Berkeley and its contributors.                                               |  7913    16
    24       | * 4. Neither the name of the University nor the names of its contributors                       |  7914    16
    25       | *    may be used to endorse or promote products derived from this software                      |  7915    16
    26       | *    without specific prior written permission.                                                 |  7916    16
    27       | *                                                                                               |  7917    16
    28       | * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND                       |  7918    16
    29       | * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE                         |  7919    16
    30       | * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE                    |  7920    16
    31       | * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE                      |  7921    16
    32       | * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL                    |  7922    16
    33       | * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS                       |  7923    16
    34       | * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)                         |  7924    16
    35       | * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT                    |  7925    16
    36       | * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY                     |  7926    16
    37       | * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF                        |  7927    16
    38       | * SUCH DAMAGE.                                                                                  |  7928    16
    39       | *                                                                                               |  7929    16
    40       | *      @(#)time.h      8.3 (Berkeley) 1/21/94                                                   |  7930    16
    41       | */                                                                                              |  7931    16
    42       |                                                                                                 |  7932    16
    43       |/*                                                                                               |  7933    16
    44       | */                                                                                              |  7934    16
    45       |                                                                                                 |  7935    16
    46       |#ifndef _TIME_H_                                                                                 |  7936    16
    47       |#define _TIME_H_                                                                                 |  7937    16
    48       |                                                                                                 |  7938    16
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   163


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    49       |#include <sys/cdefs.h>                                                                           |  7939    16
    50       |#include <sys/_null.h>                                                                           |  7940    16
    51       |#include <sys/_types.h>                                                                          |  7941    16
    52       |                                                                                                 |  7942    16
    53       |#if __POSIX_VISIBLE > 0 && __POSIX_VISIBLE < 200112 || __BSD_VISIBLE                             |  7943    16
    54       |/*                                                                                               |  7944    16
    55       | * Frequency of the clock ticks reported by times().  Deprecated - use                           |  7945    16
    56       | * sysconf(_SC_CLK_TCK) instead.  (Removed in 1003.1-2001.)                                      |  7946    16
    57       | *                                                                                               |  7947    16
    58       | */                                                                                              |  7948    16
    59       |#define CLK_TCK         10000                                                                    |  7949    16
    60       |#endif                                                                                           |  7950    16
    61       |                                                                                                 |  7951    16
    62       |/* Frequency of the clock ticks reported by clock().  */                                         |  7952    16
    63       |#define CLOCKS_PER_SEC  128                                                                      |  7953    16
    64       |                                                                                                 |  7954    16
    65       |#ifndef _CLOCK_T_DECLARED                                                                        |  7955    16
    66       |typedef __clock_t       clock_t;                                                                 |  7956    16
    67       |#define _CLOCK_T_DECLARED                                                                        |  7957    16
    68       |#endif                                                                                           |  7958    16
    69       |                                                                                                 |  7959    16
    70       |#ifndef _TIME_T_DECLARED                                                                         |  7960    16
    71       |typedef __time_t        time_t;                                                                  |  7961    16
    72       |#define _TIME_T_DECLARED                                                                         |  7962    16
    73       |#endif                                                                                           |  7963    16
    74       |                                                                                                 |  7964    16
    75       |#ifndef _SIZE_T_DECLARED                                                                         |  7965    16
    76       |typedef __size_t        size_t;                                                                  |  7966    16
    77       |#define _SIZE_T_DECLARED                                                                         |  7967    16
    78       |#endif                                                                                           |  7968    16
    79       |                                                                                                 |  7969    16
    80       |#if __POSIX_VISIBLE >= 199309                                                                    |  7970    16
    81       |/*                                                                                               |  7971    16
    82       | * New in POSIX 1003.1b-1993.                                                                    |  7972    16
    83       | */                                                                                              |  7973    16
    84       |#ifndef _CLOCKID_T_DECLARED                                                                      |  7974    16
    85       |typedef __clockid_t     clockid_t;                                                               |  7975    16
    86       |#define _CLOCKID_T_DECLARED                                                                      |  7976    16
    87       |#endif                                                                                           |  7977    16
    88       |                                                                                                 |  7978    16
    89       |#ifndef _TIMER_T_DECLARED                                                                        |  7979    16
    90       |typedef __timer_t       timer_t;                                                                 |  7980    16
    91       |#define _TIMER_T_DECLARED                                                                        |  7981    16
    92       |#endif                                                                                           |  7982    16
    93       |                                                                                                 |  7983    16
    94       |#include <sys/timespec.h>                                                                        |  7984    16
    95       |#endif /* __POSIX_VISIBLE >= 199309 */                                                           |  7985    16
    96       |                                                                                                 |  7986    16
    97       |/* These macros are also in sys/time.h. */                                                       |  7987    16
    98       |#if !defined(CLOCK_REALTIME) && __POSIX_VISIBLE >= 200112                                        |  7988    16
    99       |#define CLOCK_REALTIME  0                                                                        |  7989    16
   100       |#if 0                                                                                            |  7990    16
   101       |  /* only CLOCK_REALTIME exists in this implementation */                                        |  7991    16
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   164


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   102       |#ifdef __BSD_VISIBLE                                                                             |  7992    16
   103       |#define CLOCK_VIRTUAL   1                                                                        |  7993    16
   104       |#define CLOCK_PROF      2                                                                        |  7994    16
   105       |#endif                                                                                           |  7995    16
   106       |#define CLOCK_MONOTONIC 4                                                                        |  7996    16
   107       |#endif /* 0 */                                                                                   |  7997    16
   108       |#endif /* !defined(CLOCK_REALTIME) && __POSIX_VISIBLE >= 200112 */                               |  7998    16
   109       |                                                                                                 |  7999    16
   110       |#if !defined(TIMER_ABSTIME) && __POSIX_VISIBLE >= 200112                                         |  8000    16
   111       |#if __BSD_VISIBLE                                                                                |  8001    16
   112       |#define TIMER_RELTIME   0x0     /* relative timer */                                             |  8002    16
   113       |#endif                                                                                           |  8003    16
   114       |#define TIMER_ABSTIME   0x1     /* absolute timer */                                             |  8004    16
   115       |#endif /* !defined(TIMER_ABSTIME) && __POSIX_VISIBLE >= 200112 */                                |  8005    16
   116       |                                                                                                 |  8006    16
   117       |struct tm {                                                                                      |  8007    16
   118       |        int     tm_sec;         /* seconds after the minute [0-60] */                            |  8008    16
   119       |        int     tm_min;         /* minutes after the hour [0-59] */                              |  8009    16
   120       |        int     tm_hour;        /* hours since midnight [0-23] */                                |  8010    16
   121       |        int     tm_mday;        /* day of the month [1-31] */                                    |  8011    16
   122       |        int     tm_mon;         /* months since January [0-11] */                                |  8012    16
   123       |        int     tm_year;        /* years since 1900 */                                           |  8013    16
   124       |        int     tm_wday;        /* days since Sunday [0-6] */                                    |  8014    16
   125       |        int     tm_yday;        /* days since January 1 [0-365] */                               |  8015    16
   126       |        int     tm_isdst;       /* Daylight Savings Time flag */                                 |  8016    16
   127       |        long    tm_gmtoff;      /* offset from UTC in seconds */                                 |  8017    16
   128       |        char    *tm_zone;       /* timezone abbreviation */                                      |  8018    16
   129       |};                                                                                               |  8019    16
   130       |                                                                                                 |  8020    16
   131       |#if __POSIX_VISIBLE                                                                              |  8021    16
   132       |extern char *tzname[];                                                                           |  8022    16
   133       |#endif                                                                                           |  8023    16
   134       |                                                                                                 |  8024    16
   135       |__BEGIN_DECLS                                                                                    |  8025    16
   136       |char *asctime(const struct tm *);                                                                |  8026    16
   137       |clock_t clock(void);                                                                             |  8027    16
   138       |char *ctime(const time_t *);                                                                     |  8028    16
   139       |double difftime(time_t, time_t);                                                                 |  8029    16
   140       |/* XXX missing: getdate() */                                                                     |  8030    16
   141       |struct tm *gmtime(const time_t *);                                                               |  8031    16
   142       |#pragma map (localtime, "LC@LTIME")                                                              |  8032    16
   143       |struct tm *localtime(const time_t *);                                                            |  8033    16
   144       |time_t mktime(struct tm *);                                                                      |  8034    16
   145       |size_t strftime(char * __restrict, size_t, const char * __restrict,                              |  8035    16
   146       |    const struct tm * __restrict);                                                               |  8036    16
   147       |time_t time(time_t *);                                                                           |  8037    16
   148       |                                                                                                 |  8038    16
   149       |#if __POSIX_VISIBLE                                                                              |  8039    16
   150       |void tzset(void);                                                                                |  8040    16
   151       |#endif                                                                                           |  8041    16
   152       |                                                                                                 |  8042    16
   153       |#if __POSIX_VISIBLE >= 199309                                                                    |  8043    16
   154       |#pragma map(clock_getres, "@@CLKRES")                                                            |  8044    16
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   165


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   155       |int clock_getres(clockid_t, struct timespec *);                                                  |  8045    16
   156       |#pragma map(clock_gettime, "@@CLKGET")                                                           |  8046    16
   157       |int clock_gettime(clockid_t, struct timespec *);                                                 |  8047    16
   158       |#pragma map(clock_settime, "@@CLKSET")                                                           |  8048    16
   159       |int clock_settime(clockid_t, const struct timespec *);                                           |  8049    16
   160       |#pragma map(nanosleep,"@@NNOSLP")                                                                |  8050    16
   161       |int nanosleep(const struct timespec *, struct timespec *);                                       |  8051    16
   162       |#endif /* __POSIX_VISIBLE >= 199309 */                                                           |  8052    16
   163       |                                                                                                 |  8053    16
   164       |#if __POSIX_VISIBLE >= 199506                                                                    |  8054    16
   165       |#pragma map(asctime_r, "@@ASCT@R")                                                               |  8055    16
   166       |char *asctime_r(const struct tm *, char *);                                                      |  8056    16
   167       |#pragma map(ctime_r, "@@CTME@R")                                                                 |  8057    16
   168       |char *ctime_r(const time_t *, char *);                                                           |  8058    16
   169       |#pragma map(gmtime_r, "@@GMTM@R")                                                                |  8059    16
   170       |struct tm *gmtime_r(const time_t *, struct tm *);                                                |  8060    16
   171       |#pragma map(localtime_r, "@@LCLT@R")                                                             |  8061    16
   172       |struct tm *localtime_r(const time_t *, struct tm *);                                             |  8062    16
   173       |#endif                                                                                           |  8063    16
   174       |                                                                                                 |  8064    16
   175       |#if __XSI_VISIBLE                                                                                |  8065    16
   176       |char *strptime(const char * __restrict, const char * __restrict,                                 |  8066    16
   177       |    struct tm * __restrict);                                                                     |  8067    16
   178       |#endif                                                                                           |  8068    16
   179       |                                                                                                 |  8069    16
   180       |#if __BSD_VISIBLE                                                                                |  8070    16
   181       |char *timezone(int, int);       /* XXX XSI conflict */                                           |  8071    16
   182       |void tzsetwall(void);                                                                            |  8072    16
   183       |#pragma map (timelocal, "TIMELC@L")                                                              |  8073    16
   184       |time_t timelocal(struct tm * const);                                                             |  8074    16
   185       |time_t timegm(struct tm * const);                                                                |  8075    16
   186       |#endif /* __BSD_VISIBLE */                                                                       |  8076    16
   187       |__END_DECLS                                                                                      |  8077    16
   188       |                                                                                                 |  8078    16
   189       |#endif /* !_TIME_H_ */                                                                           |  8079    16
   190       |#pragma pack(reset)                                                                              |  8080    16
    94       |                                                                                                 |  8081    18
    95       |/* Platform specific includes */                                                                 |  8082    18
    96       |#if defined(_TTHREAD_POSIX_)                                                                     |  8083    18
    97       |  #ifndef _GNU_SOURCE                                                                            |  8084    18
    98       |   #define _GNU_SOURCE  /* for pthread_setname_np() */                                           |  8085    18
    99       |  #endif                                                                                         |  8086    18
   100       |  #include <pthread.h>                                                                           |  8087    18
     1       |/*                                                                                               |  8088    20
     2       | * Copyright (c) 1993, 1994 by Chris Provenzano, proven@mit.edu                                  |  8089    20
     3       | * Copyright (c) 1995-1998 by John Birrell <jb@cimlogic.com.au>                                  |  8090    20
     4       | * All rights reserved.                                                                          |  8091    20
     5       | *                                                                                               |  8092    20
     6       | * Redistribution and use in source and binary forms, with or without                            |  8093    20
     7       | * modification, are permitted provided that the following conditions                            |  8094    20
     8       | * are met:                                                                                      |  8095    20
     9       | * 1. Redistributions of source code must retain the above copyright                             |  8096    20
    10       | *    notice, this list of conditions and the following disclaimer.                              |  8097    20
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   166


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    11       | * 2. Redistributions in binary form must reproduce the above copyright                          |  8098    20
    12       | *    notice, this list of conditions and the following disclaimer in the                        |  8099    20
    13       | *    documentation and/or other materials provided with the distribution.                       |  8100    20
    14       | * 3. All advertising materials mentioning features or use of this software                      |  8101    20
    15       | *    must display the following acknowledgement:                                                |  8102    20
    16       | *  This product includes software developed by Chris Provenzano.                                |  8103    20
    17       | * 4. The name of Chris Provenzano may not be used to endorse or promote                         |  8104    20
    18       | *        products derived from this software without specific prior written                     |  8105    20
    19       | *        permission.                                                                            |  8106    20
    20       | *                                                                                               |  8107    20
    21       | * THIS SOFTWARE IS PROVIDED BY CHRIS PROVENZANO ``AS IS'' AND                                   |  8108    20
    22       | * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE                         |  8109    20
    23       | * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE                    |  8110    20
    24       | * ARE DISCLAIMED.  IN NO EVENT SHALL CHRIS PROVENZANO BE LIABLE FOR ANY                         |  8111    20
    25       | * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES                    |  8112    20
    26       | * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR                            |  8113    20
    27       | * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER                    |  8114    20
    28       | * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT                            |  8115    20
    29       | * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY                     |  8116    20
    30       | * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF                        |  8117    20
    31       | * SUCH DAMAGE.                                                                                  |  8118    20
    32       | *                                                                                               |  8119    20
    33       | * $FreeBSD: src/include/pthread.h,v 1.36.2.1 2005/12/15 06:50:39 davidxu Exp $                  |  8120    20
    34       | */                                                                                              |  8121    20
    35       |#ifndef _PTHREAD_H_                                                                              |  8122    20
    36       |#define _PTHREAD_H_                                                                              |  8123    20
    37       |                                                                                                 |  8124    20
    38       |/*                                                                                               |  8125    20
    39       | * Header files.                                                                                 |  8126    20
    40       | */                                                                                              |  8127    20
    41       |#include <sys/cdefs.h>                                                                           |  8128    20
     1       |/* release 2.25.00 */                                                                            |  8129     4
     2       |#pragma pack()                                                                                   |  8130     4
     3       |/*                                                                                               |  8131     4
     4       | * Copyright (c) 1991, 1993                                                                      |  8132     4
     5       | *      The Regents of the University of California.  All rights reserved.                       |  8133     4
     6       | *                                                                                               |  8134     4
     7       | * This code is derived from software contributed to Berkeley by                                 |  8135     4
     8       | * Berkeley Software Design, Inc.                                                                |  8136     4
     9       | *                                                                                               |  8137     4
    10       | * Redistribution and use in source and binary forms, with or without                            |  8138     4
    11       | * modification, are permitted provided that the following conditions                            |  8139     4
    12       | * are met:                                                                                      |  8140     4
    13       | * 1. Redistributions of source code must retain the above copyright                             |  8141     4
    14       | *    notice, this list of conditions and the following disclaimer.                              |  8142     4
    15       | * 2. Redistributions in binary form must reproduce the above copyright                          |  8143     4
    16       | *    notice, this list of conditions and the following disclaimer in the                        |  8144     4
    17       | *    documentation and/or other materials provided with the distribution.                       |  8145     4
    18       | * 3. All advertising materials mentioning features or use of this software                      |  8146     4
    19       | *    must display the following acknowledgement:                                                |  8147     4
    20       | *      This product includes software developed by the University of                            |  8148     4
    21       | *      California, Berkeley and its contributors.                                               |  8149     4
    22       | * 4. Neither the name of the University nor the names of its contributors                       |  8150     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   167


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    23       | *    may be used to endorse or promote products derived from this software                      |  8151     4
    24       | *    without specific prior written permission.                                                 |  8152     4
    25       | *                                                                                               |  8153     4
    26       | * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND                       |  8154     4
    27       | * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE                         |  8155     4
    28       | * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE                    |  8156     4
    29       | * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE                      |  8157     4
    30       | * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL                    |  8158     4
    31       | * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS                       |  8159     4
    32       | * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)                         |  8160     4
    33       | * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT                    |  8161     4
    34       | * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY                     |  8162     4
    35       | * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF                        |  8163     4
    36       | * SUCH DAMAGE.                                                                                  |  8164     4
    37       | *                                                                                               |  8165     4
    38       | *      @(#)cdefs.h     8.8 (Berkeley) 1/9/95                                                    |  8166     4
    39       | */                                                                                              |  8167     4
    40       |                                                                                                 |  8168     4
    41       |#ifndef _SYS_CDEFS_H_                                                                            |  8169     4
    42       |#define _SYS_CDEFS_H_                                                                            |  8170     4
    43       |                                                                                                 |  8171     4
    44       |#if defined(__cplusplus)                                                                         |  8172     4
    45       |#define __BEGIN_DECLS   extern "C" {                                                             |  8173     4
    46       |#define __END_DECLS     }                                                                        |  8174     4
    47       |#else                                                                                            |  8175     4
    48       |#define __BEGIN_DECLS                                                                            |  8176     4
    49       |#define __END_DECLS                                                                              |  8177     4
    50       |#endif                                                                                           |  8178     4
    51       |                                                                                                 |  8179     4
    52       |/*                                                                                               |  8180     4
    53       | * This code has been put in place to help reduce the addition of                                |  8181     4
    54       | * compiler specific defines in the code.  It helps to aid in                                    |  8182     4
    55       | * having a compiler-agnostic source tree.                                                       |  8183     4
    56       | */                                                                                              |  8184     4
    57       |#define __CC_SUPPORTS_INLINE 1                                                                   |  8185     4
    58       |#define __CC_SUPPORTS___INLINE 1                                                                 |  8186     4
    59       |#define __CC_SUPPORTS___INLINE__ 1                                                               |  8187     4
    60       |                                                                                                 |  8188     4
    61       |#define __CC_SUPPORTS___FUNC__ 1                                                                 |  8189     4
    62       |                                                                                                 |  8190     4
    63       |                                                                                                 |  8191     4
    64       |/*                                                                                               |  8192     4
    65       | * The __CONCAT macro is used to concatenate parts of symbol names, e.g.                         |  8193     4
    66       | * with "#define OLD(foo) __CONCAT(old,foo)", OLD(foo) produces oldfoo.                          |  8194     4
    67       | * The __CONCAT macro is a bit tricky to use if it must work in non-ANSI                         |  8195     4
    68       | * mode -- there must be no spaces between its arguments, and for nested                         |  8196     4
    69       | * __CONCAT's, all the __CONCAT's must be at the left.  __CONCAT can also                        |  8197     4
    70       | * concatenate double-quoted strings produced by the __STRING macro, but                         |  8198     4
    71       | * this only works with ANSI C.                                                                  |  8199     4
    72       | *                                                                                               |  8200     4
    73       | * __XSTRING is like __STRING, but it expands any macros in its argument                         |  8201     4
    74       | * first.  It is only available with ANSI C.                                                     |  8202     4
    75       | */                                                                                              |  8203     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   168


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    76       |#if defined(__STDC__) || defined(__cplusplus)                                                    |  8204     4
    77       |#define __P(protos)     protos          /* full-blown ANSI C */                                  |  8205     4
    78       |#define __CONCAT1(x,y)  x ## y                                                                   |  8206     4
    79       |#define __CONCAT(x,y)   __CONCAT1(x,y)                                                           |  8207     4
    80       |#define __STRING(x)     #x              /* stringify without expanding x */                      |  8208     4
    81       |#define __XSTRING(x)    __STRING(x)     /* expand x, then stringify */                           |  8209     4
    82       |                                                                                                 |  8210     4
    83       |#define __const         const           /* define reserved names to standard */                  |  8211     4
    84       |#define __signed        signed                                                                   |  8212     4
    85       |#define __volatile      volatile                                                                 |  8213     4
    86       |#if defined(__cplusplus)                                                                         |  8214     4
    87       |#define __inline        inline          /* convert to C++ keyword */                             |  8215     4
    88       |#else                                                                                            |  8216     4
    89       |#define __inline        __inline__      /* Use the Systems/C keyword */                          |  8217     4
    90       |#endif /* !__cplusplus */                                                                        |  8218     4
    91       |                                                                                                 |  8219     4
    92       |#else   /* !(__STDC__ || __cplusplus) */                                                         |  8220     4
    93       |#define __P(protos)     ()              /* traditional C preprocessor */                         |  8221     4
    94       |#define __CONCAT(x,y)   x/**/y                                                                   |  8222     4
    95       |#define __STRING(x)     "x"                                                                      |  8223     4
    96       |                                                                                                 |  8224     4
    97       |#define __const                         /* delete pseudo-ANSI C keywords */                      |  8225     4
    98       |#define __inline                                                                                 |  8226     4
    99       |#define __signed                                                                                 |  8227     4
   100       |#define __volatile                                                                               |  8228     4
   101       |/*                                                                                               |  8229     4
   102       | * In non-ANSI C environments, new programs will want ANSI-only C keywords                       |  8230     4
   103       | * deleted from the program and old programs will want them left alone.                          |  8231     4
   104       | * When using a compiler other than Dignus, programs using the ANSI C keywords                   |  8232     4
   105       | * const, inline etc. as normal identifiers should define -DNO_ANSI_KEYWORDS.                    |  8233     4
   106       | */                                                                                              |  8234     4
   107       |#ifndef NO_ANSI_KEYWORDS                                                                         |  8235     4
   108       |#define const                           /* delete ANSI C keywords */                             |  8236     4
   109       |#define inline                                                                                   |  8237     4
   110       |#define signed                                                                                   |  8238     4
   111       |#define volatile                                                                                 |  8239     4
   112       |#endif  /* !NO_ANSI_KEYWORDS */                                                                  |  8240     4
   113       |#endif  /* !(__STDC__ || __cplusplus) */                                                         |  8241     4
   114       |                                                                                                 |  8242     4
   115       |/*                                                                                               |  8243     4
   116       | * Compiler-dependent macros to help declare dead (non-returning) and                            |  8244     4
   117       | * pure (no side effects) functions, and unused variables.                                       |  8245     4
   118       | */                                                                                              |  8246     4
   119       |#define __dead2 __attribute__((__noreturn__))                                                    |  8247     4
   120       |#define __pure  __attribute__((__pure__))                                                        |  8248     4
   121       |#define __pure2 __attribute__((__const__))                                                       |  8249     4
   122       |#define __unused                                                                                 |  8250     4
   123       |#define __aligned(x)                                                                             |  8251     4
   124       |#define __section(x)                                                                             |  8252     4
   125       |#define __nonnull(x)                                                                             |  8253     4
   126       |#define __used                                                                                   |  8254     4
   127       |                                                                                                 |  8255     4
   128       |#define __always_inline __attribute__((__always_inline__))                                       |  8256     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   169


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   129       |#define __noinline      __attribute__((__noinline__))                                            |  8257     4
   130       |                                                                                                 |  8258     4
   131       |#if __STDC_VERSION__ < 199901                                                                    |  8259     4
   132       |#define __func__  NULL                                                                           |  8260     4
   133       |#endif                                                                                           |  8261     4
   134       |                                                                                                 |  8262     4
   135       |#if !defined(__STRICT_ANSI__) || __STDC_VERSION__ >= 199901                                      |  8263     4
   136       |#define __LONG_LONG_SUPPORTED                                                                    |  8264     4
   137       |#endif                                                                                           |  8265     4
   138       |                                                                                                 |  8266     4
   139       |/* Systems/C recognizes they keyword __restrict__ in both                                        |  8267     4
   140       | * ANSI and non-ANSI mode to indicate C99 restrict semantics.                                    |  8268     4
   141       | **/                                                                                             |  8269     4
   142       |#ifndef __cplusplus                                                                              |  8270     4
   143       |#define __restrict __restrict__                                                                  |  8271     4
   144       |#else                                                                                            |  8272     4
   145       |/* Systems/C++ does not */                                                                       |  8273     4
   146       |#define __restrict                                                                               |  8274     4
   147       |#endif                                                                                           |  8275     4
   148       |                                                                                                 |  8276     4
   149       |/*                                                                                               |  8277     4
   150       | * define-away GCC-specific branch-prediction markers                                            |  8278     4
   151       | */                                                                                              |  8279     4
   152       |#define __predict_true(exp)     (exp)                                                            |  8280     4
   153       |#define __predict_false(exp)    (exp)                                                            |  8281     4
   154       |                                                                                                 |  8282     4
   155       |                                                                                                 |  8283     4
   156       |/*                                                                                               |  8284     4
   157       | * provide a definition of __offsetof(), <stddef.h> and                                          |  8285     4
   158       | * <sys/types.h> reference __offsetof().                                                         |  8286     4
   159       | *                                                                                               |  8287     4
   160       | * For Systems/C, the C compiler recognizes __offsetof(),                                        |  8288     4
   161       | * but we need a definition for versions of C++ prior to 1.85.52.                                |  8289     4
   162       | */                                                                                              |  8290     4
   163       |#if defined(__cplusplus) && (__SYSC_VER__ < (18600))                                             |  8291     4
   164       |#undef __offsetof                                                                                |  8292     4
   165       |#define __offsetof(type, field)  ((size_t)(&((type *)0)->field))                                 |  8293     4
   166       |#endif                                                                                           |  8294     4
   167       |                                                                                                 |  8295     4
   168       |/*                                                                                               |  8296     4
   169       | * Compiler-dependent macros to declare that functions take printf-like                          |  8297     4
   170       | * or scanf-like arguments.                                                                      |  8298     4
   171       | */                                                                                              |  8299     4
   172       |#define __printflike(fmtarg, firstvararg)                                                        |  8300     4
   173       |#define __scanflike(fmtarg, firstvararg)                                                         |  8301     4
   174       |#define __format_arg(fmtarg)                                                                     |  8302     4
   175       |#define __printf0like(fmtarg, firstvararg)                                                       |  8303     4
   176       |                                                                                                 |  8304     4
   177       |/* Compiler-dependent macros that rely on specific extensions. */                                |  8305     4
   178       |#define __printf0like(fmtarg, firstvararg)                                                       |  8306     4
   179       |                                                                                                 |  8307     4
   180       |  /* intended to generate a weak reference as an alias */                                        |  8308     4
   181       |#define __weak_reference(sym,alias)                                                              |  8309     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   170


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   182       |  /* If this symbol is refrenced, cause the linker to emit "msg" */                              |  8310     4
   183       |#define __warn_references(sym,msg)                                                               |  8311     4
   184       |                                                                                                 |  8312     4
   185       | /* This places the string into the resulting object.  It should */                              |  8313     4
   186       | /* probably become #pragma ident */                                                             |  8314     4
   187       |#define __IDSTRING(name,string) static const char name[] __unused = string                       |  8315     4
   188       |                                                                                                 |  8316     4
   189       |#ifndef __RCSID                                                                                  |  8317     4
   190       |#define __RCSID(s)      __IDSTRING(rcsid,s)                                                      |  8318     4
   191       |#endif                                                                                           |  8319     4
   192       |                                                                                                 |  8320     4
   193       |/*                                                                                               |  8321     4
   194       | * Embed the rcs id of a source file in the resulting library.                                   |  8322     4
   195       | * Usage:                                                                                        |  8323     4
   196       | *      __SYSCID("Id: src/sys/sys/cdefs.h,v 1.28.2.8 2002/09/18                                  |  8324     4
   197       |*                                            04:05:13 mikeh Exp $");                             |  8325     4
   198       | */                                                                                              |  8326     4
   199       |#ifndef __SYSCID                                                                                 |  8327     4
   200       |#if !defined(lint) && !defined(STRIP_SYSCID)                                                     |  8328     4
   201       |#define __SYSCID(s)     __IDSTRING(__CONCAT(__rcsid_,__LINE__),s)                                |  8329     4
   202       |#else                                                                                            |  8330     4
   203       |#define __SYSCID(s)     struct __hack                                                            |  8331     4
   204       |#endif                                                                                           |  8332     4
   205       |#endif                                                                                           |  8333     4
   206       |                                                                                                 |  8334     4
   207       |#ifndef __RCSID_SOURCE                                                                           |  8335     4
   208       |#define __RCSID_SOURCE(s) __IDSTRING(rcsid_source,s)                                             |  8336     4
   209       |#endif                                                                                           |  8337     4
   210       |                                                                                                 |  8338     4
   211       |#ifndef __COPYRIGHT                                                                              |  8339     4
   212       |#define __COPYRIGHT(s)  __IDSTRING(copyright,s)                                                  |  8340     4
   213       |#endif                                                                                           |  8341     4
   214       |                                                                                                 |  8342     4
   215       |                                                                                                 |  8343     4
   216       |#ifndef __DECONST                                                                                |  8344     4
   217       |#define __DECONST(type, var)    ((type)(uintptr_t)(const void *)(var))                           |  8345     4
   218       |#endif                                                                                           |  8346     4
   219       |                                                                                                 |  8347     4
   220       |#ifndef __DEVOLATILE                                                                             |  8348     4
   221       |#define __DEVOLATILE(type, var) ((type)(uintptr_t)(volatile void *)(var))                        |  8349     4
   222       |#endif                                                                                           |  8350     4
   223       |                                                                                                 |  8351     4
   224       |#ifndef __DEQUALIFY                                                                              |  8352     4
   225       |#define __DEQUALIFY(type, var)  ((type)(uintptr_t)(const volatile void *)(var))                  |  8353     4
   226       |#endif                                                                                           |  8354     4
   227       |                                                                                                 |  8355     4
   228       |                                                                                                 |  8356     4
   229       |/*-                                                                                              |  8357     4
   230       | * The following definitions are an extension of the behavior originally                         |  8358     4
   231       | * implemented in <sys/_posix.h>, but with a different level of granularity.                     |  8359     4
   232       | * POSIX.1 requires that the macros we test be defined before any standard                       |  8360     4
   233       | * header file is included.                                                                      |  8361     4
   234       | *                                                                                               |  8362     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   171


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   235       | * Here's a quick run-down of the versions:                                                      |  8363     4
   236       | *  defined(_POSIX_SOURCE)              1003.1-1988                                              |  8364     4
   237       | *  _POSIX_C_SOURCE == 1                1003.1-1990                                              |  8365     4
   238       | *  _POSIX_C_SOURCE == 2                1003.2-1992 C Language Binding Option                    |  8366     4
   239       | *  _POSIX_C_SOURCE == 199309           1003.1b-1993                                             |  8367     4
   240       | *  _POSIX_C_SOURCE == 199506           1003.1c-1995, 1003.1i-1995,                              |  8368     4
   241       | *                                      and the omnibus ISO/IEC 9945-1: 1996                     |  8369     4
   242       | *  _POSIX_C_SOURCE == 200112           1003.1-2001                                              |  8370     4
   243       | *  _POSIX_C_SOURCE == 200809           1003.1-2008                                              |  8371     4
   244       | *                                                                                               |  8372     4
   245       | * In addition, the X/Open Portability Guide, which is now the Single UNIX                       |  8373     4
   246       | * Specification, defines a feature-test macro which indicates the version of                    |  8374     4
   247       | * that specification, and which subsumes _POSIX_C_SOURCE.                                       |  8375     4
   248       | *                                                                                               |  8376     4
   249       | * Our macros begin with two underscores to avoid namespace screwage.                            |  8377     4
   250       | */                                                                                              |  8378     4
   251       |                                                                                                 |  8379     4
   252       |/*                                                                                               |  8380     4
   253       | * If no special macro was specified, make the DragonFly extensions                              |  8381     4
   254       | * available. Also make them available when requested so.                                        |  8382     4
   255       | */                                                                                              |  8383     4
   256       |#if (!defined(_POSIX_C_SOURCE) && !defined(_XOPEN_SOURCE) && \                                   |  8384     4
   257       |    !defined(_ANSI_SOURCE) && !defined(_C99_SOURCE)) || \                                        |  8385     4
   258       |    defined(_DRAGONFLY_SOURCE) || defined(_NETBSD_SOURCE)                                        |  8386     4
   259       |#define __DF_VISIBLE    1                                                                        |  8387     4
   260       |#else                                                                                            |  8388     4
   261       |#define __DF_VISIBLE    0                                                                        |  8389     4
   262       |#endif                                                                                           |  8390     4
   263       |                                                                                                 |  8391     4
   264       |/*-                                                                                              |  8392     4
   265       | * The following definitions are an extension of the behavior originally                         |  8393     4
   266       | * implemented in <sys/_posix.h>, but with a different level of granularity.                     |  8394     4
   267       | * POSIX.1 requires that the macros we test be defined before any standard                       |  8395     4
   268       | * header file is included.                                                                      |  8396     4
   269       | *                                                                                               |  8397     4
   270       | * Here's a quick run-down of the versions:                                                      |  8398     4
   271       | *  defined(_POSIX_SOURCE)              1003.1-1988                                              |  8399     4
   272       | *  _POSIX_C_SOURCE == 1                1003.1-1990                                              |  8400     4
   273       | *  _POSIX_C_SOURCE == 2                1003.2-1992 C Language Binding Option                    |  8401     4
   274       | *  _POSIX_C_SOURCE == 199309           1003.1b-1993                                             |  8402     4
   275       | *  _POSIX_C_SOURCE == 199506           1003.1c-1995, 1003.1i-1995,                              |  8403     4
   276       | *                                      and the omnibus ISO/IEC 9945-1: 1996                     |  8404     4
   277       | *  _POSIX_C_SOURCE == 200112           1003.1-2001                                              |  8405     4
   278       | *  _POSIX_C_SOURCE == 200809           1003.1-2008                                              |  8406     4
   279       | *                                                                                               |  8407     4
   280       | * In addition, the X/Open Portability Guide, which is now the Single UNIX                       |  8408     4
   281       | * Specification, defines a feature-test macro which indicates the version of                    |  8409     4
   282       | * that specification, and which subsumes _POSIX_C_SOURCE.                                       |  8410     4
   283       | *                                                                                               |  8411     4
   284       | * Our macros begin with two underscores to avoid namespace screwage.                            |  8412     4
   285       | */                                                                                              |  8413     4
   286       |                                                                                                 |  8414     4
   287       |/* Deal with IEEE Std. 1003.1-1990, in which _POSIX_C_SOURCE == 1. */                            |  8415     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   172


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   288       |#if defined(_POSIX_C_SOURCE) && _POSIX_C_SOURCE == 1                                             |  8416     4
   289       |#undef _POSIX_C_SOURCE          /* Probably illegal, but beyond caring now. */                   |  8417     4
   290       |#define _POSIX_C_SOURCE         199009                                                           |  8418     4
   291       |#endif                                                                                           |  8419     4
   292       |                                                                                                 |  8420     4
   293       |/* Deal with IEEE Std. 1003.2-1992, in which _POSIX_C_SOURCE == 2. */                            |  8421     4
   294       |#if defined(_POSIX_C_SOURCE) && _POSIX_C_SOURCE == 2                                             |  8422     4
   295       |#undef _POSIX_C_SOURCE                                                                           |  8423     4
   296       |#define _POSIX_C_SOURCE         199209                                                           |  8424     4
   297       |#endif                                                                                           |  8425     4
   298       |                                                                                                 |  8426     4
   299       |/* Deal with various X/Open Portability Guides and Single UNIX Spec. */                          |  8427     4
   300       |#ifdef _XOPEN_SOURCE                                                                             |  8428     4
   301       |#if _XOPEN_SOURCE - 0 >= 700                                                                     |  8429     4
   302       |#define __XSI_VISIBLE           700                                                              |  8430     4
   303       |#undef _POSIX_C_SOURCE                                                                           |  8431     4
   304       |#define _POSIX_C_SOURCE         200809                                                           |  8432     4
   305       |#elif _XOPEN_SOURCE - 0 >= 600                                                                   |  8433     4
   306       |#define __XSI_VISIBLE           600                                                              |  8434     4
   307       |#undef _POSIX_C_SOURCE                                                                           |  8435     4
   308       |#define _POSIX_C_SOURCE         200112                                                           |  8436     4
   309       |#elif _XOPEN_SOURCE - 0 >= 500                                                                   |  8437     4
   310       |#define __XSI_VISIBLE           500                                                              |  8438     4
   311       |#undef _POSIX_C_SOURCE                                                                           |  8439     4
   312       |#define _POSIX_C_SOURCE         199506                                                           |  8440     4
   313       |#endif                                                                                           |  8441     4
   314       |#endif                                                                                           |  8442     4
   315       |                                                                                                 |  8443     4
   316       |/*                                                                                               |  8444     4
   317       | * Deal with all versions of POSIX.  The ordering relative to the tests above is                 |  8445     4
   318       | * important.                                                                                    |  8446     4
   319       | */                                                                                              |  8447     4
   320       |#if defined(_POSIX_SOURCE) && !defined(_POSIX_C_SOURCE)                                          |  8448     4
   321       |#define _POSIX_C_SOURCE         198808                                                           |  8449     4
   322       |#endif                                                                                           |  8450     4
   323       |#ifdef _POSIX_C_SOURCE                                                                           |  8451     4
   324       |#if _POSIX_C_SOURCE >= 200809                                                                    |  8452     4
   325       |#define __POSIX_VISIBLE         200809                                                           |  8453     4
   326       |#define __ISO_C_VISIBLE         1999                                                             |  8454     4
   327       |#elif _POSIX_C_SOURCE >= 200112                                                                  |  8455     4
   328       |#define __POSIX_VISIBLE         200112                                                           |  8456     4
   329       |#define __ISO_C_VISIBLE         1999                                                             |  8457     4
   330       |#elif _POSIX_C_SOURCE >= 199506                                                                  |  8458     4
   331       |#define __POSIX_VISIBLE         199506                                                           |  8459     4
   332       |#define __ISO_C_VISIBLE         1990                                                             |  8460     4
   333       |#elif _POSIX_C_SOURCE >= 199309                                                                  |  8461     4
   334       |#define __POSIX_VISIBLE         199309                                                           |  8462     4
   335       |#define __ISO_C_VISIBLE         1990                                                             |  8463     4
   336       |#elif _POSIX_C_SOURCE >= 199209                                                                  |  8464     4
   337       |#define __POSIX_VISIBLE         199209                                                           |  8465     4
   338       |#define __ISO_C_VISIBLE         1990                                                             |  8466     4
   339       |#elif _POSIX_C_SOURCE >= 199009                                                                  |  8467     4
   340       |#define __POSIX_VISIBLE         199009                                                           |  8468     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   173


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   341       |#define __ISO_C_VISIBLE         1990                                                             |  8469     4
   342       |#else                                                                                            |  8470     4
   343       |#define __POSIX_VISIBLE         198808                                                           |  8471     4
   344       |#define __ISO_C_VISIBLE         0                                                                |  8472     4
   345       |#endif /* _POSIX_C_SOURCE */                                                                     |  8473     4
   346       |#else                                                                                            |  8474     4
   347       |/*-                                                                                              |  8475     4
   348       | * Deal with _ANSI_SOURCE:                                                                       |  8476     4
   349       | * If it is defined, and no other compilation environment is explicitly                          |  8477     4
   350       | * requested, then define our internal feature-test macros to zero.  This                        |  8478     4
   351       | * makes no difference to the preprocessor (undefined symbols in preprocessing                   |  8479     4
   352       | * expressions are defined to have value zero), but makes it more convenient for                 |  8480     4
   353       | * a test program to print out the values.                                                       |  8481     4
   354       | *                                                                                               |  8482     4
   355       | * If a program mistakenly defines _ANSI_SOURCE and some other macro such as                     |  8483     4
   356       | * _POSIX_C_SOURCE, we will assume that it wants the broader compilation                         |  8484     4
   357       | * environment (and in fact we will never get here).                                             |  8485     4
   358       | */                                                                                              |  8486     4
   359       |#if defined(_ANSI_SOURCE)       /* Hide almost everything. */                                    |  8487     4
   360       |#define __POSIX_VISIBLE         0                                                                |  8488     4
   361       |#define __XSI_VISIBLE           0                                                                |  8489     4
   362       |#define __BSD_VISIBLE           0                                                                |  8490     4
   363       |#define __ISO_C_VISIBLE         1990                                                             |  8491     4
   364       |#define __EXT1_VISIBLE          0                                                                |  8492     4
   365       |#elif defined(_C99_SOURCE)      /* Localism to specify strict C99 env. */                        |  8493     4
   366       |#define __POSIX_VISIBLE         0                                                                |  8494     4
   367       |#define __XSI_VISIBLE           0                                                                |  8495     4
   368       |#define __BSD_VISIBLE           0                                                                |  8496     4
   369       |#define __ISO_C_VISIBLE         1999                                                             |  8497     4
   370       |#define __EXT1_VISIBLE          0                                                                |  8498     4
   371       |#elif defined(_C11_SOURCE)      /* Localism to specify strict C11 env. */                        |  8499     4
   372       |#define __POSIX_VISIBLE         0                                                                |  8500     4
   373       |#define __XSI_VISIBLE           0                                                                |  8501     4
   374       |#define __BSD_VISIBLE           0                                                                |  8502     4
   375       |#define __ISO_C_VISIBLE         2011                                                             |  8503     4
   376       |#define __EXT1_VISIBLE          0                                                                |  8504     4
   377       |#else                           /* Default environment: show everything. */                      |  8505     4
   378       |#define __POSIX_VISIBLE         200809                                                           |  8506     4
   379       |#define __XSI_VISIBLE           700                                                              |  8507     4
   380       |#define __BSD_VISIBLE           1                                                                |  8508     4
   381       |#define __ISO_C_VISIBLE         2011                                                             |  8509     4
   382       |#define __EXT1_VISIBLE          1                                                                |  8510     4
   383       |#endif                                                                                           |  8511     4
   384       |#endif                                                                                           |  8512     4
   385       |                                                                                                 |  8513     4
   386       |/* User override __EXT1_VISIBLE */                                                               |  8514     4
   387       |#if defined(__STDC_WANT_LIB_EXT1__)                                                              |  8515     4
   388       |#undef  __EXT1_VISIBLE                                                                           |  8516     4
   389       |#if __STDC_WANT_LIB_EXT1__                                                                       |  8517     4
   390       |#define __EXT1_VISIBLE          1                                                                |  8518     4
   391       |#else                                                                                            |  8519     4
   392       |#define __EXT1_VISIBLE          0                                                                |  8520     4
   393       |#endif                                                                                           |  8521     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   174


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   394       |#endif /* __STDC_WANT_LIB_EXT1__ */                                                              |  8522     4
   395       |                                                                                                 |  8523     4
   396       |#if defined(__370__) || defined(__mips) || defined(__powerpc64__)                                |  8524     4
   397       |#define __NO_TLS 1                                                                               |  8525     4
   398       |#endif                                                                                           |  8526     4
   399       |                                                                                                 |  8527     4
   400       |                                                                                                 |  8528     4
   401       |/* easier than stripping __FBSDID() from sources - Greg 2008/07/28 */                            |  8529     4
   402       |#define __FBSDID(x)                                                                              |  8530     4
   403       |                                                                                                 |  8531     4
   404       |#endif /* !_SYS_CDEFS_H_ */                                                                      |  8532     4
   405       |#pragma pack(reset)                                                                              |  8533     4
    42       |#include <sys/types.h>                                                                           |  8534    20
     1       |/* release 2.25.00 */                                                                            |  8535     3
     2       |#pragma pack()                                                                                   |  8536     3
     3       |/*-                                                                                              |  8537     3
     4       | * Copyright (c) 1982, 1986, 1991, 1993, 1994                                                    |  8538     3
     5       | *      The Regents of the University of California.  All rights reserved.                       |  8539     3
     6       | * (c) UNIX System Laboratories, Inc.                                                            |  8540     3
     7       | * All or some portions of this file are derived from material licensed                          |  8541     3
     8       | * to the University of California by American Telephone and Telegraph                           |  8542     3
     9       | * Co. or Unix System Laboratories, Inc. and are reproduced herein with                          |  8543     3
    10       | * the permission of UNIX System Laboratories, Inc.                                              |  8544     3
    11       | *                                                                                               |  8545     3
    12       | * Redistribution and use in source and binary forms, with or without                            |  8546     3
    13       | * modification, are permitted provided that the following conditions                            |  8547     3
    14       | * are met:                                                                                      |  8548     3
    15       | * 1. Redistributions of source code must retain the above copyright                             |  8549     3
    16       | *    notice, this list of conditions and the following disclaimer.                              |  8550     3
    17       | * 2. Redistributions in binary form must reproduce the above copyright                          |  8551     3
    18       | *    notice, this list of conditions and the following disclaimer in the                        |  8552     3
    19       | *    documentation and/or other materials provided with the distribution.                       |  8553     3
    20       | * 4. Neither the name of the University nor the names of its contributors                       |  8554     3
    21       | *    may be used to endorse or promote products derived from this software                      |  8555     3
    22       | *    without specific prior written permission.                                                 |  8556     3
    23       | *                                                                                               |  8557     3
    24       | * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND                       |  8558     3
    25       | * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE                         |  8559     3
    26       | * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE                    |  8560     3
    27       | * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE                      |  8561     3
    28       | * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL                    |  8562     3
    29       | * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS                       |  8563     3
    30       | * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)                         |  8564     3
    31       | * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT                    |  8565     3
    32       | * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY                     |  8566     3
    33       | * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF                        |  8567     3
    34       | * SUCH DAMAGE.                                                                                  |  8568     3
    35       | *                                                                                               |  8569     3
    36       | *      @(#)types.h     8.6 (Berkeley) 2/19/95                                                   |  8570     3
    37       | * $FreeBSD: src/sys/sys/types.h,v 1.92 2005/05/31 15:18:17 rodrigc Exp $                        |  8571     3
    38       | */                                                                                              |  8572     3
    39       |                                                                                                 |  8573     3
    40       |#ifndef _SYS_TYPES_H_                                                                            |  8574     3
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   175


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    41       |#define _SYS_TYPES_H_                                                                            |  8575     3
    42       |                                                                                                 |  8576     3
    43       |#include <sys/cdefs.h>                                                                           |  8577     3
    44       |                                                                                                 |  8578     3
    45       |/* Machine type dependent parameters. */                                                         |  8579     3
    46       |#include <machine/endian.h>                                                                      |  8580     3
    47       |#include <sys/_types.h>                                                                          |  8581     3
    48       |                                                                                                 |  8582     3
    49       |#include <sys/_pthreadtypes.h>                                                                   |  8583     3
    50       |                                                                                                 |  8584     3
    51       |#if __BSD_VISIBLE                                                                                |  8585     3
    52       |typedef unsigned char   u_char;                                                                  |  8586     3
    53       |typedef unsigned short  u_short;                                                                 |  8587     3
    54       |typedef unsigned int    u_int;                                                                   |  8588     3
    55       |typedef unsigned long   u_long;                                                                  |  8589     3
    56       |#ifndef _KERNEL                                                                                  |  8590     3
    57       |typedef unsigned short  ushort;         /* Sys V compatibility */                                |  8591     3
    58       |typedef unsigned int    uint;           /* Sys V compatibility */                                |  8592     3
    59       |#endif                                                                                           |  8593     3
    60       |#endif                                                                                           |  8594     3
    61       |                                                                                                 |  8595     3
    62       |/*                                                                                               |  8596     3
    63       | * XXX POSIX sized integrals that should appear only in <sys/stdint.h>.                          |  8597     3
    64       | */                                                                                              |  8598     3
    65       |#ifndef _INT8_T_DECLARED                                                                         |  8599     3
    66       |typedef __int8_t        int8_t;                                                                  |  8600     3
    67       |#define _INT8_T_DECLARED                                                                         |  8601     3
    68       |#endif                                                                                           |  8602     3
    69       |                                                                                                 |  8603     3
    70       |#ifndef _INT16_T_DECLARED                                                                        |  8604     3
    71       |typedef __int16_t       int16_t;                                                                 |  8605     3
    72       |#define _INT16_T_DECLARED                                                                        |  8606     3
    73       |#endif                                                                                           |  8607     3
    74       |                                                                                                 |  8608     3
    75       |#ifndef _INT32_T_DECLARED                                                                        |  8609     3
    76       |typedef __int32_t       int32_t;                                                                 |  8610     3
    77       |#define _INT32_T_DECLARED                                                                        |  8611     3
    78       |#endif                                                                                           |  8612     3
    79       |                                                                                                 |  8613     3
    80       |#ifndef _INT64_T_DECLARED                                                                        |  8614     3
    81       |typedef __int64_t       int64_t;                                                                 |  8615     3
    82       |#define _INT64_T_DECLARED                                                                        |  8616     3
    83       |#endif                                                                                           |  8617     3
    84       |                                                                                                 |  8618     3
    85       |#ifndef _UINT8_T_DECLARED                                                                        |  8619     3
    86       |typedef __uint8_t       uint8_t;                                                                 |  8620     3
    87       |#define _UINT8_T_DECLARED                                                                        |  8621     3
    88       |#endif                                                                                           |  8622     3
    89       |                                                                                                 |  8623     3
    90       |#ifndef _UINT16_T_DECLARED                                                                       |  8624     3
    91       |typedef __uint16_t      uint16_t;                                                                |  8625     3
    92       |#define _UINT16_T_DECLARED                                                                       |  8626     3
    93       |#endif                                                                                           |  8627     3
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   176


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    94       |                                                                                                 |  8628     3
    95       |#ifndef _UINT32_T_DECLARED                                                                       |  8629     3
    96       |typedef __uint32_t      uint32_t;                                                                |  8630     3
    97       |#define _UINT32_T_DECLARED                                                                       |  8631     3
    98       |#endif                                                                                           |  8632     3
    99       |                                                                                                 |  8633     3
   100       |#ifndef _UINT64_T_DECLARED                                                                       |  8634     3
   101       |typedef __uint64_t      uint64_t;                                                                |  8635     3
   102       |#define _UINT64_T_DECLARED                                                                       |  8636     3
   103       |#endif                                                                                           |  8637     3
   104       |                                                                                                 |  8638     3
   105       |#ifndef _INTPTR_T_DECLARED                                                                       |  8639     3
   106       |typedef __intptr_t      intptr_t;                                                                |  8640     3
   107       |typedef __uintptr_t     uintptr_t;                                                               |  8641     3
   108       |#define _INTPTR_T_DECLARED                                                                       |  8642     3
   109       |#endif                                                                                           |  8643     3
   110       |                                                                                                 |  8644     3
   111       |typedef __uint8_t       u_int8_t;       /* unsigned integrals (deprecated) */                    |  8645     3
   112       |typedef __uint16_t      u_int16_t;                                                               |  8646     3
   113       |typedef __uint32_t      u_int32_t;                                                               |  8647     3
   114       |typedef __uint64_t      u_int64_t;                                                               |  8648     3
   115       |                                                                                                 |  8649     3
   116       |typedef __uint64_t      u_quad_t;       /* quads (deprecated) */                                 |  8650     3
   117       |typedef __int64_t       quad_t;                                                                  |  8651     3
   118       |typedef quad_t *        qaddr_t;                                                                 |  8652     3
   119       |                                                                                                 |  8653     3
   120       |typedef char *          caddr_t;        /* core address */                                       |  8654     3
   121       |typedef __const char *  c_caddr_t;      /* core address, pointer to const */                     |  8655     3
   122       |typedef __volatile char *v_caddr_t;     /* core address, pointer to volatile */                  |  8656     3
   123       |                                                                                                 |  8657     3
   124       |#ifndef _BLKSIZE_T_DECLARED                                                                      |  8658     3
   125       |typedef __blksize_t     blksize_t;                                                               |  8659     3
   126       |#define _BLKSIZE_T_DECLARED                                                                      |  8660     3
   127       |#endif                                                                                           |  8661     3
   128       |                                                                                                 |  8662     3
   129       |#ifndef _BLKCNT_T_DECLARED                                                                       |  8663     3
   130       |typedef __blkcnt_t      blkcnt_t;                                                                |  8664     3
   131       |#define _BLKCNT_T_DECLARED                                                                       |  8665     3
   132       |#endif                                                                                           |  8666     3
   133       |                                                                                                 |  8667     3
   134       |#ifndef _CLOCK_T_DECLARED                                                                        |  8668     3
   135       |typedef __clock_t       clock_t;                                                                 |  8669     3
   136       |#define _CLOCK_T_DECLARED                                                                        |  8670     3
   137       |#endif                                                                                           |  8671     3
   138       |                                                                                                 |  8672     3
   139       |#ifndef _CLOCKID_T_DECLARED                                                                      |  8673     3
   140       |typedef __clockid_t     clockid_t;                                                               |  8674     3
   141       |#define _CLOCKID_T_DECLARED                                                                      |  8675     3
   142       |#endif                                                                                           |  8676     3
   143       |                                                                                                 |  8677     3
   144       |typedef __critical_t    critical_t;     /* Critical section value */                             |  8678     3
   145       |typedef __int64_t       daddr_t;        /* disk address */                                       |  8679     3
   146       |                                                                                                 |  8680     3
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   177


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   147       |#ifndef _DEV_T_DECLARED                                                                          |  8681     3
   148       |typedef __dev_t         dev_t;          /* device number or struct cdev */                       |  8682     3
   149       |#define _DEV_T_DECLARED                                                                          |  8683     3
   150       |#endif                                                                                           |  8684     3
   151       |                                                                                                 |  8685     3
   152       |#ifndef _FFLAGS_T_DECLARED                                                                       |  8686     3
   153       |typedef __fflags_t      fflags_t;       /* file flags */                                         |  8687     3
   154       |#define _FFLAGS_T_DECLARED                                                                       |  8688     3
   155       |#endif                                                                                           |  8689     3
   156       |                                                                                                 |  8690     3
   157       |typedef __fixpt_t       fixpt_t;        /* fixed point number */                                 |  8691     3
   158       |                                                                                                 |  8692     3
   159       |#ifndef _FSBLKCNT_T_DECLARED            /* for statvfs() */                                      |  8693     3
   160       |typedef __fsblkcnt_t    fsblkcnt_t;                                                              |  8694     3
   161       |typedef __fsfilcnt_t    fsfilcnt_t;                                                              |  8695     3
   162       |#define _FSBLKCNT_T_DECLARED                                                                     |  8696     3
   163       |#endif                                                                                           |  8697     3
   164       |                                                                                                 |  8698     3
   165       |#ifndef _GID_T_DECLARED                                                                          |  8699     3
   166       |typedef __gid_t         gid_t;          /* group id */                                           |  8700     3
   167       |#define _GID_T_DECLARED                                                                          |  8701     3
   168       |#endif                                                                                           |  8702     3
   169       |                                                                                                 |  8703     3
   170       |#ifndef _IN_ADDR_T_DECLARED                                                                      |  8704     3
   171       |typedef __uint32_t      in_addr_t;      /* base type for internet address */                     |  8705     3
   172       |#define _IN_ADDR_T_DECLARED                                                                      |  8706     3
   173       |#endif                                                                                           |  8707     3
   174       |                                                                                                 |  8708     3
   175       |#ifndef _IN_PORT_T_DECLARED                                                                      |  8709     3
   176       |typedef __uint16_t      in_port_t;                                                               |  8710     3
   177       |#define _IN_PORT_T_DECLARED                                                                      |  8711     3
   178       |#endif                                                                                           |  8712     3
   179       |                                                                                                 |  8713     3
   180       |#ifndef _ID_T_DECLARED                                                                           |  8714     3
   181       |typedef __id_t          id_t;           /* can hold a uid_t or pid_t */                          |  8715     3
   182       |#define _ID_T_DECLARED                                                                           |  8716     3
   183       |#endif                                                                                           |  8717     3
   184       |                                                                                                 |  8718     3
   185       |#ifndef _INO_T_DECLARED                                                                          |  8719     3
   186       |typedef __ino_t         ino_t;          /* inode number */                                       |  8720     3
   187       |#define _INO_T_DECLARED                                                                          |  8721     3
   188       |#endif                                                                                           |  8722     3
   189       |                                                                                                 |  8723     3
   190       |#ifndef _KEY_T_DECLARED                                                                          |  8724     3
   191       |typedef __key_t         key_t;          /* IPC key (for Sys V IPC) */                            |  8725     3
   192       |#define _KEY_T_DECLARED                                                                          |  8726     3
   193       |#endif                                                                                           |  8727     3
   194       |                                                                                                 |  8728     3
   195       |#ifndef _LWPID_T_DECLARED                                                                        |  8729     3
   196       |typedef __lwpid_t       lwpid_t;        /* Thread ID (a.k.a. LWP) */                             |  8730     3
   197       |#define _LWPID_T_DECLARED                                                                        |  8731     3
   198       |#endif                                                                                           |  8732     3
   199       |                                                                                                 |  8733     3
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   178


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   200       |#ifndef _MODE_T_DECLARED                                                                         |  8734     3
   201       |typedef __mode_t        mode_t;         /* permissions */                                        |  8735     3
   202       |#define _MODE_T_DECLARED                                                                         |  8736     3
   203       |#endif                                                                                           |  8737     3
   204       |                                                                                                 |  8738     3
   205       |#ifndef _NLINK_T_DECLARED                                                                        |  8739     3
   206       |typedef __nlink_t       nlink_t;        /* link count */                                         |  8740     3
   207       |#define _NLINK_T_DECLARED                                                                        |  8741     3
   208       |#endif                                                                                           |  8742     3
   209       |                                                                                                 |  8743     3
   210       |#ifndef _OFF_T_DECLARED                                                                          |  8744     3
   211       |typedef __off_t         off_t;          /* file offset */                                        |  8745     3
   212       |#define _OFF_T_DECLARED                                                                          |  8746     3
   213       |#endif                                                                                           |  8747     3
   214       |                                                                                                 |  8748     3
   215       |#ifndef _PID_T_DECLARED                                                                          |  8749     3
   216       |typedef __pid_t         pid_t;          /* process id */                                         |  8750     3
   217       |#define _PID_T_DECLARED                                                                          |  8751     3
   218       |#endif                                                                                           |  8752     3
   219       |                                                                                                 |  8753     3
   220       |typedef __register_t    register_t;                                                              |  8754     3
   221       |                                                                                                 |  8755     3
   222       |#ifndef _RLIM_T_DECLARED                                                                         |  8756     3
   223       |typedef __rlim_t        rlim_t;         /* resource limit */                                     |  8757     3
   224       |#define _RLIM_T_DECLARED                                                                         |  8758     3
   225       |#endif                                                                                           |  8759     3
   226       |                                                                                                 |  8760     3
   227       |typedef __segsz_t       segsz_t;        /* segment size (in pages) */                            |  8761     3
   228       |                                                                                                 |  8762     3
   229       |#ifndef _SIZE_T_DECLARED                                                                         |  8763     3
   230       |typedef __size_t        size_t;                                                                  |  8764     3
   231       |#define _SIZE_T_DECLARED                                                                         |  8765     3
   232       |#endif                                                                                           |  8766     3
   233       |                                                                                                 |  8767     3
   234       |#ifndef _SSIZE_T_DECLARED                                                                        |  8768     3
   235       |typedef __ssize_t       ssize_t;                                                                 |  8769     3
   236       |#define _SSIZE_T_DECLARED                                                                        |  8770     3
   237       |#endif                                                                                           |  8771     3
   238       |                                                                                                 |  8772     3
   239       |#ifndef _SUSECONDS_T_DECLARED                                                                    |  8773     3
   240       |typedef __suseconds_t   suseconds_t;    /* microseconds (signed) */                              |  8774     3
   241       |#define _SUSECONDS_T_DECLARED                                                                    |  8775     3
   242       |#endif                                                                                           |  8776     3
   243       |                                                                                                 |  8777     3
   244       |#ifndef _TIME_T_DECLARED                                                                         |  8778     3
   245       |typedef __time_t        time_t;                                                                  |  8779     3
   246       |#define _TIME_T_DECLARED                                                                         |  8780     3
   247       |#endif                                                                                           |  8781     3
   248       |                                                                                                 |  8782     3
   249       |#ifndef _TIMER_T_DECLARED                                                                        |  8783     3
   250       |typedef __timer_t       timer_t;                                                                 |  8784     3
   251       |#define _TIMER_T_DECLARED                                                                        |  8785     3
   252       |#endif                                                                                           |  8786     3
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   179


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   253       |                                                                                                 |  8787     3
   254       |typedef __u_register_t  u_register_t;                                                            |  8788     3
   255       |                                                                                                 |  8789     3
   256       |#ifndef _UID_T_DECLARED                                                                          |  8790     3
   257       |typedef __uid_t         uid_t;          /* user id */                                            |  8791     3
   258       |#define _UID_T_DECLARED                                                                          |  8792     3
   259       |#endif                                                                                           |  8793     3
   260       |                                                                                                 |  8794     3
   261       |#ifndef _USECONDS_T_DECLARED                                                                     |  8795     3
   262       |typedef __useconds_t    useconds_t;     /* microseconds (unsigned) */                            |  8796     3
   263       |#define _USECONDS_T_DECLARED                                                                     |  8797     3
   264       |#endif                                                                                           |  8798     3
   265       |                                                                                                 |  8799     3
   266       |typedef __vm_offset_t   vm_offset_t;                                                             |  8800     3
   267       |typedef __vm_ooffset_t  vm_ooffset_t;                                                            |  8801     3
   268       |typedef __vm_paddr_t    vm_paddr_t;                                                              |  8802     3
   269       |typedef __vm_pindex_t   vm_pindex_t;                                                             |  8803     3
   270       |typedef __vm_size_t     vm_size_t;                                                               |  8804     3
   271       |                                                                                                 |  8805     3
   272       |#ifdef _KERNEL                                                                                   |  8806     3
   273       |typedef int             boolean_t;                                                               |  8807     3
   274       |typedef __cpumask_t     cpumask_t;                                                               |  8808     3
   275       |typedef __intfptr_t     intfptr_t;                                                               |  8809     3
   276       |                                                                                                 |  8810     3
   277       |/*-                                                                                              |  8811     3
   278       | * XXX this is fixed width for historical reasons.  It should have had type                      |  8812     3
   279       | * __int_fast32_t.  Fixed-width types should not be used unless binary                           |  8813     3
   280       | * compatibility is essential.  Least-width types should be used even less                       |  8814     3
   281       | * since they provide smaller benefits.                                                          |  8815     3
   282       | * XXX should be MD.                                                                             |  8816     3
   283       | * XXX this is bogus in -current, but still used for spl*().                                     |  8817     3
   284       | */                                                                                              |  8818     3
   285       |typedef __uint32_t      intrmask_t;     /* Interrupt mask (spl, xxx_imask...) */                 |  8819     3
   286       |                                                                                                 |  8820     3
   287       |typedef __uintfptr_t    uintfptr_t;                                                              |  8821     3
   288       |typedef __uint64_t      uoff_t;                                                                  |  8822     3
   289       |typedef struct vm_page  *vm_page_t;                                                              |  8823     3
   290       |                                                                                                 |  8824     3
   291       |#define offsetof(type, field) __offsetof(type, field)                                            |  8825     3
   292       |                                                                                                 |  8826     3
   293       |#endif /* !_KERNEL */                                                                            |  8827     3
   294       |                                                                                                 |  8828     3
   295       |/*                                                                                               |  8829     3
   296       | * The following are all things that really shouldn't exist in this header,                      |  8830     3
   297       | * since its purpose is to provide typedefs, not miscellaneous doodads.                          |  8831     3
   298       | */                                                                                              |  8832     3
   299       |#if __BSD_VISIBLE                                                                                |  8833     3
   300       |                                                                                                 |  8834     3
   301       |#include <sys/select.h>                                                                          |  8835     3
   302       |                                                                                                 |  8836     3
   303       |#ifndef _KERNEL                                                                                  |  8837     3
   304       |#define major(x)     ((int)(((u_int)(x) >> 16)&0xffff))    /* major number */                    |  8838     3
   305       |#define minor(x)     ((int)((x)&0x0000ffff))               /* minor number */                    |  8839     3
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   180


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   306       |#endif /* !_KERNEL */                                                                            |  8840     3
   307       |                                                                                                 |  8841     3
   308       |#define makedev(x,y) ((dev_t)(((x) << 16) | ((y)&0xffff))) /* create dev_t */                    |  8842     3
   309       |                                                                                                 |  8843     3
   310       |/*                                                                                               |  8844     3
   311       | * These declarations belong elsewhere, but are repeated here and in                             |  8845     3
   312       | * <stdio.h> to give broken programs a better chance of working with                             |  8846     3
   313       | * 64-bit off_t's.                                                                               |  8847     3
   314       | */                                                                                              |  8848     3
   315       |#ifndef _KERNEL                                                                                  |  8849     3
   316       |__BEGIN_DECLS                                                                                    |  8850     3
   317       |#ifndef _FTRUNCATE_DECLARED                                                                      |  8851     3
   318       |#define _FTRUNCATE_DECLARED                                                                      |  8852     3
   319       |#pragma map (ftruncate, "@@FTRUNC")                                                              |  8853     3
   320       |int      ftruncate(int, off_t);                                                                  |  8854     3
   321       |#endif                                                                                           |  8855     3
   322       |#ifndef _LSEEK_DECLARED                                                                          |  8856     3
   323       |#define _LSEEK_DECLARED                                                                          |  8857     3
   324       |off_t    lseek(int, off_t, int);                                                                 |  8858     3
   325       |#endif                                                                                           |  8859     3
   326       |#ifndef _MMAP_DECLARED                                                                           |  8860     3
   327       |#define _MMAP_DECLARED                                                                           |  8861     3
   328       |void *   mmap(void *, size_t, int, int, int, off_t);                                             |  8862     3
   329       |#endif                                                                                           |  8863     3
   330       |#ifndef _TRUNCATE_DECLARED                                                                       |  8864     3
   331       |#define _TRUNCATE_DECLARED                                                                       |  8865     3
   332       |int      truncate(const char *, off_t);                                                          |  8866     3
   333       |#endif                                                                                           |  8867     3
   334       |__END_DECLS                                                                                      |  8868     3
   335       |#endif /* !_KERNEL */                                                                            |  8869     3
   336       |                                                                                                 |  8870     3
   337       |#endif /* __BSD_VISIBLE */                                                                       |  8871     3
   338       |                                                                                                 |  8872     3
   339       |#endif /* !_SYS_TYPES_H_ */                                                                      |  8873     3
   340       |#pragma pack(reset)                                                                              |  8874     3
    43       |#include <sys/_pthreadtypes.h>                                                                   |  8875    20
     1       |/* release 2.25.00 */                                                                            |  8876     8
     2       |#pragma pack()                                                                                   |  8877     8
     3       |/*                                                                                               |  8878     8
     4       | * Copyright (c) 1993, 1994 by Chris Provenzano, proven@mit.edu                                  |  8879     8
     5       | * Copyright (c) 1995-1998 by John Birrell <jb@cimlogic.com.au>                                  |  8880     8
     6       | * All rights reserved.                                                                          |  8881     8
     7       | *                                                                                               |  8882     8
     8       | * Redistribution and use in source and binary forms, with or without                            |  8883     8
     9       | * modification, are permitted provided that the following conditions                            |  8884     8
    10       | * are met:                                                                                      |  8885     8
    11       | * 1. Redistributions of source code must retain the above copyright                             |  8886     8
    12       | *    notice, this list of conditions and the following disclaimer.                              |  8887     8
    13       | * 2. Redistributions in binary form must reproduce the above copyright                          |  8888     8
    14       | *    notice, this list of conditions and the following disclaimer in the                        |  8889     8
    15       | *    documentation and/or other materials provided with the distribution.                       |  8890     8
    16       | * 3. All advertising materials mentioning features or use of this software                      |  8891     8
    17       | *    must display the following acknowledgement:                                                |  8892     8
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   181


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    18       | *  This product includes software developed by Chris Provenzano.                                |  8893     8
    19       | * 4. The name of Chris Provenzano may not be used to endorse or promote                         |  8894     8
    20       | *        products derived from this software without specific prior written                     |  8895     8
    21       | *        permission.                                                                            |  8896     8
    22       | *                                                                                               |  8897     8
    23       | * THIS SOFTWARE IS PROVIDED BY CHRIS PROVENZANO ``AS IS'' AND                                   |  8898     8
    24       | * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE                         |  8899     8
    25       | * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE                    |  8900     8
    26       | * ARE DISCLAIMED.  IN NO EVENT SHALL CHRIS PROVENZANO BE LIABLE FOR ANY                         |  8901     8
    27       | * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES                    |  8902     8
    28       | * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR                            |  8903     8
    29       | * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER                    |  8904     8
    30       | * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT                            |  8905     8
    31       | * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY                     |  8906     8
    32       | * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF                        |  8907     8
    33       | * SUCH DAMAGE.                                                                                  |  8908     8
    34       | *                                                                                               |  8909     8
    35       | * $FreeBSD: src/sys/sys/_pthreadtypes.h,v 1.1 2005/05/31 15:18:17 rodrigc Exp $                 |  8910     8
    36       | */                                                                                              |  8911     8
    37       |                                                                                                 |  8912     8
    38       |#ifndef _SYS__PTHREADTYPES_H_                                                                    |  8913     8
    39       |#define _SYS__PTHREADTYPES_H_                                                                    |  8914     8
    40       |                                                                                                 |  8915     8
    41       |/*                                                                                               |  8916     8
    42       | * Forward structure definitions.                                                                |  8917     8
    43       | *                                                                                               |  8918     8
    44       | * These are mostly opaque to the user.                                                          |  8919     8
    45       | */                                                                                              |  8920     8
    46       |struct __pthread;                                                                                |  8921     8
    47       |struct pthread;                                                                                  |  8922     8
    48       |struct pthread_cond_attr;                                                                        |  8923     8
    49       |struct pthread_mutex_attr;                                                                       |  8924     8
    50       |struct pthread_once;                                                                             |  8925     8
    51       |struct pthread_rwlockattr;                                                                       |  8926     8
    52       |struct pthread_barrier_attr;                                                                     |  8927     8
    53       |struct pthread_spinlock;                                                                         |  8928     8
    54       |struct pthread_attr { union { int __i[16]; volatile int __vi[16];                                |  8929     8
    55       |                              unsigned long __s[8]; } __u; };                                    |  8930     8
    56       |struct pthread_mutex { union { int __i[10]; volatile int __vi[10];                               |  8931     8
    57       |                               volatile void *volatile __p[5]; } __u; };                         |  8932     8
    58       |struct pthread_cond { union { int __i[12]; volatile int __vi[12];                                |  8933     8
    59       |                              void *__p[6]; } __u; };                                            |  8934     8
    60       |struct pthread_rwlock { union { int __i[14]; volatile int __vi[14];                              |  8935     8
    61       |                                void *__p[7]; } __u; };                                          |  8936     8
    62       |struct pthread_barrier { union { int __i[8]; volatile int __vi[8];                               |  8937     8
    63       |                                 void *__p[4]; } __u; };                                         |  8938     8
    64       |                                                                                                 |  8939     8
    65       |                                                                                                 |  8940     8
    66       |/*                                                                                               |  8941     8
    67       | * Primitive system data type definitions required by P1003.1c.                                  |  8942     8
    68       | *                                                                                               |  8943     8
    69       | * Note that P1003.1c specifies that there are no defined comparison                             |  8944     8
    70       | * or assignment operators for the types pthread_attr_t, pthread_cond_t,                         |  8945     8
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   182


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    71       | * pthread_condattr_t, pthread_mutex_t, pthread_mutexattr_t.                                     |  8946     8
    72       | */                                                                                              |  8947     8
    73       |#ifndef _PTHREAD_T_DECLARED                                                                      |  8948     8
    74       |typedef struct __pthread                        *pthread_t;                                      |  8949     8
    75       |#define _PTHREAD_T_DECLARED                                                                      |  8950     8
    76       |#endif                                                                                           |  8951     8
    77       |typedef struct  pthread_attr            pthread_attr_t;                                          |  8952     8
    78       |typedef struct  pthread_mutex           pthread_mutex_t;                                         |  8953     8
    79       |typedef struct { unsigned __attr; }     pthread_mutexattr_t;                                     |  8954     8
    80       |typedef struct  pthread_cond            pthread_cond_t;                                          |  8955     8
    81       |typedef struct { unsigned __attr; }     pthread_condattr_t;                                      |  8956     8
    82       |typedef unsigned int                    pthread_key_t;                                           |  8957     8
    83       |typedef int                             pthread_once_t;                                          |  8958     8
    84       |typedef struct { union { int __i[14]; volatile int __vi[14];                                     |  8959     8
    85       |                         void *__p[7]; } __u; } pthread_rwlock_t;                                |  8960     8
    86       |typedef struct { unsigned __attr[2]; }  pthread_rwlockattr_t;                                    |  8961     8
    87       |typedef struct pthread_barrier          pthread_barrier_t;                                       |  8962     8
    88       |typedef struct { unsigned __attr; }     pthread_barrierattr_t;                                   |  8963     8
    89       |typedef int                             pthread_spinlock_t;                                      |  8964     8
    90       |                                                                                                 |  8965     8
    91       |/*                                                                                               |  8966     8
    92       | * Additional type definitions:                                                                  |  8967     8
    93       | *                                                                                               |  8968     8
    94       | * Note that P1003.1c reserves the prefixes pthread_ and PTHREAD_ for                            |  8969     8
    95       | * use in header symbols.                                                                        |  8970     8
    96       | */                                                                                              |  8971     8
    97       |typedef void    *pthread_addr_t;                                                                 |  8972     8
    98       |typedef void    *(*pthread_startroutine_t)(void *);                                              |  8973     8
    99       |                                                                                                 |  8974     8
   100       |#endif /* ! _SYS__PTHREADTYPES_H_ */                                                             |  8975     8
   101       |#pragma pack(reset)                                                                              |  8976     8
    44       |#include <sys/time.h>                                                                            |  8977    20
     1       |/* release 2.25.00 */                                                                            |  8978    17
     2       |#pragma pack()                                                                                   |  8979    17
     3       |/*-                                                                                              |  8980    17
     4       | * Copyright (c) 1982, 1986, 1993                                                                |  8981    17
     5       | *      The Regents of the University of California.  All rights reserved.                       |  8982    17
     6       | *                                                                                               |  8983    17
     7       | * Redistribution and use in source and binary forms, with or without                            |  8984    17
     8       | * modification, are permitted provided that the following conditions                            |  8985    17
     9       | * are met:                                                                                      |  8986    17
    10       | * 1. Redistributions of source code must retain the above copyright                             |  8987    17
    11       | *    notice, this list of conditions and the following disclaimer.                              |  8988    17
    12       | * 2. Redistributions in binary form must reproduce the above copyright                          |  8989    17
    13       | *    notice, this list of conditions and the following disclaimer in the                        |  8990    17
    14       | *    documentation and/or other materials provided with the distribution.                       |  8991    17
    15       | * 4. Neither the name of the University nor the names of its contributors                       |  8992    17
    16       | *    may be used to endorse or promote products derived from this software                      |  8993    17
    17       | *    without specific prior written permission.                                                 |  8994    17
    18       | *                                                                                               |  8995    17
    19       | * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND                       |  8996    17
    20       | * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE                         |  8997    17
    21       | * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE                    |  8998    17
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   183


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    22       | * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE                      |  8999    17
    23       | * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL                    |  9000    17
    24       | * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS                       |  9001    17
    25       | * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)                         |  9002    17
    26       | * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT                    |  9003    17
    27       | * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY                     |  9004    17
    28       | * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF                        |  9005    17
    29       | * SUCH DAMAGE.                                                                                  |  9006    17
    30       | *                                                                                               |  9007    17
    31       | *      @(#)time.h      8.5 (Berkeley) 5/4/95                                                    |  9008    17
    32       | * $FreeBSD: src/sys/sys/time.h,v 1.69 2005/04/02 12:33:27 das Exp $                             |  9009    17
    33       | */                                                                                              |  9010    17
    34       |                                                                                                 |  9011    17
    35       |#ifndef _SYS_TIME_H_                                                                             |  9012    17
    36       |#define _SYS_TIME_H_                                                                             |  9013    17
    37       |                                                                                                 |  9014    17
    38       |#include <sys/_timeval.h>                                                                        |  9015    17
    39       |#include <sys/types.h>                                                                           |  9016    17
    40       |#include <sys/timespec.h>                                                                        |  9017    17
    41       |                                                                                                 |  9018    17
    42       |struct timezone {                                                                                |  9019    17
    43       |        int     tz_minuteswest; /* minutes west of Greenwich */                                  |  9020    17
    44       |        int     tz_dsttime;     /* type of dst correction */                                     |  9021    17
    45       |};                                                                                               |  9022    17
    46       |#define DST_NONE        0       /* not on dst */                                                 |  9023    17
    47       |#define DST_USA         1       /* USA style dst */                                              |  9024    17
    48       |#define DST_AUST        2       /* Australian style dst */                                       |  9025    17
    49       |#define DST_WET         3       /* Western European dst */                                       |  9026    17
    50       |#define DST_MET         4       /* Middle European dst */                                        |  9027    17
    51       |#define DST_EET         5       /* Eastern European dst */                                       |  9028    17
    52       |#define DST_CAN         6       /* Canada */                                                     |  9029    17
    53       |                                                                                                 |  9030    17
    54       |#if __BSD_VISIBLE                                                                                |  9031    17
    55       |struct bintime {                                                                                 |  9032    17
    56       |        time_t  sec;                                                                             |  9033    17
    57       |        uint64_t frac;                                                                           |  9034    17
    58       |};                                                                                               |  9035    17
    59       |                                                                                                 |  9036    17
    60       |static __inline void                                                                             |  9037    17
    61       |bintime_addx(struct bintime *bt, uint64_t x)                                                     |  9038    17
    62       |{                                                                                                |  9039    17
    63       |        uint64_t u;                                                                              |  9040    17
    64       |                                                                                                 |  9041    17
    65       |        u = bt->frac;                                                                            |  9042    17
    66       |        bt->frac += x;                                                                           |  9043    17
    67       |        if (u > bt->frac)                                                                        |  9044    17
    68       |                bt->sec++;                                                                       |  9045    17
    69       |}                                                                                                |  9046    17
    70       |                                                                                                 |  9047    17
    71       |static __inline void                                                                             |  9048    17
    72       |bintime_add(struct bintime *bt, const struct bintime *bt2)                                       |  9049    17
    73       |{                                                                                                |  9050    17
    74       |        uint64_t u;                                                                              |  9051    17
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   184


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    75       |                                                                                                 |  9052    17
    76       |        u = bt->frac;                                                                            |  9053    17
    77       |        bt->frac += bt2->frac;                                                                   |  9054    17
    78       |        if (u > bt->frac)                                                                        |  9055    17
    79       |                bt->sec++;                                                                       |  9056    17
    80       |        bt->sec += bt2->sec;                                                                     |  9057    17
    81       |}                                                                                                |  9058    17
    82       |                                                                                                 |  9059    17
    83       |static __inline void                                                                             |  9060    17
    84       |bintime_sub(struct bintime *bt, const struct bintime *bt2)                                       |  9061    17
    85       |{                                                                                                |  9062    17
    86       |        uint64_t u;                                                                              |  9063    17
    87       |                                                                                                 |  9064    17
    88       |        u = bt->frac;                                                                            |  9065    17
    89       |        bt->frac -= bt2->frac;                                                                   |  9066    17
    90       |        if (u < bt->frac)                                                                        |  9067    17
    91       |                bt->sec--;                                                                       |  9068    17
    92       |        bt->sec -= bt2->sec;                                                                     |  9069    17
    93       |}                                                                                                |  9070    17
    94       |                                                                                                 |  9071    17
    95       |/*-                                                                                              |  9072    17
    96       | * Background information:                                                                       |  9073    17
    97       | *                                                                                               |  9074    17
    98       | * When converting between timestamps on parallel timescales of differing                        |  9075    17
    99       | * resolutions it is historical and scientific practice to round down rather                     |  9076    17
   100       | * than doing 4/5 rounding.                                                                      |  9077    17
   101       | *                                                                                               |  9078    17
   102       | *   The date changes at midnight, not at noon.                                                  |  9079    17
   103       | *                                                                                               |  9080    17
   104       | *   Even at 15:59:59.999999999 it's not four'o'clock.                                           |  9081    17
   105       | *                                                                                               |  9082    17
   106       | *   time_second ticks after N.999999999 not after N.4999999999                                  |  9083    17
   107       | */                                                                                              |  9084    17
   108       |                                                                                                 |  9085    17
   109       |static __inline void                                                                             |  9086    17
   110       |bintime2timespec(const struct bintime *bt, struct timespec *ts)                                  |  9087    17
   111       |{                                                                                                |  9088    17
   112       |                                                                                                 |  9089    17
   113       |        ts->tv_sec = bt->sec;                                                                    |  9090    17
   114       |        ts->tv_nsec = ((uint64_t)1000000000 * (uint32_t)(bt->frac >> 32)) >> 32;                 |  9091    17
   115       |}                                                                                                |  9092    17
   116       |                                                                                                 |  9093    17
   117       |static __inline void                                                                             |  9094    17
   118       |timespec2bintime(const struct timespec *ts, struct bintime *bt)                                  |  9095    17
   119       |{                                                                                                |  9096    17
   120       |                                                                                                 |  9097    17
   121       |        bt->sec = ts->tv_sec;                                                                    |  9098    17
   122       |        /* 18446744073 = int(2^64 / 1000000000) */                                               |  9099    17
   123       |        bt->frac = ts->tv_nsec * (uint64_t)18446744073LL;                                        |  9100    17
   124       |}                                                                                                |  9101    17
   125       |                                                                                                 |  9102    17
   126       |static __inline void                                                                             |  9103    17
   127       |bintime2timeval(const struct bintime *bt, struct timeval *tv)                                    |  9104    17
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   185


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   128       |{                                                                                                |  9105    17
   129       |                                                                                                 |  9106    17
   130       |        tv->tv_sec = bt->sec;                                                                    |  9107    17
   131       |        tv->tv_usec = ((uint64_t)1000000 * (uint32_t)(bt->frac >> 32)) >> 32;                    |  9108    17
   132       |}                                                                                                |  9109    17
   133       |                                                                                                 |  9110    17
   134       |static __inline void                                                                             |  9111    17
   135       |timeval2bintime(const struct timeval *tv, struct bintime *bt)                                    |  9112    17
   136       |{                                                                                                |  9113    17
   137       |                                                                                                 |  9114    17
   138       |        bt->sec = tv->tv_sec;                                                                    |  9115    17
   139       |        /* 18446744073709 = int(2^64 / 1000000) */                                               |  9116    17
   140       |        bt->frac = tv->tv_usec * (uint64_t)18446744073709LL;                                     |  9117    17
   141       |}                                                                                                |  9118    17
   142       |#endif /* __BSD_VISIBLE */                                                                       |  9119    17
   143       |                                                                                                 |  9120    17
   144       |#ifdef _KERNEL                                                                                   |  9121    17
   145       |                                                                                                 |  9122    17
   146       |/* Operations on timespecs */                                                                    |  9123    17
   147       |#define timespecclear(tvp)      ((tvp)->tv_sec = (tvp)->tv_nsec = 0)                             |  9124    17
   148       |#define timespecisset(tvp)      ((tvp)->tv_sec || (tvp)->tv_nsec)                                |  9125    17
   149       |#define timespeccmp(tvp, uvp, cmp)                                      \                        |  9126    17
   150       |        (((tvp)->tv_sec == (uvp)->tv_sec) ?                             \                        |  9127    17
   151       |            ((tvp)->tv_nsec cmp (uvp)->tv_nsec) :                       \                        |  9128    17
   152       |            ((tvp)->tv_sec cmp (uvp)->tv_sec))                                                   |  9129    17
   153       |#define timespecadd(vvp, uvp)                                           \                        |  9130    17
   154       |        do {                                                            \                        |  9131    17
   155       |                (vvp)->tv_sec += (uvp)->tv_sec;                         \                        |  9132    17
   156       |                (vvp)->tv_nsec += (uvp)->tv_nsec;                       \                        |  9133    17
   157       |                if ((vvp)->tv_nsec >= 1000000000) {                     \                        |  9134    17
   158       |                        (vvp)->tv_sec++;                                \                        |  9135    17
   159       |                        (vvp)->tv_nsec -= 1000000000;                   \                        |  9136    17
   160       |                }                                                       \                        |  9137    17
   161       |        } while (0)                                                                              |  9138    17
   162       |#define timespecsub(vvp, uvp)                                           \                        |  9139    17
   163       |        do {                                                            \                        |  9140    17
   164       |                (vvp)->tv_sec -= (uvp)->tv_sec;                         \                        |  9141    17
   165       |                (vvp)->tv_nsec -= (uvp)->tv_nsec;                       \                        |  9142    17
   166       |                if ((vvp)->tv_nsec < 0) {                               \                        |  9143    17
   167       |                        (vvp)->tv_sec--;                                \                        |  9144    17
   168       |                        (vvp)->tv_nsec += 1000000000;                   \                        |  9145    17
   169       |                }                                                       \                        |  9146    17
   170       |        } while (0)                                                                              |  9147    17
   171       |                                                                                                 |  9148    17
   172       |/* Operations on timevals. */                                                                    |  9149    17
   173       |                                                                                                 |  9150    17
   174       |#define timevalclear(tvp)               ((tvp)->tv_sec = (tvp)->tv_usec = 0)                     |  9151    17
   175       |#define timevalisset(tvp)               ((tvp)->tv_sec || (tvp)->tv_usec)                        |  9152    17
   176       |#define timevalcmp(tvp, uvp, cmp)                                       \                        |  9153    17
   177       |        (((tvp)->tv_sec == (uvp)->tv_sec) ?                             \                        |  9154    17
   178       |            ((tvp)->tv_usec cmp (uvp)->tv_usec) :                       \                        |  9155    17
   179       |            ((tvp)->tv_sec cmp (uvp)->tv_sec))                                                   |  9156    17
   180       |                                                                                                 |  9157    17
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   186


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   181       |/* timevaladd and timevalsub are not inlined */                                                  |  9158    17
   182       |                                                                                                 |  9159    17
   183       |#endif /* _KERNEL */                                                                             |  9160    17
   184       |                                                                                                 |  9161    17
   185       |#ifndef _KERNEL                 /* NetBSD/OpenBSD compatible interfaces */                       |  9162    17
   186       |                                                                                                 |  9163    17
   187       |#define timerclear(tvp)         ((tvp)->tv_sec = (tvp)->tv_usec = 0)                             |  9164    17
   188       |#define timerisset(tvp)         ((tvp)->tv_sec || (tvp)->tv_usec)                                |  9165    17
   189       |#define timercmp(tvp, uvp, cmp)                                 \                                |  9166    17
   190       |        (((tvp)->tv_sec == (uvp)->tv_sec) ?                             \                        |  9167    17
   191       |            ((tvp)->tv_usec cmp (uvp)->tv_usec) :                       \                        |  9168    17
   192       |            ((tvp)->tv_sec cmp (uvp)->tv_sec))                                                   |  9169    17
   193       |#define timeradd(tvp, uvp, vvp)                                         \                        |  9170    17
   194       |        do {                                                            \                        |  9171    17
   195       |                (vvp)->tv_sec = (tvp)->tv_sec + (uvp)->tv_sec;          \                        |  9172    17
   196       |                (vvp)->tv_usec = (tvp)->tv_usec + (uvp)->tv_usec;       \                        |  9173    17
   197       |                if ((vvp)->tv_usec >= 1000000) {                        \                        |  9174    17
   198       |                        (vvp)->tv_sec++;                                \                        |  9175    17
   199       |                        (vvp)->tv_usec -= 1000000;                      \                        |  9176    17
   200       |                }                                                       \                        |  9177    17
   201       |        } while (0)                                                                              |  9178    17
   202       |#define timersub(tvp, uvp, vvp)                                         \                        |  9179    17
   203       |        do {                                                            \                        |  9180    17
   204       |                (vvp)->tv_sec = (tvp)->tv_sec - (uvp)->tv_sec;          \                        |  9181    17
   205       |                (vvp)->tv_usec = (tvp)->tv_usec - (uvp)->tv_usec;       \                        |  9182    17
   206       |                if ((vvp)->tv_usec < 0) {                               \                        |  9183    17
   207       |                        (vvp)->tv_sec--;                                \                        |  9184    17
   208       |                        (vvp)->tv_usec += 1000000;                      \                        |  9185    17
   209       |                }                                                       \                        |  9186    17
   210       |        } while (0)                                                                              |  9187    17
   211       |#endif                                                                                           |  9188    17
   212       |                                                                                                 |  9189    17
   213       |/*                                                                                               |  9190    17
   214       | * Names of the interval timers, and structure                                                   |  9191    17
   215       | * defining a timer setting.                                                                     |  9192    17
   216       | */                                                                                              |  9193    17
   217       |#define ITIMER_REAL     0                                                                        |  9194    17
   218       |#define ITIMER_VIRTUAL  1                                                                        |  9195    17
   219       |#define ITIMER_PROF     2                                                                        |  9196    17
   220       |                                                                                                 |  9197    17
   221       |struct itimerval {                                                                               |  9198    17
   222       |        struct  timeval it_interval;    /* timer interval */                                     |  9199    17
   223       |        struct  timeval it_value;       /* current value */                                      |  9200    17
   224       |};                                                                                               |  9201    17
   225       |                                                                                                 |  9202    17
   226       |/*                                                                                               |  9203    17
   227       | * Getkerninfo clock information structure                                                       |  9204    17
   228       | */                                                                                              |  9205    17
   229       |struct clockinfo {                                                                               |  9206    17
   230       |        int     hz;             /* clock frequency */                                            |  9207    17
   231       |        int     tick;           /* micro-seconds per hz tick */                                  |  9208    17
   232       |        int     spare;                                                                           |  9209    17
   233       |        int     stathz;         /* statistics clock frequency */                                 |  9210    17
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   187


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   234       |        int     profhz;         /* profiling clock frequency */                                  |  9211    17
   235       |};                                                                                               |  9212    17
   236       |                                                                                                 |  9213    17
   237       |/* These macros are also in time.h. */                                                           |  9214    17
   238       |#ifndef CLOCK_REALTIME                                                                           |  9215    17
   239       |#define CLOCK_REALTIME  0                                                                        |  9216    17
   240       |#if 0                                                                                            |  9217    17
   241       |  /* only CLOCK_REALTIME exists in this implementation */                                        |  9218    17
   242       |#define CLOCK_VIRTUAL   1                                                                        |  9219    17
   243       |#define CLOCK_PROF      2                                                                        |  9220    17
   244       |#define CLOCK_MONOTONIC 4                                                                        |  9221    17
   245       |#endif                                                                                           |  9222    17
   246       |#endif                                                                                           |  9223    17
   247       |                                                                                                 |  9224    17
   248       |#ifndef TIMER_ABSTIME                                                                            |  9225    17
   249       |#define TIMER_RELTIME   0x0     /* relative timer */                                             |  9226    17
   250       |#define TIMER_ABSTIME   0x1     /* absolute timer */                                             |  9227    17
   251       |#endif                                                                                           |  9228    17
   252       |                                                                                                 |  9229    17
   253       |#ifdef _KERNEL                                                                                   |  9230    17
   254       |extern time_t   time_second;                                                                     |  9231    17
   255       |extern time_t   time_uptime;                                                                     |  9232    17
   256       |extern struct timeval boottime;                                                                  |  9233    17
   257       |                                                                                                 |  9234    17
   258       |/*                                                                                               |  9235    17
   259       | * Functions for looking at our clock: [get]{bin,nano,micro}[up]time()                           |  9236    17
   260       | *                                                                                               |  9237    17
   261       | * Functions without the "get" prefix returns the best timestamp                                 |  9238    17
   262       | * we can produce in the given format.                                                           |  9239    17
   263       | *                                                                                               |  9240    17
   264       | * "bin"   == struct bintime  == seconds + 64 bit fraction of seconds.                           |  9241    17
   265       | * "nano"  == struct timespec == seconds + nanoseconds.                                          |  9242    17
   266       | * "micro" == struct timeval  == seconds + microseconds.                                         |  9243    17
   267       | *                                                                                               |  9244    17
   268       | * Functions containing "up" returns time relative to boot and                                   |  9245    17
   269       | * should be used for calculating time intervals.                                                |  9246    17
   270       | *                                                                                               |  9247    17
   271       | * Functions without "up" returns GMT time.                                                      |  9248    17
   272       | *                                                                                               |  9249    17
   273       | * Functions with the "get" prefix returns a less precise result                                 |  9250    17
   274       | * much faster than the functions without "get" prefix and should                                |  9251    17
   275       | * be used where a precision of 10 msec is acceptable or where                                   |  9252    17
   276       | * performance is priority. (NB: "precision", _not_ "resolution" !)                              |  9253    17
   277       | *                                                                                               |  9254    17
   278       | */                                                                                              |  9255    17
   279       |                                                                                                 |  9256    17
   280       |void    binuptime(struct bintime *bt);                                                           |  9257    17
   281       |void    nanouptime(struct timespec *tsp);                                                        |  9258    17
   282       |void    microuptime(struct timeval *tvp);                                                        |  9259    17
   283       |                                                                                                 |  9260    17
   284       |void    bintime(struct bintime *bt);                                                             |  9261    17
   285       |void    nanotime(struct timespec *tsp);                                                          |  9262    17
   286       |void    microtime(struct timeval *tvp);                                                          |  9263    17
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   188


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   287       |                                                                                                 |  9264    17
   288       |void    getbinuptime(struct bintime *bt);                                                        |  9265    17
   289       |void    getnanouptime(struct timespec *tsp);                                                     |  9266    17
   290       |void    getmicrouptime(struct timeval *tvp);                                                     |  9267    17
   291       |                                                                                                 |  9268    17
   292       |void    getbintime(struct bintime *bt);                                                          |  9269    17
   293       |void    getnanotime(struct timespec *tsp);                                                       |  9270    17
   294       |void    getmicrotime(struct timeval *tvp);                                                       |  9271    17
   295       |                                                                                                 |  9272    17
   296       |/* Other functions */                                                                            |  9273    17
   297       |int     itimerdecr(struct itimerval *itp, int usec);                                             |  9274    17
   298       |int     itimerfix(struct timeval *tv);                                                           |  9275    17
   299       |int     ppsratecheck(struct timeval *, int *, int);                                              |  9276    17
   300       |int     ratecheck(struct timeval *, const struct timeval *);                                     |  9277    17
   301       |void    timevaladd(struct timeval *t1, const struct timeval *t2);                                |  9278    17
   302       |void    timevalsub(struct timeval *t1, const struct timeval *t2);                                |  9279    17
   303       |int     tvtohz(struct timeval *tv);                                                              |  9280    17
   304       |#else /* !_KERNEL */                                                                             |  9281    17
   305       |#include <time.h>                                                                                |  9282    17
   306       |                                                                                                 |  9283    17
   307       |#include <sys/cdefs.h>                                                                           |  9284    17
   308       |                                                                                                 |  9285    17
   309       |__BEGIN_DECLS                                                                                    |  9286    17
   310       |int     adjtime(const struct timeval *, struct timeval *);                                       |  9287    17
   311       |int     futimes(int, const struct timeval *);                                                    |  9288    17
   312       |#pragma map (getitimer, "@@GITMR")                                                               |  9289    17
   313       |int     getitimer(int, struct itimerval *);                                                      |  9290    17
   314       |#pragma map (gettimeofday,"GETTFD@Y")                                                            |  9291    17
   315       |int     gettimeofday(struct timeval *, struct timezone *);                                       |  9292    17
   316       |int     lutimes(const char *, const struct timeval *);                                           |  9293    17
   317       |#pragma map (setitimer, "@@SITMR")                                                               |  9294    17
   318       |int     setitimer(int, const struct itimerval *, struct itimerval *);                            |  9295    17
   319       |int     settimeofday(const struct timeval *, const struct timezone *);                           |  9296    17
   320       |int     utimes(const char *, const struct timeval *);                                            |  9297    17
   321       |__END_DECLS                                                                                      |  9298    17
   322       |                                                                                                 |  9299    17
   323       |#endif /* !_KERNEL */                                                                            |  9300    17
   324       |                                                                                                 |  9301    17
   325       |#endif /* !_SYS_TIME_H_ */                                                                       |  9302    17
   326       |#pragma pack(reset)                                                                              |  9303    17
    45       |#include <sys/signal.h>                                                                          |  9304    20
     1       |/* release 2.25.00 */                                                                            |  9305    21
     2       |#pragma pack()                                                                                   |  9306    21
     3       |/*-                                                                                              |  9307    21
     4       | * Copyright (c) 1982, 1986, 1989, 1991, 1993                                                    |  9308    21
     5       | *      The Regents of the University of California.  All rights reserved.                       |  9309    21
     6       | * (c) UNIX System Laboratories, Inc.                                                            |  9310    21
     7       | * All or some portions of this file are derived from material licensed                          |  9311    21
     8       | * to the University of California by American Telephone and Telegraph                           |  9312    21
     9       | * Co. or Unix System Laboratories, Inc. and are reproduced herein with                          |  9313    21
    10       | * the permission of UNIX System Laboratories, Inc.                                              |  9314    21
    11       | *                                                                                               |  9315    21
    12       | * Redistribution and use in source and binary forms, with or without                            |  9316    21
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   189


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    13       | * modification, are permitted provided that the following conditions                            |  9317    21
    14       | * are met:                                                                                      |  9318    21
    15       | * 1. Redistributions of source code must retain the above copyright                             |  9319    21
    16       | *    notice, this list of conditions and the following disclaimer.                              |  9320    21
    17       | * 2. Redistributions in binary form must reproduce the above copyright                          |  9321    21
    18       | *    notice, this list of conditions and the following disclaimer in the                        |  9322    21
    19       | *    documentation and/or other materials provided with the distribution.                       |  9323    21
    20       | * 4. Neither the name of the University nor the names of its contributors                       |  9324    21
    21       | *    may be used to endorse or promote products derived from this software                      |  9325    21
    22       | *    without specific prior written permission.                                                 |  9326    21
    23       | *                                                                                               |  9327    21
    24       | * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND                       |  9328    21
    25       | * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE                         |  9329    21
    26       | * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE                    |  9330    21
    27       | * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE                      |  9331    21
    28       | * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL                    |  9332    21
    29       | * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS                       |  9333    21
    30       | * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)                         |  9334    21
    31       | * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT                    |  9335    21
    32       | * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY                     |  9336    21
    33       | * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF                        |  9337    21
    34       | * SUCH DAMAGE.                                                                                  |  9338    21
    35       | *                                                                                               |  9339    21
    36       | *      @(#)signal.h    8.4 (Berkeley) 5/4/95                                                    |  9340    21
    37       | * $FreeBSD: src/sys/sys/signal.h,v 1.45.8.1 2005/11/16 12:44:10 davidxu Exp $                   |  9341    21
    38       | */                                                                                              |  9342    21
    39       |                                                                                                 |  9343    21
    40       |#ifndef _SYS_SIGNAL_H_                                                                           |  9344    21
    41       |#define _SYS_SIGNAL_H_                                                                           |  9345    21
    42       |                                                                                                 |  9346    21
    43       |#include <sys/cdefs.h>                                                                           |  9347    21
     1       |/* release 2.25.00 */                                                                            |  9348     4
     2       |#pragma pack()                                                                                   |  9349     4
     3       |/*                                                                                               |  9350     4
     4       | * Copyright (c) 1991, 1993                                                                      |  9351     4
     5       | *      The Regents of the University of California.  All rights reserved.                       |  9352     4
     6       | *                                                                                               |  9353     4
     7       | * This code is derived from software contributed to Berkeley by                                 |  9354     4
     8       | * Berkeley Software Design, Inc.                                                                |  9355     4
     9       | *                                                                                               |  9356     4
    10       | * Redistribution and use in source and binary forms, with or without                            |  9357     4
    11       | * modification, are permitted provided that the following conditions                            |  9358     4
    12       | * are met:                                                                                      |  9359     4
    13       | * 1. Redistributions of source code must retain the above copyright                             |  9360     4
    14       | *    notice, this list of conditions and the following disclaimer.                              |  9361     4
    15       | * 2. Redistributions in binary form must reproduce the above copyright                          |  9362     4
    16       | *    notice, this list of conditions and the following disclaimer in the                        |  9363     4
    17       | *    documentation and/or other materials provided with the distribution.                       |  9364     4
    18       | * 3. All advertising materials mentioning features or use of this software                      |  9365     4
    19       | *    must display the following acknowledgement:                                                |  9366     4
    20       | *      This product includes software developed by the University of                            |  9367     4
    21       | *      California, Berkeley and its contributors.                                               |  9368     4
    22       | * 4. Neither the name of the University nor the names of its contributors                       |  9369     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   190


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    23       | *    may be used to endorse or promote products derived from this software                      |  9370     4
    24       | *    without specific prior written permission.                                                 |  9371     4
    25       | *                                                                                               |  9372     4
    26       | * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND                       |  9373     4
    27       | * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE                         |  9374     4
    28       | * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE                    |  9375     4
    29       | * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE                      |  9376     4
    30       | * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL                    |  9377     4
    31       | * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS                       |  9378     4
    32       | * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)                         |  9379     4
    33       | * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT                    |  9380     4
    34       | * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY                     |  9381     4
    35       | * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF                        |  9382     4
    36       | * SUCH DAMAGE.                                                                                  |  9383     4
    37       | *                                                                                               |  9384     4
    38       | *      @(#)cdefs.h     8.8 (Berkeley) 1/9/95                                                    |  9385     4
    39       | */                                                                                              |  9386     4
    40       |                                                                                                 |  9387     4
    41       |#ifndef _SYS_CDEFS_H_                                                                            |  9388     4
    42       |#define _SYS_CDEFS_H_                                                                            |  9389     4
    43       |                                                                                                 |  9390     4
    44       |#if defined(__cplusplus)                                                                         |  9391     4
    45       |#define __BEGIN_DECLS   extern "C" {                                                             |  9392     4
    46       |#define __END_DECLS     }                                                                        |  9393     4
    47       |#else                                                                                            |  9394     4
    48       |#define __BEGIN_DECLS                                                                            |  9395     4
    49       |#define __END_DECLS                                                                              |  9396     4
    50       |#endif                                                                                           |  9397     4
    51       |                                                                                                 |  9398     4
    52       |/*                                                                                               |  9399     4
    53       | * This code has been put in place to help reduce the addition of                                |  9400     4
    54       | * compiler specific defines in the code.  It helps to aid in                                    |  9401     4
    55       | * having a compiler-agnostic source tree.                                                       |  9402     4
    56       | */                                                                                              |  9403     4
    57       |#define __CC_SUPPORTS_INLINE 1                                                                   |  9404     4
    58       |#define __CC_SUPPORTS___INLINE 1                                                                 |  9405     4
    59       |#define __CC_SUPPORTS___INLINE__ 1                                                               |  9406     4
    60       |                                                                                                 |  9407     4
    61       |#define __CC_SUPPORTS___FUNC__ 1                                                                 |  9408     4
    62       |                                                                                                 |  9409     4
    63       |                                                                                                 |  9410     4
    64       |/*                                                                                               |  9411     4
    65       | * The __CONCAT macro is used to concatenate parts of symbol names, e.g.                         |  9412     4
    66       | * with "#define OLD(foo) __CONCAT(old,foo)", OLD(foo) produces oldfoo.                          |  9413     4
    67       | * The __CONCAT macro is a bit tricky to use if it must work in non-ANSI                         |  9414     4
    68       | * mode -- there must be no spaces between its arguments, and for nested                         |  9415     4
    69       | * __CONCAT's, all the __CONCAT's must be at the left.  __CONCAT can also                        |  9416     4
    70       | * concatenate double-quoted strings produced by the __STRING macro, but                         |  9417     4
    71       | * this only works with ANSI C.                                                                  |  9418     4
    72       | *                                                                                               |  9419     4
    73       | * __XSTRING is like __STRING, but it expands any macros in its argument                         |  9420     4
    74       | * first.  It is only available with ANSI C.                                                     |  9421     4
    75       | */                                                                                              |  9422     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   191


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    76       |#if defined(__STDC__) || defined(__cplusplus)                                                    |  9423     4
    77       |#define __P(protos)     protos          /* full-blown ANSI C */                                  |  9424     4
    78       |#define __CONCAT1(x,y)  x ## y                                                                   |  9425     4
    79       |#define __CONCAT(x,y)   __CONCAT1(x,y)                                                           |  9426     4
    80       |#define __STRING(x)     #x              /* stringify without expanding x */                      |  9427     4
    81       |#define __XSTRING(x)    __STRING(x)     /* expand x, then stringify */                           |  9428     4
    82       |                                                                                                 |  9429     4
    83       |#define __const         const           /* define reserved names to standard */                  |  9430     4
    84       |#define __signed        signed                                                                   |  9431     4
    85       |#define __volatile      volatile                                                                 |  9432     4
    86       |#if defined(__cplusplus)                                                                         |  9433     4
    87       |#define __inline        inline          /* convert to C++ keyword */                             |  9434     4
    88       |#else                                                                                            |  9435     4
    89       |#define __inline        __inline__      /* Use the Systems/C keyword */                          |  9436     4
    90       |#endif /* !__cplusplus */                                                                        |  9437     4
    91       |                                                                                                 |  9438     4
    92       |#else   /* !(__STDC__ || __cplusplus) */                                                         |  9439     4
    93       |#define __P(protos)     ()              /* traditional C preprocessor */                         |  9440     4
    94       |#define __CONCAT(x,y)   x/**/y                                                                   |  9441     4
    95       |#define __STRING(x)     "x"                                                                      |  9442     4
    96       |                                                                                                 |  9443     4
    97       |#define __const                         /* delete pseudo-ANSI C keywords */                      |  9444     4
    98       |#define __inline                                                                                 |  9445     4
    99       |#define __signed                                                                                 |  9446     4
   100       |#define __volatile                                                                               |  9447     4
   101       |/*                                                                                               |  9448     4
   102       | * In non-ANSI C environments, new programs will want ANSI-only C keywords                       |  9449     4
   103       | * deleted from the program and old programs will want them left alone.                          |  9450     4
   104       | * When using a compiler other than Dignus, programs using the ANSI C keywords                   |  9451     4
   105       | * const, inline etc. as normal identifiers should define -DNO_ANSI_KEYWORDS.                    |  9452     4
   106       | */                                                                                              |  9453     4
   107       |#ifndef NO_ANSI_KEYWORDS                                                                         |  9454     4
   108       |#define const                           /* delete ANSI C keywords */                             |  9455     4
   109       |#define inline                                                                                   |  9456     4
   110       |#define signed                                                                                   |  9457     4
   111       |#define volatile                                                                                 |  9458     4
   112       |#endif  /* !NO_ANSI_KEYWORDS */                                                                  |  9459     4
   113       |#endif  /* !(__STDC__ || __cplusplus) */                                                         |  9460     4
   114       |                                                                                                 |  9461     4
   115       |/*                                                                                               |  9462     4
   116       | * Compiler-dependent macros to help declare dead (non-returning) and                            |  9463     4
   117       | * pure (no side effects) functions, and unused variables.                                       |  9464     4
   118       | */                                                                                              |  9465     4
   119       |#define __dead2 __attribute__((__noreturn__))                                                    |  9466     4
   120       |#define __pure  __attribute__((__pure__))                                                        |  9467     4
   121       |#define __pure2 __attribute__((__const__))                                                       |  9468     4
   122       |#define __unused                                                                                 |  9469     4
   123       |#define __aligned(x)                                                                             |  9470     4
   124       |#define __section(x)                                                                             |  9471     4
   125       |#define __nonnull(x)                                                                             |  9472     4
   126       |#define __used                                                                                   |  9473     4
   127       |                                                                                                 |  9474     4
   128       |#define __always_inline __attribute__((__always_inline__))                                       |  9475     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   192


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   129       |#define __noinline      __attribute__((__noinline__))                                            |  9476     4
   130       |                                                                                                 |  9477     4
   131       |#if __STDC_VERSION__ < 199901                                                                    |  9478     4
   132       |#define __func__  NULL                                                                           |  9479     4
   133       |#endif                                                                                           |  9480     4
   134       |                                                                                                 |  9481     4
   135       |#if !defined(__STRICT_ANSI__) || __STDC_VERSION__ >= 199901                                      |  9482     4
   136       |#define __LONG_LONG_SUPPORTED                                                                    |  9483     4
   137       |#endif                                                                                           |  9484     4
   138       |                                                                                                 |  9485     4
   139       |/* Systems/C recognizes they keyword __restrict__ in both                                        |  9486     4
   140       | * ANSI and non-ANSI mode to indicate C99 restrict semantics.                                    |  9487     4
   141       | **/                                                                                             |  9488     4
   142       |#ifndef __cplusplus                                                                              |  9489     4
   143       |#define __restrict __restrict__                                                                  |  9490     4
   144       |#else                                                                                            |  9491     4
   145       |/* Systems/C++ does not */                                                                       |  9492     4
   146       |#define __restrict                                                                               |  9493     4
   147       |#endif                                                                                           |  9494     4
   148       |                                                                                                 |  9495     4
   149       |/*                                                                                               |  9496     4
   150       | * define-away GCC-specific branch-prediction markers                                            |  9497     4
   151       | */                                                                                              |  9498     4
   152       |#define __predict_true(exp)     (exp)                                                            |  9499     4
   153       |#define __predict_false(exp)    (exp)                                                            |  9500     4
   154       |                                                                                                 |  9501     4
   155       |                                                                                                 |  9502     4
   156       |/*                                                                                               |  9503     4
   157       | * provide a definition of __offsetof(), <stddef.h> and                                          |  9504     4
   158       | * <sys/types.h> reference __offsetof().                                                         |  9505     4
   159       | *                                                                                               |  9506     4
   160       | * For Systems/C, the C compiler recognizes __offsetof(),                                        |  9507     4
   161       | * but we need a definition for versions of C++ prior to 1.85.52.                                |  9508     4
   162       | */                                                                                              |  9509     4
   163       |#if defined(__cplusplus) && (__SYSC_VER__ < (18600))                                             |  9510     4
   164       |#undef __offsetof                                                                                |  9511     4
   165       |#define __offsetof(type, field)  ((size_t)(&((type *)0)->field))                                 |  9512     4
   166       |#endif                                                                                           |  9513     4
   167       |                                                                                                 |  9514     4
   168       |/*                                                                                               |  9515     4
   169       | * Compiler-dependent macros to declare that functions take printf-like                          |  9516     4
   170       | * or scanf-like arguments.                                                                      |  9517     4
   171       | */                                                                                              |  9518     4
   172       |#define __printflike(fmtarg, firstvararg)                                                        |  9519     4
   173       |#define __scanflike(fmtarg, firstvararg)                                                         |  9520     4
   174       |#define __format_arg(fmtarg)                                                                     |  9521     4
   175       |#define __printf0like(fmtarg, firstvararg)                                                       |  9522     4
   176       |                                                                                                 |  9523     4
   177       |/* Compiler-dependent macros that rely on specific extensions. */                                |  9524     4
   178       |#define __printf0like(fmtarg, firstvararg)                                                       |  9525     4
   179       |                                                                                                 |  9526     4
   180       |  /* intended to generate a weak reference as an alias */                                        |  9527     4
   181       |#define __weak_reference(sym,alias)                                                              |  9528     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   193


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   182       |  /* If this symbol is refrenced, cause the linker to emit "msg" */                              |  9529     4
   183       |#define __warn_references(sym,msg)                                                               |  9530     4
   184       |                                                                                                 |  9531     4
   185       | /* This places the string into the resulting object.  It should */                              |  9532     4
   186       | /* probably become #pragma ident */                                                             |  9533     4
   187       |#define __IDSTRING(name,string) static const char name[] __unused = string                       |  9534     4
   188       |                                                                                                 |  9535     4
   189       |#ifndef __RCSID                                                                                  |  9536     4
   190       |#define __RCSID(s)      __IDSTRING(rcsid,s)                                                      |  9537     4
   191       |#endif                                                                                           |  9538     4
   192       |                                                                                                 |  9539     4
   193       |/*                                                                                               |  9540     4
   194       | * Embed the rcs id of a source file in the resulting library.                                   |  9541     4
   195       | * Usage:                                                                                        |  9542     4
   196       | *      __SYSCID("Id: src/sys/sys/cdefs.h,v 1.28.2.8 2002/09/18                                  |  9543     4
   197       |*                                            04:05:13 mikeh Exp $");                             |  9544     4
   198       | */                                                                                              |  9545     4
   199       |#ifndef __SYSCID                                                                                 |  9546     4
   200       |#if !defined(lint) && !defined(STRIP_SYSCID)                                                     |  9547     4
   201       |#define __SYSCID(s)     __IDSTRING(__CONCAT(__rcsid_,__LINE__),s)                                |  9548     4
   202       |#else                                                                                            |  9549     4
   203       |#define __SYSCID(s)     struct __hack                                                            |  9550     4
   204       |#endif                                                                                           |  9551     4
   205       |#endif                                                                                           |  9552     4
   206       |                                                                                                 |  9553     4
   207       |#ifndef __RCSID_SOURCE                                                                           |  9554     4
   208       |#define __RCSID_SOURCE(s) __IDSTRING(rcsid_source,s)                                             |  9555     4
   209       |#endif                                                                                           |  9556     4
   210       |                                                                                                 |  9557     4
   211       |#ifndef __COPYRIGHT                                                                              |  9558     4
   212       |#define __COPYRIGHT(s)  __IDSTRING(copyright,s)                                                  |  9559     4
   213       |#endif                                                                                           |  9560     4
   214       |                                                                                                 |  9561     4
   215       |                                                                                                 |  9562     4
   216       |#ifndef __DECONST                                                                                |  9563     4
   217       |#define __DECONST(type, var)    ((type)(uintptr_t)(const void *)(var))                           |  9564     4
   218       |#endif                                                                                           |  9565     4
   219       |                                                                                                 |  9566     4
   220       |#ifndef __DEVOLATILE                                                                             |  9567     4
   221       |#define __DEVOLATILE(type, var) ((type)(uintptr_t)(volatile void *)(var))                        |  9568     4
   222       |#endif                                                                                           |  9569     4
   223       |                                                                                                 |  9570     4
   224       |#ifndef __DEQUALIFY                                                                              |  9571     4
   225       |#define __DEQUALIFY(type, var)  ((type)(uintptr_t)(const volatile void *)(var))                  |  9572     4
   226       |#endif                                                                                           |  9573     4
   227       |                                                                                                 |  9574     4
   228       |                                                                                                 |  9575     4
   229       |/*-                                                                                              |  9576     4
   230       | * The following definitions are an extension of the behavior originally                         |  9577     4
   231       | * implemented in <sys/_posix.h>, but with a different level of granularity.                     |  9578     4
   232       | * POSIX.1 requires that the macros we test be defined before any standard                       |  9579     4
   233       | * header file is included.                                                                      |  9580     4
   234       | *                                                                                               |  9581     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   194


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   235       | * Here's a quick run-down of the versions:                                                      |  9582     4
   236       | *  defined(_POSIX_SOURCE)              1003.1-1988                                              |  9583     4
   237       | *  _POSIX_C_SOURCE == 1                1003.1-1990                                              |  9584     4
   238       | *  _POSIX_C_SOURCE == 2                1003.2-1992 C Language Binding Option                    |  9585     4
   239       | *  _POSIX_C_SOURCE == 199309           1003.1b-1993                                             |  9586     4
   240       | *  _POSIX_C_SOURCE == 199506           1003.1c-1995, 1003.1i-1995,                              |  9587     4
   241       | *                                      and the omnibus ISO/IEC 9945-1: 1996                     |  9588     4
   242       | *  _POSIX_C_SOURCE == 200112           1003.1-2001                                              |  9589     4
   243       | *  _POSIX_C_SOURCE == 200809           1003.1-2008                                              |  9590     4
   244       | *                                                                                               |  9591     4
   245       | * In addition, the X/Open Portability Guide, which is now the Single UNIX                       |  9592     4
   246       | * Specification, defines a feature-test macro which indicates the version of                    |  9593     4
   247       | * that specification, and which subsumes _POSIX_C_SOURCE.                                       |  9594     4
   248       | *                                                                                               |  9595     4
   249       | * Our macros begin with two underscores to avoid namespace screwage.                            |  9596     4
   250       | */                                                                                              |  9597     4
   251       |                                                                                                 |  9598     4
   252       |/*                                                                                               |  9599     4
   253       | * If no special macro was specified, make the DragonFly extensions                              |  9600     4
   254       | * available. Also make them available when requested so.                                        |  9601     4
   255       | */                                                                                              |  9602     4
   256       |#if (!defined(_POSIX_C_SOURCE) && !defined(_XOPEN_SOURCE) && \                                   |  9603     4
   257       |    !defined(_ANSI_SOURCE) && !defined(_C99_SOURCE)) || \                                        |  9604     4
   258       |    defined(_DRAGONFLY_SOURCE) || defined(_NETBSD_SOURCE)                                        |  9605     4
   259       |#define __DF_VISIBLE    1                                                                        |  9606     4
   260       |#else                                                                                            |  9607     4
   261       |#define __DF_VISIBLE    0                                                                        |  9608     4
   262       |#endif                                                                                           |  9609     4
   263       |                                                                                                 |  9610     4
   264       |/*-                                                                                              |  9611     4
   265       | * The following definitions are an extension of the behavior originally                         |  9612     4
   266       | * implemented in <sys/_posix.h>, but with a different level of granularity.                     |  9613     4
   267       | * POSIX.1 requires that the macros we test be defined before any standard                       |  9614     4
   268       | * header file is included.                                                                      |  9615     4
   269       | *                                                                                               |  9616     4
   270       | * Here's a quick run-down of the versions:                                                      |  9617     4
   271       | *  defined(_POSIX_SOURCE)              1003.1-1988                                              |  9618     4
   272       | *  _POSIX_C_SOURCE == 1                1003.1-1990                                              |  9619     4
   273       | *  _POSIX_C_SOURCE == 2                1003.2-1992 C Language Binding Option                    |  9620     4
   274       | *  _POSIX_C_SOURCE == 199309           1003.1b-1993                                             |  9621     4
   275       | *  _POSIX_C_SOURCE == 199506           1003.1c-1995, 1003.1i-1995,                              |  9622     4
   276       | *                                      and the omnibus ISO/IEC 9945-1: 1996                     |  9623     4
   277       | *  _POSIX_C_SOURCE == 200112           1003.1-2001                                              |  9624     4
   278       | *  _POSIX_C_SOURCE == 200809           1003.1-2008                                              |  9625     4
   279       | *                                                                                               |  9626     4
   280       | * In addition, the X/Open Portability Guide, which is now the Single UNIX                       |  9627     4
   281       | * Specification, defines a feature-test macro which indicates the version of                    |  9628     4
   282       | * that specification, and which subsumes _POSIX_C_SOURCE.                                       |  9629     4
   283       | *                                                                                               |  9630     4
   284       | * Our macros begin with two underscores to avoid namespace screwage.                            |  9631     4
   285       | */                                                                                              |  9632     4
   286       |                                                                                                 |  9633     4
   287       |/* Deal with IEEE Std. 1003.1-1990, in which _POSIX_C_SOURCE == 1. */                            |  9634     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   195


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   288       |#if defined(_POSIX_C_SOURCE) && _POSIX_C_SOURCE == 1                                             |  9635     4
   289       |#undef _POSIX_C_SOURCE          /* Probably illegal, but beyond caring now. */                   |  9636     4
   290       |#define _POSIX_C_SOURCE         199009                                                           |  9637     4
   291       |#endif                                                                                           |  9638     4
   292       |                                                                                                 |  9639     4
   293       |/* Deal with IEEE Std. 1003.2-1992, in which _POSIX_C_SOURCE == 2. */                            |  9640     4
   294       |#if defined(_POSIX_C_SOURCE) && _POSIX_C_SOURCE == 2                                             |  9641     4
   295       |#undef _POSIX_C_SOURCE                                                                           |  9642     4
   296       |#define _POSIX_C_SOURCE         199209                                                           |  9643     4
   297       |#endif                                                                                           |  9644     4
   298       |                                                                                                 |  9645     4
   299       |/* Deal with various X/Open Portability Guides and Single UNIX Spec. */                          |  9646     4
   300       |#ifdef _XOPEN_SOURCE                                                                             |  9647     4
   301       |#if _XOPEN_SOURCE - 0 >= 700                                                                     |  9648     4
   302       |#define __XSI_VISIBLE           700                                                              |  9649     4
   303       |#undef _POSIX_C_SOURCE                                                                           |  9650     4
   304       |#define _POSIX_C_SOURCE         200809                                                           |  9651     4
   305       |#elif _XOPEN_SOURCE - 0 >= 600                                                                   |  9652     4
   306       |#define __XSI_VISIBLE           600                                                              |  9653     4
   307       |#undef _POSIX_C_SOURCE                                                                           |  9654     4
   308       |#define _POSIX_C_SOURCE         200112                                                           |  9655     4
   309       |#elif _XOPEN_SOURCE - 0 >= 500                                                                   |  9656     4
   310       |#define __XSI_VISIBLE           500                                                              |  9657     4
   311       |#undef _POSIX_C_SOURCE                                                                           |  9658     4
   312       |#define _POSIX_C_SOURCE         199506                                                           |  9659     4
   313       |#endif                                                                                           |  9660     4
   314       |#endif                                                                                           |  9661     4
   315       |                                                                                                 |  9662     4
   316       |/*                                                                                               |  9663     4
   317       | * Deal with all versions of POSIX.  The ordering relative to the tests above is                 |  9664     4
   318       | * important.                                                                                    |  9665     4
   319       | */                                                                                              |  9666     4
   320       |#if defined(_POSIX_SOURCE) && !defined(_POSIX_C_SOURCE)                                          |  9667     4
   321       |#define _POSIX_C_SOURCE         198808                                                           |  9668     4
   322       |#endif                                                                                           |  9669     4
   323       |#ifdef _POSIX_C_SOURCE                                                                           |  9670     4
   324       |#if _POSIX_C_SOURCE >= 200809                                                                    |  9671     4
   325       |#define __POSIX_VISIBLE         200809                                                           |  9672     4
   326       |#define __ISO_C_VISIBLE         1999                                                             |  9673     4
   327       |#elif _POSIX_C_SOURCE >= 200112                                                                  |  9674     4
   328       |#define __POSIX_VISIBLE         200112                                                           |  9675     4
   329       |#define __ISO_C_VISIBLE         1999                                                             |  9676     4
   330       |#elif _POSIX_C_SOURCE >= 199506                                                                  |  9677     4
   331       |#define __POSIX_VISIBLE         199506                                                           |  9678     4
   332       |#define __ISO_C_VISIBLE         1990                                                             |  9679     4
   333       |#elif _POSIX_C_SOURCE >= 199309                                                                  |  9680     4
   334       |#define __POSIX_VISIBLE         199309                                                           |  9681     4
   335       |#define __ISO_C_VISIBLE         1990                                                             |  9682     4
   336       |#elif _POSIX_C_SOURCE >= 199209                                                                  |  9683     4
   337       |#define __POSIX_VISIBLE         199209                                                           |  9684     4
   338       |#define __ISO_C_VISIBLE         1990                                                             |  9685     4
   339       |#elif _POSIX_C_SOURCE >= 199009                                                                  |  9686     4
   340       |#define __POSIX_VISIBLE         199009                                                           |  9687     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   196


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   341       |#define __ISO_C_VISIBLE         1990                                                             |  9688     4
   342       |#else                                                                                            |  9689     4
   343       |#define __POSIX_VISIBLE         198808                                                           |  9690     4
   344       |#define __ISO_C_VISIBLE         0                                                                |  9691     4
   345       |#endif /* _POSIX_C_SOURCE */                                                                     |  9692     4
   346       |#else                                                                                            |  9693     4
   347       |/*-                                                                                              |  9694     4
   348       | * Deal with _ANSI_SOURCE:                                                                       |  9695     4
   349       | * If it is defined, and no other compilation environment is explicitly                          |  9696     4
   350       | * requested, then define our internal feature-test macros to zero.  This                        |  9697     4
   351       | * makes no difference to the preprocessor (undefined symbols in preprocessing                   |  9698     4
   352       | * expressions are defined to have value zero), but makes it more convenient for                 |  9699     4
   353       | * a test program to print out the values.                                                       |  9700     4
   354       | *                                                                                               |  9701     4
   355       | * If a program mistakenly defines _ANSI_SOURCE and some other macro such as                     |  9702     4
   356       | * _POSIX_C_SOURCE, we will assume that it wants the broader compilation                         |  9703     4
   357       | * environment (and in fact we will never get here).                                             |  9704     4
   358       | */                                                                                              |  9705     4
   359       |#if defined(_ANSI_SOURCE)       /* Hide almost everything. */                                    |  9706     4
   360       |#define __POSIX_VISIBLE         0                                                                |  9707     4
   361       |#define __XSI_VISIBLE           0                                                                |  9708     4
   362       |#define __BSD_VISIBLE           0                                                                |  9709     4
   363       |#define __ISO_C_VISIBLE         1990                                                             |  9710     4
   364       |#define __EXT1_VISIBLE          0                                                                |  9711     4
   365       |#elif defined(_C99_SOURCE)      /* Localism to specify strict C99 env. */                        |  9712     4
   366       |#define __POSIX_VISIBLE         0                                                                |  9713     4
   367       |#define __XSI_VISIBLE           0                                                                |  9714     4
   368       |#define __BSD_VISIBLE           0                                                                |  9715     4
   369       |#define __ISO_C_VISIBLE         1999                                                             |  9716     4
   370       |#define __EXT1_VISIBLE          0                                                                |  9717     4
   371       |#elif defined(_C11_SOURCE)      /* Localism to specify strict C11 env. */                        |  9718     4
   372       |#define __POSIX_VISIBLE         0                                                                |  9719     4
   373       |#define __XSI_VISIBLE           0                                                                |  9720     4
   374       |#define __BSD_VISIBLE           0                                                                |  9721     4
   375       |#define __ISO_C_VISIBLE         2011                                                             |  9722     4
   376       |#define __EXT1_VISIBLE          0                                                                |  9723     4
   377       |#else                           /* Default environment: show everything. */                      |  9724     4
   378       |#define __POSIX_VISIBLE         200809                                                           |  9725     4
   379       |#define __XSI_VISIBLE           700                                                              |  9726     4
   380       |#define __BSD_VISIBLE           1                                                                |  9727     4
   381       |#define __ISO_C_VISIBLE         2011                                                             |  9728     4
   382       |#define __EXT1_VISIBLE          1                                                                |  9729     4
   383       |#endif                                                                                           |  9730     4
   384       |#endif                                                                                           |  9731     4
   385       |                                                                                                 |  9732     4
   386       |/* User override __EXT1_VISIBLE */                                                               |  9733     4
   387       |#if defined(__STDC_WANT_LIB_EXT1__)                                                              |  9734     4
   388       |#undef  __EXT1_VISIBLE                                                                           |  9735     4
   389       |#if __STDC_WANT_LIB_EXT1__                                                                       |  9736     4
   390       |#define __EXT1_VISIBLE          1                                                                |  9737     4
   391       |#else                                                                                            |  9738     4
   392       |#define __EXT1_VISIBLE          0                                                                |  9739     4
   393       |#endif                                                                                           |  9740     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   197


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   394       |#endif /* __STDC_WANT_LIB_EXT1__ */                                                              |  9741     4
   395       |                                                                                                 |  9742     4
   396       |#if defined(__370__) || defined(__mips) || defined(__powerpc64__)                                |  9743     4
   397       |#define __NO_TLS 1                                                                               |  9744     4
   398       |#endif                                                                                           |  9745     4
   399       |                                                                                                 |  9746     4
   400       |                                                                                                 |  9747     4
   401       |/* easier than stripping __FBSDID() from sources - Greg 2008/07/28 */                            |  9748     4
   402       |#define __FBSDID(x)                                                                              |  9749     4
   403       |                                                                                                 |  9750     4
   404       |#endif /* !_SYS_CDEFS_H_ */                                                                      |  9751     4
   405       |#pragma pack(reset)                                                                              |  9752     4
    44       |#include <sys/_types.h>                                                                          |  9753    21
     1       |/* release 2.25.00 */                                                                            |  9754     6
     2       |#pragma pack()                                                                                   |  9755     6
     3       |/*-                                                                                              |  9756     6
     4       | * Copyright (c) 2002 Mike Barcroft <mike@FreeBSD.org>                                           |  9757     6
     5       | * All rights reserved.                                                                          |  9758     6
     6       | *                                                                                               |  9759     6
     7       | * Redistribution and use in source and binary forms, with or without                            |  9760     6
     8       | * modification, are permitted provided that the following conditions                            |  9761     6
     9       | * are met:                                                                                      |  9762     6
    10       | * 1. Redistributions of source code must retain the above copyright                             |  9763     6
    11       | *    notice, this list of conditions and the following disclaimer.                              |  9764     6
    12       | * 2. Redistributions in binary form must reproduce the above copyright                          |  9765     6
    13       | *    notice, this list of conditions and the following disclaimer in the                        |  9766     6
    14       | *    documentation and/or other materials provided with the distribution.                       |  9767     6
    15       | *                                                                                               |  9768     6
    16       | * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND                        |  9769     6
    17       | * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE                         |  9770     6
    18       | * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE                    |  9771     6
    19       | * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE                       |  9772     6
    20       | * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL                    |  9773     6
    21       | * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS                       |  9774     6
    22       | * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)                         |  9775     6
    23       | * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT                    |  9776     6
    24       | * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY                     |  9777     6
    25       | * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF                        |  9778     6
    26       | * SUCH DAMAGE.                                                                                  |  9779     6
    27       | *                                                                                               |  9780     6
    28       | * $FreeBSD: src/sys/sys/_types.h,v 1.21 2005/03/22 01:19:17 das Exp $                           |  9781     6
    29       | */                                                                                              |  9782     6
    30       |                                                                                                 |  9783     6
    31       |#ifndef _SYS__TYPES_H_                                                                           |  9784     6
    32       |#define _SYS__TYPES_H_                                                                           |  9785     6
    33       |                                                                                                 |  9786     6
    34       |#include <sys/cdefs.h>                                                                           |  9787     6
    35       |#include <machine/_types.h>                                                                      |  9788     6
    36       |                                                                                                 |  9789     6
    37       |/*                                                                                               |  9790     6
    38       | * Standard type definitions.                                                                    |  9791     6
    39       | */                                                                                              |  9792     6
    40       |typedef __int32_t       __blksize_t;    /* file block size */                                    |  9793     6
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   198


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    41       |typedef __int64_t       __blkcnt_t;     /* file block count */                                   |  9794     6
    42       |typedef __int32_t       __clockid_t;    /* clock_gettime()... */                                 |  9795     6
    43       |typedef __uint32_t      __fflags_t;     /* file flags */                                         |  9796     6
    44       |typedef __uint64_t      __fsblkcnt_t;                                                            |  9797     6
    45       |typedef __uint64_t      __fsfilcnt_t;                                                            |  9798     6
    46       |typedef __uint32_t      __gid_t;                                                                 |  9799     6
    47       |typedef __int64_t       __id_t;         /* can hold a gid_t, pid_t, or uid_t */                  |  9800     6
    48       |typedef __uint32_t      __ino_t;        /* inode number */                                       |  9801     6
    49       |typedef long            __key_t;        /* IPC key (for Sys V IPC) */                            |  9802     6
    50       |typedef __int32_t       __lwpid_t;      /* Thread ID (a.k.a. LWP) */                             |  9803     6
    51       |typedef __uint16_t      __mode_t;       /* permissions */                                        |  9804     6
    52       |typedef int             __nl_item;                                                               |  9805     6
    53       |typedef __uint16_t      __nlink_t;      /* link count */                                         |  9806     6
    54       |typedef __int64_t       __off_t;        /* file offset */                                        |  9807     6
    55       |typedef __int32_t       __pid_t;        /* process [group] */                                    |  9808     6
    56       |typedef __int64_t       __rlim_t;       /* resource limit - intentionally */                     |  9809     6
    57       |                                        /* signed, because of legacy code */                     |  9810     6
    58       |                                        /* that uses -1 for RLIM_INFINITY */                     |  9811     6
    59       |typedef __uint8_t       __sa_family_t;                                                           |  9812     6
    60       |typedef __uint32_t      __socklen_t;                                                             |  9813     6
    61       |typedef long            __suseconds_t;  /* microseconds (signed) */                              |  9814     6
    62       |typedef __int32_t       __timer_t;      /* timer_gettime()... */                                 |  9815     6
    63       |typedef __uint32_t      __uid_t;                                                                 |  9816     6
    64       |typedef unsigned int    __useconds_t;   /* microseconds (unsigned) */                            |  9817     6
    65       |                                                                                                 |  9818     6
    66       |/*                                                                                               |  9819     6
    67       | * Unusual type definitions.                                                                     |  9820     6
    68       | */                                                                                              |  9821     6
    69       |/*                                                                                               |  9822     6
    70       | * rune_t is declared to be an ``int'' instead of the more natural                               |  9823     6
    71       | * ``unsigned long'' or ``long''.  Two things are happening here.  It is not                     |  9824     6
    72       | * unsigned so that EOF (-1) can be naturally assigned to it and used.  Also,                    |  9825     6
    73       | * it looks like 10646 will be a 31 bit standard.  This means that if your                       |  9826     6
    74       | * ints cannot hold 32 bits, you will be in trouble.  The reason an int was                      |  9827     6
    75       | * chosen over a long is that the is*() and to*() routines take ints (says                       |  9828     6
    76       | * ANSI C), but they use __ct_rune_t instead of int.                                             |  9829     6
    77       | *                                                                                               |  9830     6
    78       | * NOTE: rune_t is not covered by ANSI nor other standards, and should not                       |  9831     6
    79       | * be instantiated outside of lib/libc/locale.  Use wchar_t.  wchar_t and                        |  9832     6
    80       | * rune_t must be the same type.  Also, wint_t must be no narrower than                          |  9833     6
    81       | * wchar_t, and should be able to hold all members of the largest                                |  9834     6
    82       | * character set plus one extra value (WEOF), and must be at least 16 bits.                      |  9835     6
    83       | */                                                                                              |  9836     6
    84       |#ifdef __cplusplus                                                                               |  9837     6
    85       |/* DCXX provides a builtin definition of wchar_t as a keyword, and it matters                    |  9838     6
    86       | * for parameter type matching even though it's the same type (4-byte signed) */                 |  9839     6
    87       |typedef wchar_t         __ct_rune_t;    /* arg type for ctype funcs */                           |  9840     6
    88       |#else                                                                                            |  9841     6
    89       |typedef int             __ct_rune_t;    /* arg type for ctype funcs */                           |  9842     6
    90       |#endif                                                                                           |  9843     6
    91       |typedef __ct_rune_t     __rune_t;       /* rune_t (see above) */                                 |  9844     6
    92       |typedef __ct_rune_t     __wchar_t;      /* wchar_t (see above) */                                |  9845     6
    93       |typedef __ct_rune_t     __wint_t;       /* wint_t (see above) */                                 |  9846     6
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   199


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    94       |                                                                                                 |  9847     6
    95       |/* In C++11, char16_t and char32_t are builtin types */                                          |  9848     6
    96       |#if defined(__cplusplus) && __cplusplus >= 201103L                                               |  9849     6
    97       |#define _CHAR16_T_DECLARED                                                                       |  9850     6
    98       |#define _CHAR32_T_DECLARED                                                                       |  9851     6
    99       |#endif                                                                                           |  9852     6
   100       |                                                                                                 |  9853     6
   101       |#if !defined(__cplusplus)                                                                        |  9854     6
   102       |typedef __uint_least16_t __char16_t;                                                             |  9855     6
   103       |typedef __uint_least32_t __char32_t;                                                             |  9856     6
   104       |#endif                                                                                           |  9857     6
   105       |                                                                                                 |  9858     6
   106       |                                                                                                 |  9859     6
   107       |typedef __uint32_t      __dev_t;        /* device number */                                      |  9860     6
   108       |                                                                                                 |  9861     6
   109       |typedef __uint32_t      __fixpt_t;      /* fixed point number */                                 |  9862     6
   110       |                                                                                                 |  9863     6
   111       |/*                                                                                               |  9864     6
   112       | * mbstate_t is an opaque object to keep conversion state during multibyte                       |  9865     6
   113       | * stream conversions.                                                                           |  9866     6
   114       | */                                                                                              |  9867     6
   115       |typedef union {                                                                                  |  9868     6
   116       |        char            __mbstate8[128];                                                         |  9869     6
   117       |        __int64_t       _mbstateL;      /* for alignment */                                      |  9870     6
   118       |} __mbstate_t;                                                                                   |  9871     6
   119       |                                                                                                 |  9872     6
   120       |#endif /* !_SYS__TYPES_H_ */                                                                     |  9873     6
   121       |#pragma pack(reset)                                                                              |  9874     6
    45       |#include <sys/_sigset.h>                                                                         |  9875    21
     1       |/* release 2.25.00 */                                                                            |  9876    10
     2       |#pragma pack()                                                                                   |  9877    10
     3       |/*-                                                                                              |  9878    10
     4       | * Copyright (c) 1982, 1986, 1989, 1991, 1993                                                    |  9879    10
     5       | *      The Regents of the University of California.  All rights reserved.                       |  9880    10
     6       | * (c) UNIX System Laboratories, Inc.                                                            |  9881    10
     7       | * All or some portions of this file are derived from material licensed                          |  9882    10
     8       | * to the University of California by American Telephone and Telegraph                           |  9883    10
     9       | * Co. or Unix System Laboratories, Inc. and are reproduced herein with                          |  9884    10
    10       | * the permission of UNIX System Laboratories, Inc.                                              |  9885    10
    11       | *                                                                                               |  9886    10
    12       | * Redistribution and use in source and binary forms, with or without                            |  9887    10
    13       | * modification, are permitted provided that the following conditions                            |  9888    10
    14       | * are met:                                                                                      |  9889    10
    15       | * 1. Redistributions of source code must retain the above copyright                             |  9890    10
    16       | *    notice, this list of conditions and the following disclaimer.                              |  9891    10
    17       | * 2. Redistributions in binary form must reproduce the above copyright                          |  9892    10
    18       | *    notice, this list of conditions and the following disclaimer in the                        |  9893    10
    19       | *    documentation and/or other materials provided with the distribution.                       |  9894    10
    20       | * 4. Neither the name of the University nor the names of its contributors                       |  9895    10
    21       | *    may be used to endorse or promote products derived from this software                      |  9896    10
    22       | *    without specific prior written permission.                                                 |  9897    10
    23       | *                                                                                               |  9898    10
    24       | * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND                       |  9899    10
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   200


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    25       | * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE                         |  9900    10
    26       | * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE                    |  9901    10
    27       | * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE                      |  9902    10
    28       | * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL                    |  9903    10
    29       | * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS                       |  9904    10
    30       | * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)                         |  9905    10
    31       | * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT                    |  9906    10
    32       | * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY                     |  9907    10
    33       | * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF                        |  9908    10
    34       | * SUCH DAMAGE.                                                                                  |  9909    10
    35       | *                                                                                               |  9910    10
    36       | *      @(#)signal.h    8.4 (Berkeley) 5/4/95                                                    |  9911    10
    37       | * $FreeBSD: src/sys/sys/_sigset.h,v 1.36 2005/01/07 02:29:23 imp Exp $                          |  9912    10
    38       | */                                                                                              |  9913    10
    39       |                                                                                                 |  9914    10
    40       |#ifndef _SYS__SIGSET_H_                                                                          |  9915    10
    41       |#define _SYS__SIGSET_H_                                                                          |  9916    10
    42       |                                                                                                 |  9917    10
    43       |/*                                                                                               |  9918    10
    44       | * sigset_t macros.                                                                              |  9919    10
    45       | */                                                                                              |  9920    10
    46       |#define _SIG_WORDS      4                                                                        |  9921    10
    47       |#define _SIG_MAXSIG     128                                                                      |  9922    10
    48       |#define _SIG_IDX(sig)   ((sig) - 1)                                                              |  9923    10
    49       |#define _SIG_WORD(sig)  (_SIG_IDX(sig) >> 5)                                                     |  9924    10
    50       |#define _SIG_BIT(sig)   (1 << (_SIG_IDX(sig) & 31))                                              |  9925    10
    51       |#define _SIG_VALID(sig) ((sig) <= _SIG_MAXSIG && (sig) > 0)                                      |  9926    10
    52       |                                                                                                 |  9927    10
    53       |typedef struct __sigset {                                                                        |  9928    10
    54       |        __uint32_t __bits[_SIG_WORDS];                                                           |  9929    10
    55       |} __sigset_t;                                                                                    |  9930    10
    56       |                                                                                                 |  9931    10
    57       |#if defined(_KERNEL) && defined(COMPAT_43)                                                       |  9932    10
    58       |typedef unsigned int osigset_t;                                                                  |  9933    10
    59       |#endif                                                                                           |  9934    10
    60       |                                                                                                 |  9935    10
    61       |#endif /* !_SYS__SIGSET_H_ */                                                                    |  9936    10
    62       |#pragma pack(reset)                                                                              |  9937    10
    46       |                                                                                                 |  9938    21
    47       |#include <machine/signal.h>     /* sig_atomic_t; trap codes; sigcontext */                       |  9939    21
     1       |/* release 2.25.00 */                                                                            |  9940    22
     2       |#pragma pack()                                                                                   |  9941    22
     3       |/*-                                                                                              |  9942    22
     4       | * Copyright (c) 1986, 1989, 1991, 1993                                                          |  9943    22
     5       | *      The Regents of the University of California.  All rights reserved.                       |  9944    22
     6       | *                                                                                               |  9945    22
     7       | * Redistribution and use in source and binary forms, with or without                            |  9946    22
     8       | * modification, are permitted provided that the following conditions                            |  9947    22
     9       | * are met:                                                                                      |  9948    22
    10       | * 1. Redistributions of source code must retain the above copyright                             |  9949    22
    11       | *    notice, this list of conditions and the following disclaimer.                              |  9950    22
    12       | * 2. Redistributions in binary form must reproduce the above copyright                          |  9951    22
    13       | *    notice, this list of conditions and the following disclaimer in the                        |  9952    22
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   201


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    14       | *    documentation and/or other materials provided with the distribution.                       |  9953    22
    15       | * 4. Neither the name of the University nor the names of its contributors                       |  9954    22
    16       | *    may be used to endorse or promote products derived from this software                      |  9955    22
    17       | *    without specific prior written permission.                                                 |  9956    22
    18       | *                                                                                               |  9957    22
    19       | * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND                       |  9958    22
    20       | * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE                         |  9959    22
    21       | * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE                    |  9960    22
    22       | * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE                      |  9961    22
    23       | * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL                    |  9962    22
    24       | * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS                       |  9963    22
    25       | * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)                         |  9964    22
    26       | * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT                    |  9965    22
    27       | * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY                     |  9966    22
    28       | * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF                        |  9967    22
    29       | * SUCH DAMAGE.                                                                                  |  9968    22
    30       | *                                                                                               |  9969    22
    31       | *      @(#)signal.h    8.1 (Berkeley) 6/11/93                                                   |  9970    22
    32       | */                                                                                              |  9971    22
    33       |                                                                                                 |  9972    22
    34       |#ifndef _MACHINE_SIGNAL_H_                                                                       |  9973    22
    35       |#define _MACHINE_SIGNAL_H_                                                                       |  9974    22
    36       |                                                                                                 |  9975    22
    37       |#include <sys/cdefs.h>                                                                           |  9976    22
     1       |/* release 2.25.00 */                                                                            |  9977     4
     2       |#pragma pack()                                                                                   |  9978     4
     3       |/*                                                                                               |  9979     4
     4       | * Copyright (c) 1991, 1993                                                                      |  9980     4
     5       | *      The Regents of the University of California.  All rights reserved.                       |  9981     4
     6       | *                                                                                               |  9982     4
     7       | * This code is derived from software contributed to Berkeley by                                 |  9983     4
     8       | * Berkeley Software Design, Inc.                                                                |  9984     4
     9       | *                                                                                               |  9985     4
    10       | * Redistribution and use in source and binary forms, with or without                            |  9986     4
    11       | * modification, are permitted provided that the following conditions                            |  9987     4
    12       | * are met:                                                                                      |  9988     4
    13       | * 1. Redistributions of source code must retain the above copyright                             |  9989     4
    14       | *    notice, this list of conditions and the following disclaimer.                              |  9990     4
    15       | * 2. Redistributions in binary form must reproduce the above copyright                          |  9991     4
    16       | *    notice, this list of conditions and the following disclaimer in the                        |  9992     4
    17       | *    documentation and/or other materials provided with the distribution.                       |  9993     4
    18       | * 3. All advertising materials mentioning features or use of this software                      |  9994     4
    19       | *    must display the following acknowledgement:                                                |  9995     4
    20       | *      This product includes software developed by the University of                            |  9996     4
    21       | *      California, Berkeley and its contributors.                                               |  9997     4
    22       | * 4. Neither the name of the University nor the names of its contributors                       |  9998     4
    23       | *    may be used to endorse or promote products derived from this software                      |  9999     4
    24       | *    without specific prior written permission.                                                 | 10000     4
    25       | *                                                                                               | 10001     4
    26       | * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND                       | 10002     4
    27       | * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE                         | 10003     4
    28       | * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE                    | 10004     4
    29       | * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE                      | 10005     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   202


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    30       | * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL                    | 10006     4
    31       | * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS                       | 10007     4
    32       | * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)                         | 10008     4
    33       | * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT                    | 10009     4
    34       | * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY                     | 10010     4
    35       | * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF                        | 10011     4
    36       | * SUCH DAMAGE.                                                                                  | 10012     4
    37       | *                                                                                               | 10013     4
    38       | *      @(#)cdefs.h     8.8 (Berkeley) 1/9/95                                                    | 10014     4
    39       | */                                                                                              | 10015     4
    40       |                                                                                                 | 10016     4
    41       |#ifndef _SYS_CDEFS_H_                                                                            | 10017     4
    42       |#define _SYS_CDEFS_H_                                                                            | 10018     4
    43       |                                                                                                 | 10019     4
    44       |#if defined(__cplusplus)                                                                         | 10020     4
    45       |#define __BEGIN_DECLS   extern "C" {                                                             | 10021     4
    46       |#define __END_DECLS     }                                                                        | 10022     4
    47       |#else                                                                                            | 10023     4
    48       |#define __BEGIN_DECLS                                                                            | 10024     4
    49       |#define __END_DECLS                                                                              | 10025     4
    50       |#endif                                                                                           | 10026     4
    51       |                                                                                                 | 10027     4
    52       |/*                                                                                               | 10028     4
    53       | * This code has been put in place to help reduce the addition of                                | 10029     4
    54       | * compiler specific defines in the code.  It helps to aid in                                    | 10030     4
    55       | * having a compiler-agnostic source tree.                                                       | 10031     4
    56       | */                                                                                              | 10032     4
    57       |#define __CC_SUPPORTS_INLINE 1                                                                   | 10033     4
    58       |#define __CC_SUPPORTS___INLINE 1                                                                 | 10034     4
    59       |#define __CC_SUPPORTS___INLINE__ 1                                                               | 10035     4
    60       |                                                                                                 | 10036     4
    61       |#define __CC_SUPPORTS___FUNC__ 1                                                                 | 10037     4
    62       |                                                                                                 | 10038     4
    63       |                                                                                                 | 10039     4
    64       |/*                                                                                               | 10040     4
    65       | * The __CONCAT macro is used to concatenate parts of symbol names, e.g.                         | 10041     4
    66       | * with "#define OLD(foo) __CONCAT(old,foo)", OLD(foo) produces oldfoo.                          | 10042     4
    67       | * The __CONCAT macro is a bit tricky to use if it must work in non-ANSI                         | 10043     4
    68       | * mode -- there must be no spaces between its arguments, and for nested                         | 10044     4
    69       | * __CONCAT's, all the __CONCAT's must be at the left.  __CONCAT can also                        | 10045     4
    70       | * concatenate double-quoted strings produced by the __STRING macro, but                         | 10046     4
    71       | * this only works with ANSI C.                                                                  | 10047     4
    72       | *                                                                                               | 10048     4
    73       | * __XSTRING is like __STRING, but it expands any macros in its argument                         | 10049     4
    74       | * first.  It is only available with ANSI C.                                                     | 10050     4
    75       | */                                                                                              | 10051     4
    76       |#if defined(__STDC__) || defined(__cplusplus)                                                    | 10052     4
    77       |#define __P(protos)     protos          /* full-blown ANSI C */                                  | 10053     4
    78       |#define __CONCAT1(x,y)  x ## y                                                                   | 10054     4
    79       |#define __CONCAT(x,y)   __CONCAT1(x,y)                                                           | 10055     4
    80       |#define __STRING(x)     #x              /* stringify without expanding x */                      | 10056     4
    81       |#define __XSTRING(x)    __STRING(x)     /* expand x, then stringify */                           | 10057     4
    82       |                                                                                                 | 10058     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   203


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    83       |#define __const         const           /* define reserved names to standard */                  | 10059     4
    84       |#define __signed        signed                                                                   | 10060     4
    85       |#define __volatile      volatile                                                                 | 10061     4
    86       |#if defined(__cplusplus)                                                                         | 10062     4
    87       |#define __inline        inline          /* convert to C++ keyword */                             | 10063     4
    88       |#else                                                                                            | 10064     4
    89       |#define __inline        __inline__      /* Use the Systems/C keyword */                          | 10065     4
    90       |#endif /* !__cplusplus */                                                                        | 10066     4
    91       |                                                                                                 | 10067     4
    92       |#else   /* !(__STDC__ || __cplusplus) */                                                         | 10068     4
    93       |#define __P(protos)     ()              /* traditional C preprocessor */                         | 10069     4
    94       |#define __CONCAT(x,y)   x/**/y                                                                   | 10070     4
    95       |#define __STRING(x)     "x"                                                                      | 10071     4
    96       |                                                                                                 | 10072     4
    97       |#define __const                         /* delete pseudo-ANSI C keywords */                      | 10073     4
    98       |#define __inline                                                                                 | 10074     4
    99       |#define __signed                                                                                 | 10075     4
   100       |#define __volatile                                                                               | 10076     4
   101       |/*                                                                                               | 10077     4
   102       | * In non-ANSI C environments, new programs will want ANSI-only C keywords                       | 10078     4
   103       | * deleted from the program and old programs will want them left alone.                          | 10079     4
   104       | * When using a compiler other than Dignus, programs using the ANSI C keywords                   | 10080     4
   105       | * const, inline etc. as normal identifiers should define -DNO_ANSI_KEYWORDS.                    | 10081     4
   106       | */                                                                                              | 10082     4
   107       |#ifndef NO_ANSI_KEYWORDS                                                                         | 10083     4
   108       |#define const                           /* delete ANSI C keywords */                             | 10084     4
   109       |#define inline                                                                                   | 10085     4
   110       |#define signed                                                                                   | 10086     4
   111       |#define volatile                                                                                 | 10087     4
   112       |#endif  /* !NO_ANSI_KEYWORDS */                                                                  | 10088     4
   113       |#endif  /* !(__STDC__ || __cplusplus) */                                                         | 10089     4
   114       |                                                                                                 | 10090     4
   115       |/*                                                                                               | 10091     4
   116       | * Compiler-dependent macros to help declare dead (non-returning) and                            | 10092     4
   117       | * pure (no side effects) functions, and unused variables.                                       | 10093     4
   118       | */                                                                                              | 10094     4
   119       |#define __dead2 __attribute__((__noreturn__))                                                    | 10095     4
   120       |#define __pure  __attribute__((__pure__))                                                        | 10096     4
   121       |#define __pure2 __attribute__((__const__))                                                       | 10097     4
   122       |#define __unused                                                                                 | 10098     4
   123       |#define __aligned(x)                                                                             | 10099     4
   124       |#define __section(x)                                                                             | 10100     4
   125       |#define __nonnull(x)                                                                             | 10101     4
   126       |#define __used                                                                                   | 10102     4
   127       |                                                                                                 | 10103     4
   128       |#define __always_inline __attribute__((__always_inline__))                                       | 10104     4
   129       |#define __noinline      __attribute__((__noinline__))                                            | 10105     4
   130       |                                                                                                 | 10106     4
   131       |#if __STDC_VERSION__ < 199901                                                                    | 10107     4
   132       |#define __func__  NULL                                                                           | 10108     4
   133       |#endif                                                                                           | 10109     4
   134       |                                                                                                 | 10110     4
   135       |#if !defined(__STRICT_ANSI__) || __STDC_VERSION__ >= 199901                                      | 10111     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   204


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   136       |#define __LONG_LONG_SUPPORTED                                                                    | 10112     4
   137       |#endif                                                                                           | 10113     4
   138       |                                                                                                 | 10114     4
   139       |/* Systems/C recognizes they keyword __restrict__ in both                                        | 10115     4
   140       | * ANSI and non-ANSI mode to indicate C99 restrict semantics.                                    | 10116     4
   141       | **/                                                                                             | 10117     4
   142       |#ifndef __cplusplus                                                                              | 10118     4
   143       |#define __restrict __restrict__                                                                  | 10119     4
   144       |#else                                                                                            | 10120     4
   145       |/* Systems/C++ does not */                                                                       | 10121     4
   146       |#define __restrict                                                                               | 10122     4
   147       |#endif                                                                                           | 10123     4
   148       |                                                                                                 | 10124     4
   149       |/*                                                                                               | 10125     4
   150       | * define-away GCC-specific branch-prediction markers                                            | 10126     4
   151       | */                                                                                              | 10127     4
   152       |#define __predict_true(exp)     (exp)                                                            | 10128     4
   153       |#define __predict_false(exp)    (exp)                                                            | 10129     4
   154       |                                                                                                 | 10130     4
   155       |                                                                                                 | 10131     4
   156       |/*                                                                                               | 10132     4
   157       | * provide a definition of __offsetof(), <stddef.h> and                                          | 10133     4
   158       | * <sys/types.h> reference __offsetof().                                                         | 10134     4
   159       | *                                                                                               | 10135     4
   160       | * For Systems/C, the C compiler recognizes __offsetof(),                                        | 10136     4
   161       | * but we need a definition for versions of C++ prior to 1.85.52.                                | 10137     4
   162       | */                                                                                              | 10138     4
   163       |#if defined(__cplusplus) && (__SYSC_VER__ < (18600))                                             | 10139     4
   164       |#undef __offsetof                                                                                | 10140     4
   165       |#define __offsetof(type, field)  ((size_t)(&((type *)0)->field))                                 | 10141     4
   166       |#endif                                                                                           | 10142     4
   167       |                                                                                                 | 10143     4
   168       |/*                                                                                               | 10144     4
   169       | * Compiler-dependent macros to declare that functions take printf-like                          | 10145     4
   170       | * or scanf-like arguments.                                                                      | 10146     4
   171       | */                                                                                              | 10147     4
   172       |#define __printflike(fmtarg, firstvararg)                                                        | 10148     4
   173       |#define __scanflike(fmtarg, firstvararg)                                                         | 10149     4
   174       |#define __format_arg(fmtarg)                                                                     | 10150     4
   175       |#define __printf0like(fmtarg, firstvararg)                                                       | 10151     4
   176       |                                                                                                 | 10152     4
   177       |/* Compiler-dependent macros that rely on specific extensions. */                                | 10153     4
   178       |#define __printf0like(fmtarg, firstvararg)                                                       | 10154     4
   179       |                                                                                                 | 10155     4
   180       |  /* intended to generate a weak reference as an alias */                                        | 10156     4
   181       |#define __weak_reference(sym,alias)                                                              | 10157     4
   182       |  /* If this symbol is refrenced, cause the linker to emit "msg" */                              | 10158     4
   183       |#define __warn_references(sym,msg)                                                               | 10159     4
   184       |                                                                                                 | 10160     4
   185       | /* This places the string into the resulting object.  It should */                              | 10161     4
   186       | /* probably become #pragma ident */                                                             | 10162     4
   187       |#define __IDSTRING(name,string) static const char name[] __unused = string                       | 10163     4
   188       |                                                                                                 | 10164     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   205


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   189       |#ifndef __RCSID                                                                                  | 10165     4
   190       |#define __RCSID(s)      __IDSTRING(rcsid,s)                                                      | 10166     4
   191       |#endif                                                                                           | 10167     4
   192       |                                                                                                 | 10168     4
   193       |/*                                                                                               | 10169     4
   194       | * Embed the rcs id of a source file in the resulting library.                                   | 10170     4
   195       | * Usage:                                                                                        | 10171     4
   196       | *      __SYSCID("Id: src/sys/sys/cdefs.h,v 1.28.2.8 2002/09/18                                  | 10172     4
   197       |*                                            04:05:13 mikeh Exp $");                             | 10173     4
   198       | */                                                                                              | 10174     4
   199       |#ifndef __SYSCID                                                                                 | 10175     4
   200       |#if !defined(lint) && !defined(STRIP_SYSCID)                                                     | 10176     4
   201       |#define __SYSCID(s)     __IDSTRING(__CONCAT(__rcsid_,__LINE__),s)                                | 10177     4
   202       |#else                                                                                            | 10178     4
   203       |#define __SYSCID(s)     struct __hack                                                            | 10179     4
   204       |#endif                                                                                           | 10180     4
   205       |#endif                                                                                           | 10181     4
   206       |                                                                                                 | 10182     4
   207       |#ifndef __RCSID_SOURCE                                                                           | 10183     4
   208       |#define __RCSID_SOURCE(s) __IDSTRING(rcsid_source,s)                                             | 10184     4
   209       |#endif                                                                                           | 10185     4
   210       |                                                                                                 | 10186     4
   211       |#ifndef __COPYRIGHT                                                                              | 10187     4
   212       |#define __COPYRIGHT(s)  __IDSTRING(copyright,s)                                                  | 10188     4
   213       |#endif                                                                                           | 10189     4
   214       |                                                                                                 | 10190     4
   215       |                                                                                                 | 10191     4
   216       |#ifndef __DECONST                                                                                | 10192     4
   217       |#define __DECONST(type, var)    ((type)(uintptr_t)(const void *)(var))                           | 10193     4
   218       |#endif                                                                                           | 10194     4
   219       |                                                                                                 | 10195     4
   220       |#ifndef __DEVOLATILE                                                                             | 10196     4
   221       |#define __DEVOLATILE(type, var) ((type)(uintptr_t)(volatile void *)(var))                        | 10197     4
   222       |#endif                                                                                           | 10198     4
   223       |                                                                                                 | 10199     4
   224       |#ifndef __DEQUALIFY                                                                              | 10200     4
   225       |#define __DEQUALIFY(type, var)  ((type)(uintptr_t)(const volatile void *)(var))                  | 10201     4
   226       |#endif                                                                                           | 10202     4
   227       |                                                                                                 | 10203     4
   228       |                                                                                                 | 10204     4
   229       |/*-                                                                                              | 10205     4
   230       | * The following definitions are an extension of the behavior originally                         | 10206     4
   231       | * implemented in <sys/_posix.h>, but with a different level of granularity.                     | 10207     4
   232       | * POSIX.1 requires that the macros we test be defined before any standard                       | 10208     4
   233       | * header file is included.                                                                      | 10209     4
   234       | *                                                                                               | 10210     4
   235       | * Here's a quick run-down of the versions:                                                      | 10211     4
   236       | *  defined(_POSIX_SOURCE)              1003.1-1988                                              | 10212     4
   237       | *  _POSIX_C_SOURCE == 1                1003.1-1990                                              | 10213     4
   238       | *  _POSIX_C_SOURCE == 2                1003.2-1992 C Language Binding Option                    | 10214     4
   239       | *  _POSIX_C_SOURCE == 199309           1003.1b-1993                                             | 10215     4
   240       | *  _POSIX_C_SOURCE == 199506           1003.1c-1995, 1003.1i-1995,                              | 10216     4
   241       | *                                      and the omnibus ISO/IEC 9945-1: 1996                     | 10217     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   206


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   242       | *  _POSIX_C_SOURCE == 200112           1003.1-2001                                              | 10218     4
   243       | *  _POSIX_C_SOURCE == 200809           1003.1-2008                                              | 10219     4
   244       | *                                                                                               | 10220     4
   245       | * In addition, the X/Open Portability Guide, which is now the Single UNIX                       | 10221     4
   246       | * Specification, defines a feature-test macro which indicates the version of                    | 10222     4
   247       | * that specification, and which subsumes _POSIX_C_SOURCE.                                       | 10223     4
   248       | *                                                                                               | 10224     4
   249       | * Our macros begin with two underscores to avoid namespace screwage.                            | 10225     4
   250       | */                                                                                              | 10226     4
   251       |                                                                                                 | 10227     4
   252       |/*                                                                                               | 10228     4
   253       | * If no special macro was specified, make the DragonFly extensions                              | 10229     4
   254       | * available. Also make them available when requested so.                                        | 10230     4
   255       | */                                                                                              | 10231     4
   256       |#if (!defined(_POSIX_C_SOURCE) && !defined(_XOPEN_SOURCE) && \                                   | 10232     4
   257       |    !defined(_ANSI_SOURCE) && !defined(_C99_SOURCE)) || \                                        | 10233     4
   258       |    defined(_DRAGONFLY_SOURCE) || defined(_NETBSD_SOURCE)                                        | 10234     4
   259       |#define __DF_VISIBLE    1                                                                        | 10235     4
   260       |#else                                                                                            | 10236     4
   261       |#define __DF_VISIBLE    0                                                                        | 10237     4
   262       |#endif                                                                                           | 10238     4
   263       |                                                                                                 | 10239     4
   264       |/*-                                                                                              | 10240     4
   265       | * The following definitions are an extension of the behavior originally                         | 10241     4
   266       | * implemented in <sys/_posix.h>, but with a different level of granularity.                     | 10242     4
   267       | * POSIX.1 requires that the macros we test be defined before any standard                       | 10243     4
   268       | * header file is included.                                                                      | 10244     4
   269       | *                                                                                               | 10245     4
   270       | * Here's a quick run-down of the versions:                                                      | 10246     4
   271       | *  defined(_POSIX_SOURCE)              1003.1-1988                                              | 10247     4
   272       | *  _POSIX_C_SOURCE == 1                1003.1-1990                                              | 10248     4
   273       | *  _POSIX_C_SOURCE == 2                1003.2-1992 C Language Binding Option                    | 10249     4
   274       | *  _POSIX_C_SOURCE == 199309           1003.1b-1993                                             | 10250     4
   275       | *  _POSIX_C_SOURCE == 199506           1003.1c-1995, 1003.1i-1995,                              | 10251     4
   276       | *                                      and the omnibus ISO/IEC 9945-1: 1996                     | 10252     4
   277       | *  _POSIX_C_SOURCE == 200112           1003.1-2001                                              | 10253     4
   278       | *  _POSIX_C_SOURCE == 200809           1003.1-2008                                              | 10254     4
   279       | *                                                                                               | 10255     4
   280       | * In addition, the X/Open Portability Guide, which is now the Single UNIX                       | 10256     4
   281       | * Specification, defines a feature-test macro which indicates the version of                    | 10257     4
   282       | * that specification, and which subsumes _POSIX_C_SOURCE.                                       | 10258     4
   283       | *                                                                                               | 10259     4
   284       | * Our macros begin with two underscores to avoid namespace screwage.                            | 10260     4
   285       | */                                                                                              | 10261     4
   286       |                                                                                                 | 10262     4
   287       |/* Deal with IEEE Std. 1003.1-1990, in which _POSIX_C_SOURCE == 1. */                            | 10263     4
   288       |#if defined(_POSIX_C_SOURCE) && _POSIX_C_SOURCE == 1                                             | 10264     4
   289       |#undef _POSIX_C_SOURCE          /* Probably illegal, but beyond caring now. */                   | 10265     4
   290       |#define _POSIX_C_SOURCE         199009                                                           | 10266     4
   291       |#endif                                                                                           | 10267     4
   292       |                                                                                                 | 10268     4
   293       |/* Deal with IEEE Std. 1003.2-1992, in which _POSIX_C_SOURCE == 2. */                            | 10269     4
   294       |#if defined(_POSIX_C_SOURCE) && _POSIX_C_SOURCE == 2                                             | 10270     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   207


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   295       |#undef _POSIX_C_SOURCE                                                                           | 10271     4
   296       |#define _POSIX_C_SOURCE         199209                                                           | 10272     4
   297       |#endif                                                                                           | 10273     4
   298       |                                                                                                 | 10274     4
   299       |/* Deal with various X/Open Portability Guides and Single UNIX Spec. */                          | 10275     4
   300       |#ifdef _XOPEN_SOURCE                                                                             | 10276     4
   301       |#if _XOPEN_SOURCE - 0 >= 700                                                                     | 10277     4
   302       |#define __XSI_VISIBLE           700                                                              | 10278     4
   303       |#undef _POSIX_C_SOURCE                                                                           | 10279     4
   304       |#define _POSIX_C_SOURCE         200809                                                           | 10280     4
   305       |#elif _XOPEN_SOURCE - 0 >= 600                                                                   | 10281     4
   306       |#define __XSI_VISIBLE           600                                                              | 10282     4
   307       |#undef _POSIX_C_SOURCE                                                                           | 10283     4
   308       |#define _POSIX_C_SOURCE         200112                                                           | 10284     4
   309       |#elif _XOPEN_SOURCE - 0 >= 500                                                                   | 10285     4
   310       |#define __XSI_VISIBLE           500                                                              | 10286     4
   311       |#undef _POSIX_C_SOURCE                                                                           | 10287     4
   312       |#define _POSIX_C_SOURCE         199506                                                           | 10288     4
   313       |#endif                                                                                           | 10289     4
   314       |#endif                                                                                           | 10290     4
   315       |                                                                                                 | 10291     4
   316       |/*                                                                                               | 10292     4
   317       | * Deal with all versions of POSIX.  The ordering relative to the tests above is                 | 10293     4
   318       | * important.                                                                                    | 10294     4
   319       | */                                                                                              | 10295     4
   320       |#if defined(_POSIX_SOURCE) && !defined(_POSIX_C_SOURCE)                                          | 10296     4
   321       |#define _POSIX_C_SOURCE         198808                                                           | 10297     4
   322       |#endif                                                                                           | 10298     4
   323       |#ifdef _POSIX_C_SOURCE                                                                           | 10299     4
   324       |#if _POSIX_C_SOURCE >= 200809                                                                    | 10300     4
   325       |#define __POSIX_VISIBLE         200809                                                           | 10301     4
   326       |#define __ISO_C_VISIBLE         1999                                                             | 10302     4
   327       |#elif _POSIX_C_SOURCE >= 200112                                                                  | 10303     4
   328       |#define __POSIX_VISIBLE         200112                                                           | 10304     4
   329       |#define __ISO_C_VISIBLE         1999                                                             | 10305     4
   330       |#elif _POSIX_C_SOURCE >= 199506                                                                  | 10306     4
   331       |#define __POSIX_VISIBLE         199506                                                           | 10307     4
   332       |#define __ISO_C_VISIBLE         1990                                                             | 10308     4
   333       |#elif _POSIX_C_SOURCE >= 199309                                                                  | 10309     4
   334       |#define __POSIX_VISIBLE         199309                                                           | 10310     4
   335       |#define __ISO_C_VISIBLE         1990                                                             | 10311     4
   336       |#elif _POSIX_C_SOURCE >= 199209                                                                  | 10312     4
   337       |#define __POSIX_VISIBLE         199209                                                           | 10313     4
   338       |#define __ISO_C_VISIBLE         1990                                                             | 10314     4
   339       |#elif _POSIX_C_SOURCE >= 199009                                                                  | 10315     4
   340       |#define __POSIX_VISIBLE         199009                                                           | 10316     4
   341       |#define __ISO_C_VISIBLE         1990                                                             | 10317     4
   342       |#else                                                                                            | 10318     4
   343       |#define __POSIX_VISIBLE         198808                                                           | 10319     4
   344       |#define __ISO_C_VISIBLE         0                                                                | 10320     4
   345       |#endif /* _POSIX_C_SOURCE */                                                                     | 10321     4
   346       |#else                                                                                            | 10322     4
   347       |/*-                                                                                              | 10323     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   208


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   348       | * Deal with _ANSI_SOURCE:                                                                       | 10324     4
   349       | * If it is defined, and no other compilation environment is explicitly                          | 10325     4
   350       | * requested, then define our internal feature-test macros to zero.  This                        | 10326     4
   351       | * makes no difference to the preprocessor (undefined symbols in preprocessing                   | 10327     4
   352       | * expressions are defined to have value zero), but makes it more convenient for                 | 10328     4
   353       | * a test program to print out the values.                                                       | 10329     4
   354       | *                                                                                               | 10330     4
   355       | * If a program mistakenly defines _ANSI_SOURCE and some other macro such as                     | 10331     4
   356       | * _POSIX_C_SOURCE, we will assume that it wants the broader compilation                         | 10332     4
   357       | * environment (and in fact we will never get here).                                             | 10333     4
   358       | */                                                                                              | 10334     4
   359       |#if defined(_ANSI_SOURCE)       /* Hide almost everything. */                                    | 10335     4
   360       |#define __POSIX_VISIBLE         0                                                                | 10336     4
   361       |#define __XSI_VISIBLE           0                                                                | 10337     4
   362       |#define __BSD_VISIBLE           0                                                                | 10338     4
   363       |#define __ISO_C_VISIBLE         1990                                                             | 10339     4
   364       |#define __EXT1_VISIBLE          0                                                                | 10340     4
   365       |#elif defined(_C99_SOURCE)      /* Localism to specify strict C99 env. */                        | 10341     4
   366       |#define __POSIX_VISIBLE         0                                                                | 10342     4
   367       |#define __XSI_VISIBLE           0                                                                | 10343     4
   368       |#define __BSD_VISIBLE           0                                                                | 10344     4
   369       |#define __ISO_C_VISIBLE         1999                                                             | 10345     4
   370       |#define __EXT1_VISIBLE          0                                                                | 10346     4
   371       |#elif defined(_C11_SOURCE)      /* Localism to specify strict C11 env. */                        | 10347     4
   372       |#define __POSIX_VISIBLE         0                                                                | 10348     4
   373       |#define __XSI_VISIBLE           0                                                                | 10349     4
   374       |#define __BSD_VISIBLE           0                                                                | 10350     4
   375       |#define __ISO_C_VISIBLE         2011                                                             | 10351     4
   376       |#define __EXT1_VISIBLE          0                                                                | 10352     4
   377       |#else                           /* Default environment: show everything. */                      | 10353     4
   378       |#define __POSIX_VISIBLE         200809                                                           | 10354     4
   379       |#define __XSI_VISIBLE           700                                                              | 10355     4
   380       |#define __BSD_VISIBLE           1                                                                | 10356     4
   381       |#define __ISO_C_VISIBLE         2011                                                             | 10357     4
   382       |#define __EXT1_VISIBLE          1                                                                | 10358     4
   383       |#endif                                                                                           | 10359     4
   384       |#endif                                                                                           | 10360     4
   385       |                                                                                                 | 10361     4
   386       |/* User override __EXT1_VISIBLE */                                                               | 10362     4
   387       |#if defined(__STDC_WANT_LIB_EXT1__)                                                              | 10363     4
   388       |#undef  __EXT1_VISIBLE                                                                           | 10364     4
   389       |#if __STDC_WANT_LIB_EXT1__                                                                       | 10365     4
   390       |#define __EXT1_VISIBLE          1                                                                | 10366     4
   391       |#else                                                                                            | 10367     4
   392       |#define __EXT1_VISIBLE          0                                                                | 10368     4
   393       |#endif                                                                                           | 10369     4
   394       |#endif /* __STDC_WANT_LIB_EXT1__ */                                                              | 10370     4
   395       |                                                                                                 | 10371     4
   396       |#if defined(__370__) || defined(__mips) || defined(__powerpc64__)                                | 10372     4
   397       |#define __NO_TLS 1                                                                               | 10373     4
   398       |#endif                                                                                           | 10374     4
   399       |                                                                                                 | 10375     4
   400       |                                                                                                 | 10376     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   209


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   401       |/* easier than stripping __FBSDID() from sources - Greg 2008/07/28 */                            | 10377     4
   402       |#define __FBSDID(x)                                                                              | 10378     4
   403       |                                                                                                 | 10379     4
   404       |#endif /* !_SYS_CDEFS_H_ */                                                                      | 10380     4
   405       |#pragma pack(reset)                                                                              | 10381     4
    38       |#include <sys/_sigset.h>                                                                         | 10382    22
     1       |/* release 2.25.00 */                                                                            | 10383    10
     2       |#pragma pack()                                                                                   | 10384    10
     3       |/*-                                                                                              | 10385    10
     4       | * Copyright (c) 1982, 1986, 1989, 1991, 1993                                                    | 10386    10
     5       | *      The Regents of the University of California.  All rights reserved.                       | 10387    10
     6       | * (c) UNIX System Laboratories, Inc.                                                            | 10388    10
     7       | * All or some portions of this file are derived from material licensed                          | 10389    10
     8       | * to the University of California by American Telephone and Telegraph                           | 10390    10
     9       | * Co. or Unix System Laboratories, Inc. and are reproduced herein with                          | 10391    10
    10       | * the permission of UNIX System Laboratories, Inc.                                              | 10392    10
    11       | *                                                                                               | 10393    10
    12       | * Redistribution and use in source and binary forms, with or without                            | 10394    10
    13       | * modification, are permitted provided that the following conditions                            | 10395    10
    14       | * are met:                                                                                      | 10396    10
    15       | * 1. Redistributions of source code must retain the above copyright                             | 10397    10
    16       | *    notice, this list of conditions and the following disclaimer.                              | 10398    10
    17       | * 2. Redistributions in binary form must reproduce the above copyright                          | 10399    10
    18       | *    notice, this list of conditions and the following disclaimer in the                        | 10400    10
    19       | *    documentation and/or other materials provided with the distribution.                       | 10401    10
    20       | * 4. Neither the name of the University nor the names of its contributors                       | 10402    10
    21       | *    may be used to endorse or promote products derived from this software                      | 10403    10
    22       | *    without specific prior written permission.                                                 | 10404    10
    23       | *                                                                                               | 10405    10
    24       | * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND                       | 10406    10
    25       | * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE                         | 10407    10
    26       | * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE                    | 10408    10
    27       | * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE                      | 10409    10
    28       | * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL                    | 10410    10
    29       | * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS                       | 10411    10
    30       | * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)                         | 10412    10
    31       | * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT                    | 10413    10
    32       | * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY                     | 10414    10
    33       | * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF                        | 10415    10
    34       | * SUCH DAMAGE.                                                                                  | 10416    10
    35       | *                                                                                               | 10417    10
    36       | *      @(#)signal.h    8.4 (Berkeley) 5/4/95                                                    | 10418    10
    37       | * $FreeBSD: src/sys/sys/_sigset.h,v 1.36 2005/01/07 02:29:23 imp Exp $                          | 10419    10
    38       | */                                                                                              | 10420    10
    39       |                                                                                                 | 10421    10
    40       |#ifndef _SYS__SIGSET_H_                                                                          | 10422    10
    41       |#define _SYS__SIGSET_H_                                                                          | 10423    10
    42       |                                                                                                 | 10424    10
    43       |/*                                                                                               | 10425    10
    44       | * sigset_t macros.                                                                              | 10426    10
    45       | */                                                                                              | 10427    10
    46       |#define _SIG_WORDS      4                                                                        | 10428    10
    47       |#define _SIG_MAXSIG     128                                                                      | 10429    10
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   210


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    48       |#define _SIG_IDX(sig)   ((sig) - 1)                                                              | 10430    10
    49       |#define _SIG_WORD(sig)  (_SIG_IDX(sig) >> 5)                                                     | 10431    10
    50       |#define _SIG_BIT(sig)   (1 << (_SIG_IDX(sig) & 31))                                              | 10432    10
    51       |#define _SIG_VALID(sig) ((sig) <= _SIG_MAXSIG && (sig) > 0)                                      | 10433    10
    52       |                                                                                                 | 10434    10
    53       |typedef struct __sigset {                                                                        | 10435    10
    54       |        __uint32_t __bits[_SIG_WORDS];                                                           | 10436    10
    55       |} __sigset_t;                                                                                    | 10437    10
    56       |                                                                                                 | 10438    10
    57       |#if defined(_KERNEL) && defined(COMPAT_43)                                                       | 10439    10
    58       |typedef unsigned int osigset_t;                                                                  | 10440    10
    59       |#endif                                                                                           | 10441    10
    60       |                                                                                                 | 10442    10
    61       |#endif /* !_SYS__SIGSET_H_ */                                                                    | 10443    10
    62       |#pragma pack(reset)                                                                              | 10444    10
    39       |                                                                                                 | 10445    22
    40       |/*                                                                                               | 10446    22
    41       | * Machine-dependent signal definitions                                                          | 10447    22
    42       | */                                                                                              | 10448    22
    43       |                                                                                                 | 10449    22
    44       |typedef int sig_atomic_t;                                                                        | 10450    22
    45       |                                                                                                 | 10451    22
    46       |#if __XSI_VISIBLE                                                                                | 10452    22
    47       |/*                                                                                               | 10453    22
    48       | *  The absolute minimum stack size for a Dignus stack                                           | 10454    22
    49       | * is the size of the DSAB control block, plus the size                                          | 10455    22
    50       | * of the stack overflow area (1024) plus 4 times the                                            | 10456    22
    51       | * size of the minimum save area.   For 64 bit that                                              | 10457    22
    52       | * would be:                                                                                     | 10458    22
    53       | *   ((((0xf8 + 1024) + (0xa8*4))+7)&~7) = 1944                                                  | 10459    22
    54       | * and for 31-bit it would be:                                                                   | 10460    22
    55       | *   ((((0x80 + 1024) + (0x50*4))+7)&~7) = 1472                                                  | 10461    22
    56       | * This is generally way too small to do anything                                                | 10462    22
    57       | * beyond an empty function; so we set the smallest                                              | 10463    22
    58       | * size to 1 page (4k).                                                                          | 10464    22
    59       | */                                                                                              | 10465    22
    59       +                                                                                                 + 10465    22
    60       |#if __SYSC_64BIT__                                                                               | 10466    22
    61       |#define MINSIGSTKSZ     (4096)                                                                   | 10467    22
    62       |#else                                                                                            | 10468    22
    63       |#define MINSIGSTKSZ     (4096)                                                                   | 10469    22
    64       |#endif                                                                                           | 10470    22
    65       |#endif                                                                                           | 10471    22
    66       |                                                                                                 | 10472    22
    66       +                                                                                                 + 10472    22
    67       |#if __BSD_VISIBLE                                                                                | 10473    22
    68       |#include <machine/trap.h>       /* codes for SIGILL, SIGFPE */                                   | 10474    22
     1       |/* release 2.25.00 */                                                                            | 10475    23
     1       +                                                                                                 + 10475    23
     2       |#pragma pack()                                                                                   | 10476    23
     3       |#ifndef _MACHINE_TRAP_H_                                                                         | 10477    23
     4       |#define _MACHINE_TRAP_H_                                                                         | 10478    23
     5       |                                                                                                 | 10479    23
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   211


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
     6       |  /* Hardware trap codes (we have none for now) */                                               | 10480    23
     7       |                                                                                                 | 10481    23
     8       |#endif /* !_MACHINE_TRAP_H_ */                                                                   | 10482    23
     9       |#pragma pack(reset)                                                                              | 10483    23
    69       |#endif /* __BSD_VISIBLE */                                                                       | 10484    22
    70       |                                                                                                 | 10485    22
    71       |#endif /* !_MACHINE_SIGNAL_H_ */                                                                 | 10486    22
    72       |#pragma pack(reset)                                                                              | 10487    22
    48       |                                                                                                 | 10488    21
    49       |/*                                                                                               | 10489    21
    50       | * System defined signals.                                                                       | 10490    21
    51       | */                                                                                              | 10491    21
    52       |#if __POSIX_VISIBLE || __XSI_VISIBLE                                                             | 10492    21
    53       |#define SIGHUP          1       /* hangup */                                                     | 10493    21
    54       |#endif                                                                                           | 10494    21
    55       |#define SIGINT          2       /* interrupt */                                                  | 10495    21
    56       |#if __POSIX_VISIBLE || __XSI_VISIBLE                                                             | 10496    21
    57       |#define SIGQUIT         3       /* quit */                                                       | 10497    21
    58       |#endif                                                                                           | 10498    21
    59       |#define SIGILL          4       /* illegal instr. (not reset when caught) */                     | 10499    21
    60       |#if __XSI_VISIBLE                                                                                | 10500    21
    61       |#define SIGTRAP         5       /* trace trap (not reset when caught) */                         | 10501    21
    62       |#endif                                                                                           | 10502    21
    63       |#define SIGABRT         6       /* abort() */                                                    | 10503    21
    64       |#if __BSD_VISIBLE                                                                                | 10504    21
    65       |#define SIGIOT          SIGABRT /* compatibility */                                              | 10505    21
    66       |#define SIGEMT          7       /* EMT instruction */                                            | 10506    21
    67       |#endif                                                                                           | 10507    21
    68       |#define SIGFPE          8       /* floating point exception */                                   | 10508    21
    69       |#if __POSIX_VISIBLE || __XSI_VISIBLE                                                             | 10509    21
    70       |#define SIGKILL         9       /* kill (cannot be caught or ignored) */                         | 10510    21
    71       |#endif                                                                                           | 10511    21
    72       |#if __POSIX_VISIBLE >= 200112 || __XSI_VISIBLE                                                   | 10512    21
    73       |#define SIGBUS          10      /* bus error */                                                  | 10513    21
    74       |#endif                                                                                           | 10514    21
    75       |#define SIGSEGV         11      /* segmentation violation */                                     | 10515    21
    76       |#if __BSD_VISIBLE                                                                                | 10516    21
    77       |#define SIGSYS          12      /* non-existent system call invoked */                           | 10517    21
    78       |#endif                                                                                           | 10518    21
    79       |#if __POSIX_VISIBLE || __XSI_VISIBLE                                                             | 10519    21
    80       |#define SIGPIPE         13      /* write on a pipe with no one to read it */                     | 10520    21
    81       |#define SIGALRM         14      /* alarm clock */                                                | 10521    21
    82       |#endif                                                                                           | 10522    21
    83       |#define SIGTERM         15      /* software termination signal from kill */                      | 10523    21
    84       |#if __POSIX_VISIBLE >= 200112 || __XSI_VISIBLE                                                   | 10524    21
    85       |#define SIGURG          16      /* urgent condition on IO channel */                             | 10525    21
    86       |#endif                                                                                           | 10526    21
    87       |#if __POSIX_VISIBLE || __XSI_VISIBLE                                                             | 10527    21
    88       |#define SIGSTOP         17      /* sendable stop signal not from tty */                          | 10528    21
    89       |#define SIGTSTP         18      /* stop signal from tty */                                       | 10529    21
    90       |#define SIGCONT         19      /* continue a stopped process */                                 | 10530    21
    91       |#define SIGCHLD         20      /* to parent on child stop or exit */                            | 10531    21
    92       |#define SIGTTIN         21      /* to readers pgrp upon background tty read */                   | 10532    21
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   212


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    93       |#define SIGTTOU         22      /* like TTIN if (tp->t_local&LTOSTOP) */                         | 10533    21
    94       |#endif                                                                                           | 10534    21
    95       |#if __BSD_VISIBLE                                                                                | 10535    21
    96       |#define SIGIO           23      /* input/output possible signal */                               | 10536    21
    97       |#endif                                                                                           | 10537    21
    98       |#if __XSI_VISIBLE                                                                                | 10538    21
    99       |#define SIGXCPU         24      /* exceeded CPU time limit */                                    | 10539    21
   100       |#define SIGXFSZ         25      /* exceeded file size limit */                                   | 10540    21
   101       |#define SIGVTALRM       26      /* virtual time alarm */                                         | 10541    21
   102       |#define SIGPROF         27      /* profiling time alarm */                                       | 10542    21
   103       |#endif                                                                                           | 10543    21
   104       |#if __BSD_VISIBLE                                                                                | 10544    21
   105       |#define SIGWINCH        28      /* window size changes */                                        | 10545    21
   106       |#define SIGINFO         29      /* information request */                                        | 10546    21
   107       |#endif                                                                                           | 10547    21
   108       |#if __POSIX_VISIBLE || __XSI_VISIBLE                                                             | 10548    21
   109       |#define SIGUSR1         30      /* user defined signal 1 */                                      | 10549    21
   110       |#define SIGUSR2         31      /* user defined signal 2 */                                      | 10550    21
   111       |#endif                                                                                           | 10551    21
   112       |#if __BSD_VISIBLE                                                                                | 10552    21
   113       |#define SIGTHR          32      /* reserved by thread library. */                                | 10553    21
   114       |#define SIGLWP          SIGTHR                                                                   | 10554    21
   115       |#endif                                                                                           | 10555    21
   116       |                                                                                                 | 10556    21
   116       +                                                                                                 + 10556    21
   117       |#define SIGDANGER       33                                                                       | 10557    21
   118       |#define SIGTHSTOP       34                                                                       | 10558    21
   119       |#define SIGTHCONT       35                                                                       | 10559    21
   120       |#define SIGTRACE        37                                                                       | 10560    21
   121       |#define SIGDCE          38                                                                       | 10561    21
   122       |#define SIGDUMP         39                                                                       | 10562    21
   123       |#define SIGABND         50                                                                       | 10563    21
   124       |#define SIGPOLL         51                                                                       | 10564    21
   125       |#define SIGIOERR        52                                                                       | 10565    21
   126       |                                                                                                 | 10566    21
   127       |                                                                                                 | 10567    21
   128       |/*                                                                                               | 10568    21
   129       | * XXX missing SIGRTMIN, SIGRTMAX.                                                               | 10569    21
   130       | */                                                                                              | 10570    21
   131       |                                                                                                 | 10571    21
   132       |#define SIG_MVSSIGSETUP_PTHREAD    64  /* 'special' signal value used during */                  | 10572    21
   133       |                            /* the call to __mvssigsetup() in POSIX     */                       | 10573    21
   134       |                            /* signal initialization indicating the     */                       | 10574    21
   135       |                            /* SIR is to receive pthread cancel/quiesce */                       | 10575    21
   136       |                            /* events.  We want to "reserve" this signal*/                       | 10576    21
   137       |                            /* number to avoid any accidental reuse in  */                       | 10577    21
   138       |                            /* the future.  This is not a "real" signal.*/                       | 10578    21
   139       |                                                                                                 | 10579    21
   140       |#define SIG_DFL         ((__sighandler_t *)0)                                                    | 10580    21
   141       |#define SIG_IGN         ((__sighandler_t *)1)                                                    | 10581    21
   142       |#define SIG_ERR         ((__sighandler_t *)-1)                                                   | 10582    21
   143       |/*                                                                                               | 10583    21
   144       | * XXX missing SIG_HOLD.                                                                         | 10584    21
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   213


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   145       | */                                                                                              | 10585    21
   146       |                                                                                                 | 10586    21
   147       |/*-                                                                                              | 10587    21
   148       | * Type of a signal handling function.                                                           | 10588    21
   149       | *                                                                                               | 10589    21
   150       | * Language spec sez signal handlers take exactly one arg, even though we                        | 10590    21
   151       | * actually supply three.  Ugh!                                                                  | 10591    21
   152       | *                                                                                               | 10592    21
   153       | * We don't try to hide the difference by leaving out the args because                           | 10593    21
   154       | * that would cause warnings about conformant programs.  Nonconformant                           | 10594    21
   155       | * programs can avoid the warnings by casting to (__sighandler_t *) or                           | 10595    21
   156       | * sig_t before calling signal() or assigning to sa_handler or sv_handler.                       | 10596    21
   157       | *                                                                                               | 10597    21
   158       | * The kernel should reverse the cast before calling the function.  It                           | 10598    21
   159       | * has no way to do this, but on most machines 1-arg and 3-arg functions                         | 10599    21
   160       | * have the same calling protocol so there is no problem in practice.                            | 10600    21
   161       | * A bit in sa_flags could be used to specify the number of args.                                | 10601    21
   162       | */                                                                                              | 10602    21
   163       |typedef void __sighandler_t(int);                                                                | 10603    21
   164       |                                                                                                 | 10604    21
   165       |#if __POSIX_VISIBLE || __XSI_VISIBLE                                                             | 10605    21
   166       |#ifndef _SIGSET_T_DECLARED                                                                       | 10606    21
   167       |#define _SIGSET_T_DECLARED                                                                       | 10607    21
   168       |typedef __sigset_t      sigset_t;                                                                | 10608    21
   169       |#endif                                                                                           | 10609    21
   170       |#endif                                                                                           | 10610    21
   171       |                                                                                                 | 10611    21
   171       +                                                                                                 + 10611    21
   172       |#if __POSIX_VISIBLE >= 199309 || __XSI_VISIBLE >= 500                                            | 10612    21
   173       |union sigval {                                                                                   | 10613    21
   173       +union sigval {                                                                                   + 10613    21
   174       |        /* Members as suggested by Annex C of POSIX 1003.1b. */                                  | 10614    21
   175       |        int     sigval_int;                                                                      | 10615    21
   176       |        void    *sigval_ptr;                                                                     | 10616    21
   177       |};                                                                                               | 10617    21
   178       |#endif                                                                                           | 10618    21
   179       |                                                                                                 | 10619    21
   180       |#if __POSIX_VISIBLE >= 199309                                                                    | 10620    21
   181       |struct sigevent {                                                                                | 10621    21
   181       +struct sigevent {                                                                                + 10621    21
   182       |        int     sigev_notify;           /* Notification type */                                  | 10622    21
   183       |        union {                                                                                  | 10623    21
   184       |                int     __sigev_signo;  /* Signal number */                                      | 10624    21
   185       |                int     __sigev_notify_kqueue;                                                   | 10625    21
   186       |        } __sigev_u;                                                                             | 10626    21
   187       |        union sigval sigev_value;       /* Signal value */                                       | 10627    21
   188       |/*                                                                                               | 10628    21
   189       | * XXX missing sigev_notify_function, sigev_notify_attributes.                                   | 10629    21
   190       | */                                                                                              | 10630    21
   191       |};                                                                                               | 10631    21
   192       |#define sigev_signo             __sigev_u.__sigev_signo                                          | 10632    21
   193       |#if __BSD_VISIBLE                                                                                | 10633    21
   194       |#define sigev_notify_kqueue     __sigev_u.__sigev_notify_kqueue                                  | 10634    21
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   214


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   195       |#endif                                                                                           | 10635    21
   196       |                                                                                                 | 10636    21
   196       +                                                                                                 + 10636    21
   197       |#define SIGEV_NONE      0               /* No async notification */                              | 10637    21
   198       |#define SIGEV_SIGNAL    1               /* Generate a queued signal */                           | 10638    21
   199       |#if __BSD_VISIBLE                                                                                | 10639    21
   200       |#define SIGEV_KEVENT    3               /* Generate a kevent */                                  | 10640    21
   201       |#endif                                                                                           | 10641    21
   202       |/*                                                                                               | 10642    21
   203       | * XXX missing SIGEV_THREAD.                                                                     | 10643    21
   204       | */                                                                                              | 10644    21
   204       +                                                                                                 + 10644    21
   205       |#endif /* __POSIX_VISIBLE >= 199309 */                                                           | 10645    21
   206       |                                                                                                 | 10646    21
   207       |#if __POSIX_VISIBLE >= 199309 || __XSI_VISIBLE                                                   | 10647    21
   208       |typedef struct __siginfo {                                                                       | 10648    21
   208       +typedef struct __siginfo {                                                                       + 10648    21
   209       |        int     si_signo;               /* signal number */                                      | 10649    21
   210       |        int     si_errno;               /* errno association */                                  | 10650    21
   211       |        /*                                                                                       | 10651    21
   212       |         * Cause of signal, one of the SI_ macros or signal-specific                             | 10652    21
   213       |         * values, i.e. one of the FPE_... values for SIGFPE.                                    | 10653    21
   214       |         */                                                                                      | 10654    21
   215       |        int     si_code;                /* signal code */                                        | 10655    21
   216       |        __pid_t si_pid;                 /* sending process */                                    | 10656    21
   217       |        __uid_t si_uid;                 /* sender's ruid */                                      | 10657    21
   218       |        int     si_status;              /* exit value */                                         | 10658    21
   219       |        void    *si_addr;               /* faulting instruction */                               | 10659    21
   220       |        union sigval si_value;          /* signal value */                                       | 10660    21
   221       |        long    si_band;                /* band event for SIGPOLL */                             | 10661    21
   222       |        int     __spare__[7];           /* gimme some slack */                                   | 10662    21
   223       |} siginfo_t;                                                                                     | 10663    21
   224       |                                                                                                 | 10664    21
   225       | /* si_code values */                                                                            | 10665    21
   226       |  /* Definitions for SIGILL */                                                                   | 10666    21
   227       |#define ILL_ILLOPC     11  /* Illegal opcode */                                                  | 10667    21
   228       |#define ILL_ILLOPN     12  /* Illegal operand */                                                 | 10668    21
   229       |#define ILL_ILLADR     13  /* Illegal addressing mode */                                         | 10669    21
   230       |#define ILL_ILLTRP     14  /* Illegal trap */                                                    | 10670    21
   231       |#define ILL_PRVOPC     15  /* Privileged opcode */                                               | 10671    21
   232       |#define ILL_PRVREG     16  /* Privileged register */                                             | 10672    21
   233       |#define ILL_COPROC     17  /* Coprocessor error */                                               | 10673    21
   234       |#define ILL_BADSTK     18  /* Internal stack error */                                            | 10674    21
   235       |#define ILL_EXECUTE    19  /* Execute exception */                                               | 10675    21
   236       |#define ILL_ILLSPEC    20  /* Specification exception */                                         | 10676    21
   237       |                                                                                                 | 10677    21
   238       |   /* Definitions for SIGFPE */                                                                  | 10678    21
   239       |                                                                                                 | 10679    21
   240       |   /* portable macros for SIGFPE */                                                              | 10680    21
   241       |#define FPE_INTDIV     31  /* integer divide by zero */                                          | 10681    21
   242       |#define FPE_INTOVF     32  /* integer overflow */                                                | 10682    21
   243       |#define FPE_FLTDIV     33  /* floating point divide by zero */                                   | 10683    21
   244       |#define FPE_FLTOVF     34  /* floating point overflow */                                         | 10684    21
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   215


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   245       |#define FPE_FLTUND     35  /* floating point underflow */                                        | 10685    21
   246       |#define FPE_FLTRES     36  /* floating point inexact result */                                   | 10686    21
   247       |#define FPE_FLTINV     37  /* invalid floating point operation */                                | 10687    21
   248       |#define FPE_FLTSUB     38  /* subscript out of range */                                          | 10688    21
   249       |                                                                                                 | 10689    21
   250       |  /* non-portable */                                                                             | 10690    21
   251       |#define FPE_FLTSIG     39  /* Significance exception */                                          | 10691    21
   252       |#define FPE_DECDATA    40  /* Data exception */                                                  | 10692    21
   253       |#define FPE_DECDIV     41  /* Decimal divide exception */                                        | 10693    21
   254       |#define FPE_DECOVF     42  /* Decimal overflow exception */                                      | 10694    21
   255       |#define FPE_UNKWN      43  /* undetermined  exception      */                                    | 10695    21
   256       |#define FPE_CTDXC      44  /* Compare-and-Trap exception */                                      | 10696    21
   257       |                                                                                                 | 10697    21
   258       |  /* SIGSEGV values */                                                                           | 10698    21
   259       |                                                                                                 | 10699    21
   260       |#define SEGV_MAPERR    51  /* address not mapping to an object */                                | 10700    21
   261       |#define SEGV_ACCERR    52  /* Invalid permissions for mapp'd objects */                          | 10701    21
   262       |#define SEGV_PROTECT   53  /* protection exception */                                            | 10702    21
   263       |#define SEGV_ADDRESS   54  /* addressing exception */                                            | 10703    21
   264       |#define _SEGV_SOFTLIMIT 10059 /* softlimit overflow */                                           | 10704    21
   265       |                                                                                                 | 10705    21
   266       |  /* SIGBUS values */                                                                            | 10706    21
   267       |                                                                                                 | 10707    21
   268       |#define BUS_ADRALN     71  /* Invalid address alignment */                                       | 10708    21
   269       |#define BUS_ADRERR     72  /* Non-existent physical address */                                   | 10709    21
   270       |#define BUS_OBJERR     73  /* Object specific hardware error */                                  | 10710    21
   271       |                                                                                                 | 10711    21
   272       |  /* SIGTRAP values */                                                                           | 10712    21
   273       |#define TRAP_BRKPT     91  /* Breakpoint */                                                      | 10713    21
   274       |#define TRAP_TRACE     92  /* Trace trap */                                                      | 10714    21
   275       |                                                                                                 | 10715    21
   276       |  /* SIGCHLD values */                                                                           | 10716    21
   277       |#define CLD_EXITED    101  /* Child process has exited */                                        | 10717    21
   278       |#define CLD_KILLED    102  /* Child was killed */                                                | 10718    21
   279       |#define CLD_DUMPED    103  /* Child terminated abnormally */                                     | 10719    21
   280       |#define CLD_TRAPPED   104  /* Traced child process encountered a trap */                         | 10720    21
   281       |#define CLD_STOPPED   105  /* Child is stopped */                                                | 10721    21
   282       |#define CLD_CONTINUED 106  /* Child is continuing */                                             | 10722    21
   283       |                                                                                                 | 10723    21
   284       |  /* SIGPOLL values */                                                                           | 10724    21
   285       |#define POLL_IN       111  /* Input data is available */                                         | 10725    21
   286       |#define POLL_OUT      112  /* Output buffers are available */                                    | 10726    21
   287       |#define POLL_MSG      113  /* Input messages are available */                                    | 10727    21
   288       |#define POLL_ERR      114  /* I/O error */                                                       | 10728    21
   289       |#define POLL_PRI      115  /* High priority input is available */                                | 10729    21
   290       |#define POLL_HUP      116  /* Device has been disconnected */                                    | 10730    21
   291       |                                                                                                 | 10731    21
   292       |  /* SIGABND values */                                                                           | 10732    21
   293       |#define _ABND_REAL    170  /* "true" ABEND, not software generated */                            | 10733    21
   294       |                           /*  via kill() */                                                     | 10734    21
   295       |#endif                                                                                           | 10735    21
   296       |                                                                                                 | 10736    21
   297       |#if __POSIX_VISIBLE || __XSI_VISIBLE                                                             | 10737    21
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   216


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   298       |struct __siginfo;                                                                                | 10738    21
   298       +struct __siginfo;                                                                                + 10738    21
   299       |                                                                                                 | 10739    21
   300       |/*                                                                                               | 10740    21
   301       | * Signal vector "template" used in sigaction call.                                              | 10741    21
   302       | */                                                                                              | 10742    21
   303       |struct sigaction {                                                                               | 10743    21
   304       |        union {                                                                                  | 10744    21
   305       |                void    (*__sa_handler)(int);                                                    | 10745    21
   306       |                void    (*__sa_sigaction)(int, struct __siginfo *, void *);                      | 10746    21
   307       |        } __sigaction_u;                /* signal handler */                                     | 10747    21
   308       |        int     sa_flags;               /* see signal options below */                           | 10748    21
   309       |        sigset_t sa_mask;               /* signal mask to apply */                               | 10749    21
   310       |};                                                                                               | 10750    21
   311       |                                                                                                 | 10751    21
   312       |#define sa_handler      __sigaction_u.__sa_handler                                               | 10752    21
   313       |#endif                                                                                           | 10753    21
   314       |                                                                                                 | 10754    21
   315       |#if __XSI_VISIBLE                                                                                | 10755    21
   316       |/* If SA_SIGINFO is set, sa_sigaction must be used instead of sa_handler. */                     | 10756    21
   316       +                                                                                                 + 10756    21
   317       |#define sa_sigaction    __sigaction_u.__sa_sigaction                                             | 10757    21
   318       |#endif                                                                                           | 10758    21
   319       |                                                                                                 | 10759    21
   320       |#if __POSIX_VISIBLE || __XSI_VISIBLE                                                             | 10760    21
   321       |#define SA_NOCLDSTOP    0x0008  /* do not generate SIGCHLD on child stop */                      | 10761    21
   322       |#endif /* __POSIX_VISIBLE || __XSI_VISIBLE */                                                    | 10762    21
   323       |                                                                                                 | 10763    21
   323       +                                                                                                 + 10763    21
   324       |#if __XSI_VISIBLE                                                                                | 10764    21
   325       |#define SA_ONSTACK      0x0001  /* take signal on signal stack */                                | 10765    21
   326       |#define SA_RESTART      0x0002  /* restart system call on signal return */                       | 10766    21
   327       |#define SA_RESETHAND    0x0004  /* reset to SIG_DFL when taking signal */                        | 10767    21
   328       |#define SA_NODEFER      0x0010  /* don't mask the signal we're delivering */                     | 10768    21
   329       |#define SA_NOCLDWAIT    0x0020  /* don't keep zombies around */                                  | 10769    21
   330       |#define SA_SIGINFO      0x0040  /* signal handler with SA_SIGINFO args */                        | 10770    21
   331       |#endif                                                                                           | 10771    21
   332       |                                                                                                 | 10772    21
   332       +                                                                                                 + 10772    21
   333       |#if __BSD_VISIBLE                                                                                | 10773    21
   334       |#define NSIG            32      /* number of old signals (counting 0) */                         | 10774    21
   335       |#endif                                                                                           | 10775    21
   336       |                                                                                                 | 10776    21
   336       +                                                                                                 + 10776    21
   337       |#if __POSIX_VISIBLE || __XSI_VISIBLE                                                             | 10777    21
   338       |#define SI_QUEUE        176                                                                      | 10778    21
   339       |#define SI_ASYNCIO      175                                                                      | 10779    21
   340       |#if 0                                                                                            | 10780    21
   341       |  /* IBM doesn't define these for LE */                                                          | 10781    21
   342       |  /* so for compatibility we don't   */                                                          | 10782    21
   343       |  /* either.  To avoid confusion     */                                                          | 10783    21
   344       |  /* between processes sending       */                                                          | 10784    21
   345       |  /* signals between Dignus and LE   */                                                          | 10785    21
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   217


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   346       |  /* programs. (we don't want to set */                                                          | 10786    21
   347       |  /* SI_USER for a code sent to an   */                                                          | 10787    21
   348       |  /* LE program, because it can't    */                                                          | 10788    21
   349       |  /* handle it - for example.)       */                                                          | 10789    21
   350       |                                                                                                 | 10790    21
   351       |  /* Also - note that the BPX signal */                                                          | 10791    21
   352       |  /* interface requires si_code      */                                                          | 10792    21
   353       |  /* values to fit in an (unsigned   */                                                          | 10793    21
   354       |  /* short) - so these BSD values    */                                                          | 10794    21
   355       |  /* don't fit. */                                                                               | 10795    21
   356       |   #define      SI_USER         0x10001                                                          | 10796    21
   357       |   #define      SI_TIMER        0x10003                                                          | 10797    21
   358       |   #define      SI_MESGQ        0x10005                                                          | 10798    21
   359       |#endif                                                                                           | 10799    21
   360       |#endif                                                                                           | 10800    21
   361       |#if __BSD_VISIBLE                                                                                | 10801    21
   362       |#define SI_UNDEFINED    0                                                                        | 10802    21
   363       |#endif                                                                                           | 10803    21
   364       |                                                                                                 | 10804    21
   364       +                                                                                                 + 10804    21
   365       |#if __BSD_VISIBLE                                                                                | 10805    21
   366       |typedef __sighandler_t  *sig_t; /* type of pointer to a signal function */                       | 10806    21
   366       +typedef __sighandler_t  *sig_t;                                                                  + 10806    21
   367       |typedef void __siginfohandler_t(int, struct __siginfo *, void *);                                | 10807    21
   368       |#endif                                                                                           | 10808    21
   369       |                                                                                                 | 10809    21
   370       |#if __XSI_VISIBLE                                                                                | 10810    21
   371       |/*                                                                                               | 10811    21
   372       | * Structure used in sigaltstack call.                                                           | 10812    21
   373       | */                                                                                              | 10813    21
   373       +                                                                                                 + 10813    21
   374       |#if __BSD_VISIBLE                                                                                | 10814    21
   375       |typedef struct sigaltstack {                                                                     | 10815    21
   375       +typedef struct sigaltstack {                                                                     + 10815    21
   376       |#else                                                                                            | 10816    21
   377       |typedef struct {                                                                                 | 10817    21
   378       |#endif                                                                                           | 10818    21
   379       |        char    *ss_sp;                 /* signal stack base */                                  | 10819    21
   380       |        __size_t ss_size;               /* signal stack length */                                | 10820    21
   381       |        int     ss_flags;               /* SS_DISABLE and/or SS_ONSTACK */                       | 10821    21
   382       |} stack_t;                                                                                       | 10822    21
   383       |                                                                                                 | 10823    21
   384       |#define SS_ONSTACK      0x0001  /* take signal on alternate stack */                             | 10824    21
   385       |#define SS_DISABLE      0x0004  /* disable taking signals on alternate stack */                  | 10825    21
   386       |#define SIGSTKSZ        (MINSIGSTKSZ + 32768)   /* recommended stack size */                     | 10826    21
   387       |#endif                                                                                           | 10827    21
   388       |                                                                                                 | 10828    21
   389       |#if __BSD_VISIBLE                                                                                | 10829    21
   390       |/*                                                                                               | 10830    21
   391       | * 4.3 compatibility:                                                                            | 10831    21
   392       | * Signal vector "template" used in sigvec call.                                                 | 10832    21
   393       | */                                                                                              | 10833    21
   393       +                                                                                                 + 10833    21
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   218


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   394       |struct sigvec {                                                                                  | 10834    21
   395       |        __sighandler_t *sv_handler;     /* signal handler */                                     | 10835    21
   396       |        int     sv_mask;                /* signal mask to apply */                               | 10836    21
   397       |        int     sv_flags;               /* see signal options below */                           | 10837    21
   398       |};                                                                                               | 10838    21
   399       |                                                                                                 | 10839    21
   400       |#define SV_ONSTACK      SA_ONSTACK                                                               | 10840    21
   401       |#define SV_INTERRUPT    SA_RESTART      /* same bit, opposite sense */                           | 10841    21
   402       |#define SV_RESETHAND    SA_RESETHAND                                                             | 10842    21
   403       |#define SV_NODEFER      SA_NODEFER                                                               | 10843    21
   404       |#define SV_NOCLDSTOP    SA_NOCLDSTOP                                                             | 10844    21
   405       |#define SV_SIGINFO      SA_SIGINFO                                                               | 10845    21
   406       |#define sv_onstack      sv_flags        /* isn't compatibility wonderful! */                     | 10846    21
   407       |#endif                                                                                           | 10847    21
   408       |                                                                                                 | 10848    21
   409       |/* Keep this in one place only */                                                                | 10849    21
   410       |#if defined(_KERNEL) && defined(COMPAT_43) && \                                                  | 10850    21
   411       |    !defined(__i386__) && !defined(__alpha__)                                                    | 10851    21
   412       |struct osigcontext {                                                                             | 10852    21
   413       |        int _not_used;                                                                           | 10853    21
   414       |};                                                                                               | 10854    21
   415       |#endif                                                                                           | 10855    21
   416       |                                                                                                 | 10856    21
   417       |#if __XSI_VISIBLE                                                                                | 10857    21
   418       |/*                                                                                               | 10858    21
   419       | * Structure used in sigstack call.                                                              | 10859    21
   420       | */                                                                                              | 10860    21
   420       +                                                                                                 + 10860    21
   421       |struct sigstack {                                                                                | 10861    21
   422       |        /* XXX ss_sp's type should be `void *'. */                                               | 10862    21
   423       |        char    *ss_sp;                 /* signal stack pointer */                               | 10863    21
   424       |        int     ss_onstack;             /* current status */                                     | 10864    21
   425       |};                                                                                               | 10865    21
   426       |#endif                                                                                           | 10866    21
   427       |                                                                                                 | 10867    21
   428       |#if __BSD_VISIBLE || __POSIX_VISIBLE > 0 && __POSIX_VISIBLE <= 200112                            | 10868    21
   429       |/*                                                                                               | 10869    21
   430       | * Macro for converting signal number to a mask suitable for                                     | 10870    21
   431       | * sigblock().                                                                                   | 10871    21
   432       | */                                                                                              | 10872    21
   432       +                                                                                                 + 10872    21
   433       |#define sigmask(m)      (1 << ((m)-1))                                                           | 10873    21
   434       |#endif                                                                                           | 10874    21
   435       |                                                                                                 | 10875    21
   436       |#if __BSD_VISIBLE                                                                                | 10876    21
   437       |#define BADSIG          SIG_ERR                                                                  | 10877    21
   438       |#endif                                                                                           | 10878    21
   439       |                                                                                                 | 10879    21
   439       +                                                                                                 + 10879    21
   440       |#if __POSIX_VISIBLE || __XSI_VISIBLE                                                             | 10880    21
   441       |/*                                                                                               | 10881    21
   442       | * Flags for sigprocmask:                                                                        | 10882    21
   443       | */                                                                                              | 10883    21
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   219


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   443       +                                                                                                 + 10883    21
   444       |#define SIG_BLOCK       1       /* block specified signal set */                                 | 10884    21
   445       |#define SIG_UNBLOCK     2       /* unblock specified signal set */                               | 10885    21
   446       |#define SIG_SETMASK     3       /* set specified signal set */                                   | 10886    21
   447       |#endif                                                                                           | 10887    21
   448       |                                                                                                 | 10888    21
   449       |/*                                                                                               | 10889    21
   450       | * For historical reasons; programs expect signal's return value to be                           | 10890    21
   451       | * defined by <sys/signal.h>.                                                                    | 10891    21
   452       | */                                                                                              | 10892    21
   453       |__BEGIN_DECLS                                                                                    | 10893    21
   453       +                                                                                                 + 10893    21
   454       |__sighandler_t *signal(int, __sighandler_t *);                                                   | 10894    21
   455       |  /* returns ABEND/REASON codes for SIGABND handlers */                                          | 10895    21
   456       |int __abendcode(void);                                                                           | 10896    21
   457       |int __rsncode(void);                                                                             | 10897    21
   458       |__END_DECLS                                                                                      | 10898    21
   458       +                                                                                                 + 10898    21
   459       |                                                                                                 | 10899    21
   460       |#endif /* !_SYS_SIGNAL_H_ */                                                                     | 10900    21
   461       |#pragma pack(reset)                                                                              | 10901    21
    46       |#include <limits.h>                                                                              | 10902    20
     1       |/* release 2.25.00 */                                                                            | 10903    24
     2       |#pragma pack()                                                                                   | 10904    24
     3       |/*-                                                                                              | 10905    24
     4       | * Copyright (c) 1988, 1993                                                                      | 10906    24
     5       | *      The Regents of the University of California.  All rights reserved.                       | 10907    24
     6       | *                                                                                               | 10908    24
     7       | * Redistribution and use in source and binary forms, with or without                            | 10909    24
     8       | * modification, are permitted provided that the following conditions                            | 10910    24
     9       | * are met:                                                                                      | 10911    24
    10       | * 1. Redistributions of source code must retain the above copyright                             | 10912    24
    11       | *    notice, this list of conditions and the following disclaimer.                              | 10913    24
    12       | * 2. Redistributions in binary form must reproduce the above copyright                          | 10914    24
    13       | *    notice, this list of conditions and the following disclaimer in the                        | 10915    24
    14       | *    documentation and/or other materials provided with the distribution.                       | 10916    24
    15       | * 3. All advertising materials mentioning features or use of this software                      | 10917    24
    16       | *    must display the following acknowledgement:                                                | 10918    24
    17       | *      This product includes software developed by the University of                            | 10919    24
    18       | *      California, Berkeley and its contributors.                                               | 10920    24
    19       | * 4. Neither the name of the University nor the names of its contributors                       | 10921    24
    20       | *    may be used to endorse or promote products derived from this software                      | 10922    24
    21       | *    without specific prior written permission.                                                 | 10923    24
    22       | *                                                                                               | 10924    24
    23       | * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND                       | 10925    24
    24       | * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE                         | 10926    24
    25       | * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE                    | 10927    24
    26       | * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE                      | 10928    24
    27       | * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL                    | 10929    24
    28       | * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS                       | 10930    24
    29       | * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)                         | 10931    24
    30       | * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT                    | 10932    24
    31       | * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY                     | 10933    24
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   220


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    32       | * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF                        | 10934    24
    33       | * SUCH DAMAGE.                                                                                  | 10935    24
    34       | *                                                                                               | 10936    24
    35       | *      @(#)limits.h    8.2 (Berkeley) 1/4/94                                                    | 10937    24
    36       | */                                                                                              | 10938    24
    37       |                                                                                                 | 10939    24
    38       |#ifndef _LIMITS_H_                                                                               | 10940    24
    39       |#define _LIMITS_H_                                                                               | 10941    24
    40       |                                                                                                 | 10942    24
    41       |#include <sys/cdefs.h>                                                                           | 10943    24
     1       |/* release 2.25.00 */                                                                            | 10944     4
     2       |#pragma pack()                                                                                   | 10945     4
     3       |/*                                                                                               | 10946     4
     4       | * Copyright (c) 1991, 1993                                                                      | 10947     4
     5       | *      The Regents of the University of California.  All rights reserved.                       | 10948     4
     6       | *                                                                                               | 10949     4
     7       | * This code is derived from software contributed to Berkeley by                                 | 10950     4
     8       | * Berkeley Software Design, Inc.                                                                | 10951     4
     9       | *                                                                                               | 10952     4
    10       | * Redistribution and use in source and binary forms, with or without                            | 10953     4
    11       | * modification, are permitted provided that the following conditions                            | 10954     4
    12       | * are met:                                                                                      | 10955     4
    13       | * 1. Redistributions of source code must retain the above copyright                             | 10956     4
    14       | *    notice, this list of conditions and the following disclaimer.                              | 10957     4
    15       | * 2. Redistributions in binary form must reproduce the above copyright                          | 10958     4
    16       | *    notice, this list of conditions and the following disclaimer in the                        | 10959     4
    17       | *    documentation and/or other materials provided with the distribution.                       | 10960     4
    18       | * 3. All advertising materials mentioning features or use of this software                      | 10961     4
    19       | *    must display the following acknowledgement:                                                | 10962     4
    20       | *      This product includes software developed by the University of                            | 10963     4
    21       | *      California, Berkeley and its contributors.                                               | 10964     4
    22       | * 4. Neither the name of the University nor the names of its contributors                       | 10965     4
    23       | *    may be used to endorse or promote products derived from this software                      | 10966     4
    24       | *    without specific prior written permission.                                                 | 10967     4
    25       | *                                                                                               | 10968     4
    26       | * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND                       | 10969     4
    27       | * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE                         | 10970     4
    28       | * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE                    | 10971     4
    29       | * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE                      | 10972     4
    30       | * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL                    | 10973     4
    31       | * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS                       | 10974     4
    32       | * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)                         | 10975     4
    33       | * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT                    | 10976     4
    34       | * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY                     | 10977     4
    35       | * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF                        | 10978     4
    36       | * SUCH DAMAGE.                                                                                  | 10979     4
    37       | *                                                                                               | 10980     4
    38       | *      @(#)cdefs.h     8.8 (Berkeley) 1/9/95                                                    | 10981     4
    39       | */                                                                                              | 10982     4
    40       |                                                                                                 | 10983     4
    41       |#ifndef _SYS_CDEFS_H_                                                                            | 10984     4
    42       |#define _SYS_CDEFS_H_                                                                            | 10985     4
    43       |                                                                                                 | 10986     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   221


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    44       |#if defined(__cplusplus)                                                                         | 10987     4
    45       |#define __BEGIN_DECLS   extern "C" {                                                             | 10988     4
    46       |#define __END_DECLS     }                                                                        | 10989     4
    47       |#else                                                                                            | 10990     4
    48       |#define __BEGIN_DECLS                                                                            | 10991     4
    49       |#define __END_DECLS                                                                              | 10992     4
    50       |#endif                                                                                           | 10993     4
    51       |                                                                                                 | 10994     4
    52       |/*                                                                                               | 10995     4
    53       | * This code has been put in place to help reduce the addition of                                | 10996     4
    54       | * compiler specific defines in the code.  It helps to aid in                                    | 10997     4
    55       | * having a compiler-agnostic source tree.                                                       | 10998     4
    56       | */                                                                                              | 10999     4
    57       |#define __CC_SUPPORTS_INLINE 1                                                                   | 11000     4
    58       |#define __CC_SUPPORTS___INLINE 1                                                                 | 11001     4
    59       |#define __CC_SUPPORTS___INLINE__ 1                                                               | 11002     4
    60       |                                                                                                 | 11003     4
    61       |#define __CC_SUPPORTS___FUNC__ 1                                                                 | 11004     4
    62       |                                                                                                 | 11005     4
    63       |                                                                                                 | 11006     4
    64       |/*                                                                                               | 11007     4
    65       | * The __CONCAT macro is used to concatenate parts of symbol names, e.g.                         | 11008     4
    66       | * with "#define OLD(foo) __CONCAT(old,foo)", OLD(foo) produces oldfoo.                          | 11009     4
    67       | * The __CONCAT macro is a bit tricky to use if it must work in non-ANSI                         | 11010     4
    68       | * mode -- there must be no spaces between its arguments, and for nested                         | 11011     4
    69       | * __CONCAT's, all the __CONCAT's must be at the left.  __CONCAT can also                        | 11012     4
    70       | * concatenate double-quoted strings produced by the __STRING macro, but                         | 11013     4
    71       | * this only works with ANSI C.                                                                  | 11014     4
    72       | *                                                                                               | 11015     4
    73       | * __XSTRING is like __STRING, but it expands any macros in its argument                         | 11016     4
    74       | * first.  It is only available with ANSI C.                                                     | 11017     4
    75       | */                                                                                              | 11018     4
    76       |#if defined(__STDC__) || defined(__cplusplus)                                                    | 11019     4
    77       |#define __P(protos)     protos          /* full-blown ANSI C */                                  | 11020     4
    78       |#define __CONCAT1(x,y)  x ## y                                                                   | 11021     4
    79       |#define __CONCAT(x,y)   __CONCAT1(x,y)                                                           | 11022     4
    80       |#define __STRING(x)     #x              /* stringify without expanding x */                      | 11023     4
    81       |#define __XSTRING(x)    __STRING(x)     /* expand x, then stringify */                           | 11024     4
    82       |                                                                                                 | 11025     4
    83       |#define __const         const           /* define reserved names to standard */                  | 11026     4
    84       |#define __signed        signed                                                                   | 11027     4
    85       |#define __volatile      volatile                                                                 | 11028     4
    86       |#if defined(__cplusplus)                                                                         | 11029     4
    87       |#define __inline        inline          /* convert to C++ keyword */                             | 11030     4
    88       |#else                                                                                            | 11031     4
    89       |#define __inline        __inline__      /* Use the Systems/C keyword */                          | 11032     4
    90       |#endif /* !__cplusplus */                                                                        | 11033     4
    91       |                                                                                                 | 11034     4
    92       |#else   /* !(__STDC__ || __cplusplus) */                                                         | 11035     4
    93       |#define __P(protos)     ()              /* traditional C preprocessor */                         | 11036     4
    94       |#define __CONCAT(x,y)   x/**/y                                                                   | 11037     4
    95       |#define __STRING(x)     "x"                                                                      | 11038     4
    96       |                                                                                                 | 11039     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   222


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    97       |#define __const                         /* delete pseudo-ANSI C keywords */                      | 11040     4
    98       |#define __inline                                                                                 | 11041     4
    99       |#define __signed                                                                                 | 11042     4
   100       |#define __volatile                                                                               | 11043     4
   101       |/*                                                                                               | 11044     4
   102       | * In non-ANSI C environments, new programs will want ANSI-only C keywords                       | 11045     4
   103       | * deleted from the program and old programs will want them left alone.                          | 11046     4
   104       | * When using a compiler other than Dignus, programs using the ANSI C keywords                   | 11047     4
   105       | * const, inline etc. as normal identifiers should define -DNO_ANSI_KEYWORDS.                    | 11048     4
   106       | */                                                                                              | 11049     4
   107       |#ifndef NO_ANSI_KEYWORDS                                                                         | 11050     4
   108       |#define const                           /* delete ANSI C keywords */                             | 11051     4
   109       |#define inline                                                                                   | 11052     4
   110       |#define signed                                                                                   | 11053     4
   111       |#define volatile                                                                                 | 11054     4
   112       |#endif  /* !NO_ANSI_KEYWORDS */                                                                  | 11055     4
   113       |#endif  /* !(__STDC__ || __cplusplus) */                                                         | 11056     4
   114       |                                                                                                 | 11057     4
   115       |/*                                                                                               | 11058     4
   116       | * Compiler-dependent macros to help declare dead (non-returning) and                            | 11059     4
   117       | * pure (no side effects) functions, and unused variables.                                       | 11060     4
   118       | */                                                                                              | 11061     4
   119       |#define __dead2 __attribute__((__noreturn__))                                                    | 11062     4
   120       |#define __pure  __attribute__((__pure__))                                                        | 11063     4
   121       |#define __pure2 __attribute__((__const__))                                                       | 11064     4
   122       |#define __unused                                                                                 | 11065     4
   123       |#define __aligned(x)                                                                             | 11066     4
   124       |#define __section(x)                                                                             | 11067     4
   125       |#define __nonnull(x)                                                                             | 11068     4
   126       |#define __used                                                                                   | 11069     4
   127       |                                                                                                 | 11070     4
   128       |#define __always_inline __attribute__((__always_inline__))                                       | 11071     4
   129       |#define __noinline      __attribute__((__noinline__))                                            | 11072     4
   130       |                                                                                                 | 11073     4
   131       |#if __STDC_VERSION__ < 199901                                                                    | 11074     4
   132       |#define __func__  NULL                                                                           | 11075     4
   133       |#endif                                                                                           | 11076     4
   134       |                                                                                                 | 11077     4
   135       |#if !defined(__STRICT_ANSI__) || __STDC_VERSION__ >= 199901                                      | 11078     4
   136       |#define __LONG_LONG_SUPPORTED                                                                    | 11079     4
   137       |#endif                                                                                           | 11080     4
   138       |                                                                                                 | 11081     4
   139       |/* Systems/C recognizes they keyword __restrict__ in both                                        | 11082     4
   140       | * ANSI and non-ANSI mode to indicate C99 restrict semantics.                                    | 11083     4
   141       | **/                                                                                             | 11084     4
   142       |#ifndef __cplusplus                                                                              | 11085     4
   143       |#define __restrict __restrict__                                                                  | 11086     4
   144       |#else                                                                                            | 11087     4
   145       |/* Systems/C++ does not */                                                                       | 11088     4
   146       |#define __restrict                                                                               | 11089     4
   147       |#endif                                                                                           | 11090     4
   148       |                                                                                                 | 11091     4
   149       |/*                                                                                               | 11092     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   223


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   150       | * define-away GCC-specific branch-prediction markers                                            | 11093     4
   151       | */                                                                                              | 11094     4
   152       |#define __predict_true(exp)     (exp)                                                            | 11095     4
   153       |#define __predict_false(exp)    (exp)                                                            | 11096     4
   154       |                                                                                                 | 11097     4
   155       |                                                                                                 | 11098     4
   156       |/*                                                                                               | 11099     4
   157       | * provide a definition of __offsetof(), <stddef.h> and                                          | 11100     4
   158       | * <sys/types.h> reference __offsetof().                                                         | 11101     4
   159       | *                                                                                               | 11102     4
   160       | * For Systems/C, the C compiler recognizes __offsetof(),                                        | 11103     4
   161       | * but we need a definition for versions of C++ prior to 1.85.52.                                | 11104     4
   162       | */                                                                                              | 11105     4
   163       |#if defined(__cplusplus) && (__SYSC_VER__ < (18600))                                             | 11106     4
   164       |#undef __offsetof                                                                                | 11107     4
   165       |#define __offsetof(type, field)  ((size_t)(&((type *)0)->field))                                 | 11108     4
   166       |#endif                                                                                           | 11109     4
   167       |                                                                                                 | 11110     4
   168       |/*                                                                                               | 11111     4
   169       | * Compiler-dependent macros to declare that functions take printf-like                          | 11112     4
   170       | * or scanf-like arguments.                                                                      | 11113     4
   171       | */                                                                                              | 11114     4
   172       |#define __printflike(fmtarg, firstvararg)                                                        | 11115     4
   173       |#define __scanflike(fmtarg, firstvararg)                                                         | 11116     4
   174       |#define __format_arg(fmtarg)                                                                     | 11117     4
   175       |#define __printf0like(fmtarg, firstvararg)                                                       | 11118     4
   176       |                                                                                                 | 11119     4
   177       |/* Compiler-dependent macros that rely on specific extensions. */                                | 11120     4
   178       |#define __printf0like(fmtarg, firstvararg)                                                       | 11121     4
   179       |                                                                                                 | 11122     4
   180       |  /* intended to generate a weak reference as an alias */                                        | 11123     4
   181       |#define __weak_reference(sym,alias)                                                              | 11124     4
   182       |  /* If this symbol is refrenced, cause the linker to emit "msg" */                              | 11125     4
   183       |#define __warn_references(sym,msg)                                                               | 11126     4
   184       |                                                                                                 | 11127     4
   185       | /* This places the string into the resulting object.  It should */                              | 11128     4
   186       | /* probably become #pragma ident */                                                             | 11129     4
   187       |#define __IDSTRING(name,string) static const char name[] __unused = string                       | 11130     4
   188       |                                                                                                 | 11131     4
   189       |#ifndef __RCSID                                                                                  | 11132     4
   190       |#define __RCSID(s)      __IDSTRING(rcsid,s)                                                      | 11133     4
   191       |#endif                                                                                           | 11134     4
   192       |                                                                                                 | 11135     4
   193       |/*                                                                                               | 11136     4
   194       | * Embed the rcs id of a source file in the resulting library.                                   | 11137     4
   195       | * Usage:                                                                                        | 11138     4
   196       | *      __SYSCID("Id: src/sys/sys/cdefs.h,v 1.28.2.8 2002/09/18                                  | 11139     4
   197       |*                                            04:05:13 mikeh Exp $");                             | 11140     4
   198       | */                                                                                              | 11141     4
   199       |#ifndef __SYSCID                                                                                 | 11142     4
   200       |#if !defined(lint) && !defined(STRIP_SYSCID)                                                     | 11143     4
   201       |#define __SYSCID(s)     __IDSTRING(__CONCAT(__rcsid_,__LINE__),s)                                | 11144     4
   202       |#else                                                                                            | 11145     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   224


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   203       |#define __SYSCID(s)     struct __hack                                                            | 11146     4
   204       |#endif                                                                                           | 11147     4
   205       |#endif                                                                                           | 11148     4
   206       |                                                                                                 | 11149     4
   207       |#ifndef __RCSID_SOURCE                                                                           | 11150     4
   208       |#define __RCSID_SOURCE(s) __IDSTRING(rcsid_source,s)                                             | 11151     4
   209       |#endif                                                                                           | 11152     4
   210       |                                                                                                 | 11153     4
   211       |#ifndef __COPYRIGHT                                                                              | 11154     4
   212       |#define __COPYRIGHT(s)  __IDSTRING(copyright,s)                                                  | 11155     4
   213       |#endif                                                                                           | 11156     4
   214       |                                                                                                 | 11157     4
   215       |                                                                                                 | 11158     4
   216       |#ifndef __DECONST                                                                                | 11159     4
   217       |#define __DECONST(type, var)    ((type)(uintptr_t)(const void *)(var))                           | 11160     4
   218       |#endif                                                                                           | 11161     4
   219       |                                                                                                 | 11162     4
   220       |#ifndef __DEVOLATILE                                                                             | 11163     4
   221       |#define __DEVOLATILE(type, var) ((type)(uintptr_t)(volatile void *)(var))                        | 11164     4
   222       |#endif                                                                                           | 11165     4
   223       |                                                                                                 | 11166     4
   224       |#ifndef __DEQUALIFY                                                                              | 11167     4
   225       |#define __DEQUALIFY(type, var)  ((type)(uintptr_t)(const volatile void *)(var))                  | 11168     4
   226       |#endif                                                                                           | 11169     4
   227       |                                                                                                 | 11170     4
   228       |                                                                                                 | 11171     4
   229       |/*-                                                                                              | 11172     4
   230       | * The following definitions are an extension of the behavior originally                         | 11173     4
   231       | * implemented in <sys/_posix.h>, but with a different level of granularity.                     | 11174     4
   232       | * POSIX.1 requires that the macros we test be defined before any standard                       | 11175     4
   233       | * header file is included.                                                                      | 11176     4
   234       | *                                                                                               | 11177     4
   235       | * Here's a quick run-down of the versions:                                                      | 11178     4
   236       | *  defined(_POSIX_SOURCE)              1003.1-1988                                              | 11179     4
   237       | *  _POSIX_C_SOURCE == 1                1003.1-1990                                              | 11180     4
   238       | *  _POSIX_C_SOURCE == 2                1003.2-1992 C Language Binding Option                    | 11181     4
   239       | *  _POSIX_C_SOURCE == 199309           1003.1b-1993                                             | 11182     4
   240       | *  _POSIX_C_SOURCE == 199506           1003.1c-1995, 1003.1i-1995,                              | 11183     4
   241       | *                                      and the omnibus ISO/IEC 9945-1: 1996                     | 11184     4
   242       | *  _POSIX_C_SOURCE == 200112           1003.1-2001                                              | 11185     4
   243       | *  _POSIX_C_SOURCE == 200809           1003.1-2008                                              | 11186     4
   244       | *                                                                                               | 11187     4
   245       | * In addition, the X/Open Portability Guide, which is now the Single UNIX                       | 11188     4
   246       | * Specification, defines a feature-test macro which indicates the version of                    | 11189     4
   247       | * that specification, and which subsumes _POSIX_C_SOURCE.                                       | 11190     4
   248       | *                                                                                               | 11191     4
   249       | * Our macros begin with two underscores to avoid namespace screwage.                            | 11192     4
   250       | */                                                                                              | 11193     4
   251       |                                                                                                 | 11194     4
   252       |/*                                                                                               | 11195     4
   253       | * If no special macro was specified, make the DragonFly extensions                              | 11196     4
   254       | * available. Also make them available when requested so.                                        | 11197     4
   255       | */                                                                                              | 11198     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   225


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   256       |#if (!defined(_POSIX_C_SOURCE) && !defined(_XOPEN_SOURCE) && \                                   | 11199     4
   257       |    !defined(_ANSI_SOURCE) && !defined(_C99_SOURCE)) || \                                        | 11200     4
   258       |    defined(_DRAGONFLY_SOURCE) || defined(_NETBSD_SOURCE)                                        | 11201     4
   259       |#define __DF_VISIBLE    1                                                                        | 11202     4
   260       |#else                                                                                            | 11203     4
   261       |#define __DF_VISIBLE    0                                                                        | 11204     4
   262       |#endif                                                                                           | 11205     4
   263       |                                                                                                 | 11206     4
   264       |/*-                                                                                              | 11207     4
   265       | * The following definitions are an extension of the behavior originally                         | 11208     4
   266       | * implemented in <sys/_posix.h>, but with a different level of granularity.                     | 11209     4
   267       | * POSIX.1 requires that the macros we test be defined before any standard                       | 11210     4
   268       | * header file is included.                                                                      | 11211     4
   269       | *                                                                                               | 11212     4
   270       | * Here's a quick run-down of the versions:                                                      | 11213     4
   271       | *  defined(_POSIX_SOURCE)              1003.1-1988                                              | 11214     4
   272       | *  _POSIX_C_SOURCE == 1                1003.1-1990                                              | 11215     4
   273       | *  _POSIX_C_SOURCE == 2                1003.2-1992 C Language Binding Option                    | 11216     4
   274       | *  _POSIX_C_SOURCE == 199309           1003.1b-1993                                             | 11217     4
   275       | *  _POSIX_C_SOURCE == 199506           1003.1c-1995, 1003.1i-1995,                              | 11218     4
   276       | *                                      and the omnibus ISO/IEC 9945-1: 1996                     | 11219     4
   277       | *  _POSIX_C_SOURCE == 200112           1003.1-2001                                              | 11220     4
   278       | *  _POSIX_C_SOURCE == 200809           1003.1-2008                                              | 11221     4
   279       | *                                                                                               | 11222     4
   280       | * In addition, the X/Open Portability Guide, which is now the Single UNIX                       | 11223     4
   281       | * Specification, defines a feature-test macro which indicates the version of                    | 11224     4
   282       | * that specification, and which subsumes _POSIX_C_SOURCE.                                       | 11225     4
   283       | *                                                                                               | 11226     4
   284       | * Our macros begin with two underscores to avoid namespace screwage.                            | 11227     4
   285       | */                                                                                              | 11228     4
   286       |                                                                                                 | 11229     4
   287       |/* Deal with IEEE Std. 1003.1-1990, in which _POSIX_C_SOURCE == 1. */                            | 11230     4
   288       |#if defined(_POSIX_C_SOURCE) && _POSIX_C_SOURCE == 1                                             | 11231     4
   289       |#undef _POSIX_C_SOURCE          /* Probably illegal, but beyond caring now. */                   | 11232     4
   290       |#define _POSIX_C_SOURCE         199009                                                           | 11233     4
   291       |#endif                                                                                           | 11234     4
   292       |                                                                                                 | 11235     4
   293       |/* Deal with IEEE Std. 1003.2-1992, in which _POSIX_C_SOURCE == 2. */                            | 11236     4
   294       |#if defined(_POSIX_C_SOURCE) && _POSIX_C_SOURCE == 2                                             | 11237     4
   295       |#undef _POSIX_C_SOURCE                                                                           | 11238     4
   296       |#define _POSIX_C_SOURCE         199209                                                           | 11239     4
   297       |#endif                                                                                           | 11240     4
   298       |                                                                                                 | 11241     4
   299       |/* Deal with various X/Open Portability Guides and Single UNIX Spec. */                          | 11242     4
   300       |#ifdef _XOPEN_SOURCE                                                                             | 11243     4
   301       |#if _XOPEN_SOURCE - 0 >= 700                                                                     | 11244     4
   302       |#define __XSI_VISIBLE           700                                                              | 11245     4
   303       |#undef _POSIX_C_SOURCE                                                                           | 11246     4
   304       |#define _POSIX_C_SOURCE         200809                                                           | 11247     4
   305       |#elif _XOPEN_SOURCE - 0 >= 600                                                                   | 11248     4
   306       |#define __XSI_VISIBLE           600                                                              | 11249     4
   307       |#undef _POSIX_C_SOURCE                                                                           | 11250     4
   308       |#define _POSIX_C_SOURCE         200112                                                           | 11251     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   226


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   309       |#elif _XOPEN_SOURCE - 0 >= 500                                                                   | 11252     4
   310       |#define __XSI_VISIBLE           500                                                              | 11253     4
   311       |#undef _POSIX_C_SOURCE                                                                           | 11254     4
   312       |#define _POSIX_C_SOURCE         199506                                                           | 11255     4
   313       |#endif                                                                                           | 11256     4
   314       |#endif                                                                                           | 11257     4
   315       |                                                                                                 | 11258     4
   316       |/*                                                                                               | 11259     4
   317       | * Deal with all versions of POSIX.  The ordering relative to the tests above is                 | 11260     4
   318       | * important.                                                                                    | 11261     4
   319       | */                                                                                              | 11262     4
   320       |#if defined(_POSIX_SOURCE) && !defined(_POSIX_C_SOURCE)                                          | 11263     4
   321       |#define _POSIX_C_SOURCE         198808                                                           | 11264     4
   322       |#endif                                                                                           | 11265     4
   323       |#ifdef _POSIX_C_SOURCE                                                                           | 11266     4
   324       |#if _POSIX_C_SOURCE >= 200809                                                                    | 11267     4
   325       |#define __POSIX_VISIBLE         200809                                                           | 11268     4
   326       |#define __ISO_C_VISIBLE         1999                                                             | 11269     4
   327       |#elif _POSIX_C_SOURCE >= 200112                                                                  | 11270     4
   328       |#define __POSIX_VISIBLE         200112                                                           | 11271     4
   329       |#define __ISO_C_VISIBLE         1999                                                             | 11272     4
   330       |#elif _POSIX_C_SOURCE >= 199506                                                                  | 11273     4
   331       |#define __POSIX_VISIBLE         199506                                                           | 11274     4
   332       |#define __ISO_C_VISIBLE         1990                                                             | 11275     4
   333       |#elif _POSIX_C_SOURCE >= 199309                                                                  | 11276     4
   334       |#define __POSIX_VISIBLE         199309                                                           | 11277     4
   335       |#define __ISO_C_VISIBLE         1990                                                             | 11278     4
   336       |#elif _POSIX_C_SOURCE >= 199209                                                                  | 11279     4
   337       |#define __POSIX_VISIBLE         199209                                                           | 11280     4
   338       |#define __ISO_C_VISIBLE         1990                                                             | 11281     4
   339       |#elif _POSIX_C_SOURCE >= 199009                                                                  | 11282     4
   340       |#define __POSIX_VISIBLE         199009                                                           | 11283     4
   341       |#define __ISO_C_VISIBLE         1990                                                             | 11284     4
   342       |#else                                                                                            | 11285     4
   343       |#define __POSIX_VISIBLE         198808                                                           | 11286     4
   344       |#define __ISO_C_VISIBLE         0                                                                | 11287     4
   345       |#endif /* _POSIX_C_SOURCE */                                                                     | 11288     4
   346       |#else                                                                                            | 11289     4
   347       |/*-                                                                                              | 11290     4
   348       | * Deal with _ANSI_SOURCE:                                                                       | 11291     4
   349       | * If it is defined, and no other compilation environment is explicitly                          | 11292     4
   350       | * requested, then define our internal feature-test macros to zero.  This                        | 11293     4
   351       | * makes no difference to the preprocessor (undefined symbols in preprocessing                   | 11294     4
   352       | * expressions are defined to have value zero), but makes it more convenient for                 | 11295     4
   353       | * a test program to print out the values.                                                       | 11296     4
   354       | *                                                                                               | 11297     4
   355       | * If a program mistakenly defines _ANSI_SOURCE and some other macro such as                     | 11298     4
   356       | * _POSIX_C_SOURCE, we will assume that it wants the broader compilation                         | 11299     4
   357       | * environment (and in fact we will never get here).                                             | 11300     4
   358       | */                                                                                              | 11301     4
   359       |#if defined(_ANSI_SOURCE)       /* Hide almost everything. */                                    | 11302     4
   360       |#define __POSIX_VISIBLE         0                                                                | 11303     4
   361       |#define __XSI_VISIBLE           0                                                                | 11304     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   227


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   362       |#define __BSD_VISIBLE           0                                                                | 11305     4
   363       |#define __ISO_C_VISIBLE         1990                                                             | 11306     4
   364       |#define __EXT1_VISIBLE          0                                                                | 11307     4
   365       |#elif defined(_C99_SOURCE)      /* Localism to specify strict C99 env. */                        | 11308     4
   366       |#define __POSIX_VISIBLE         0                                                                | 11309     4
   367       |#define __XSI_VISIBLE           0                                                                | 11310     4
   368       |#define __BSD_VISIBLE           0                                                                | 11311     4
   369       |#define __ISO_C_VISIBLE         1999                                                             | 11312     4
   370       |#define __EXT1_VISIBLE          0                                                                | 11313     4
   371       |#elif defined(_C11_SOURCE)      /* Localism to specify strict C11 env. */                        | 11314     4
   372       |#define __POSIX_VISIBLE         0                                                                | 11315     4
   373       |#define __XSI_VISIBLE           0                                                                | 11316     4
   374       |#define __BSD_VISIBLE           0                                                                | 11317     4
   375       |#define __ISO_C_VISIBLE         2011                                                             | 11318     4
   376       |#define __EXT1_VISIBLE          0                                                                | 11319     4
   377       |#else                           /* Default environment: show everything. */                      | 11320     4
   378       |#define __POSIX_VISIBLE         200809                                                           | 11321     4
   379       |#define __XSI_VISIBLE           700                                                              | 11322     4
   380       |#define __BSD_VISIBLE           1                                                                | 11323     4
   381       |#define __ISO_C_VISIBLE         2011                                                             | 11324     4
   382       |#define __EXT1_VISIBLE          1                                                                | 11325     4
   383       |#endif                                                                                           | 11326     4
   384       |#endif                                                                                           | 11327     4
   385       |                                                                                                 | 11328     4
   386       |/* User override __EXT1_VISIBLE */                                                               | 11329     4
   387       |#if defined(__STDC_WANT_LIB_EXT1__)                                                              | 11330     4
   388       |#undef  __EXT1_VISIBLE                                                                           | 11331     4
   389       |#if __STDC_WANT_LIB_EXT1__                                                                       | 11332     4
   390       |#define __EXT1_VISIBLE          1                                                                | 11333     4
   391       |#else                                                                                            | 11334     4
   392       |#define __EXT1_VISIBLE          0                                                                | 11335     4
   393       |#endif                                                                                           | 11336     4
   394       |#endif /* __STDC_WANT_LIB_EXT1__ */                                                              | 11337     4
   395       |                                                                                                 | 11338     4
   396       |#if defined(__370__) || defined(__mips) || defined(__powerpc64__)                                | 11339     4
   397       |#define __NO_TLS 1                                                                               | 11340     4
   398       |#endif                                                                                           | 11341     4
   399       |                                                                                                 | 11342     4
   400       |                                                                                                 | 11343     4
   401       |/* easier than stripping __FBSDID() from sources - Greg 2008/07/28 */                            | 11344     4
   402       |#define __FBSDID(x)                                                                              | 11345     4
   403       |                                                                                                 | 11346     4
   404       |#endif /* !_SYS_CDEFS_H_ */                                                                      | 11347     4
   405       |#pragma pack(reset)                                                                              | 11348     4
    42       |                                                                                                 | 11349    24
    43       |#if __POSIX_VISIBLE                                                                              | 11350    24
    44       |#define _POSIX_ARG_MAX          4096                                                             | 11351    24
    45       |#define _POSIX_CHILD_MAX        25                                                               | 11352    24
    46       |#define _POSIX_LINK_MAX         8                                                                | 11353    24
    47       |#define _POSIX_MAX_CANON        255                                                              | 11354    24
    48       |#define _POSIX_MAX_INPUT        255                                                              | 11355    24
    49       |#define _POSIX_NAME_MAX         14                                                               | 11356    24
    50       |#define _POSIX_NGROUPS_MAX      8                                                                | 11357    24
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   228


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    51       |#define _POSIX_OPEN_MAX         20                                                               | 11358    24
    52       |#define _POSIX_PATH_MAX         256                                                              | 11359    24
    53       |#define _POSIX_PIPE_BUF         512                                                              | 11360    24
    54       |#define _POSIX_SSIZE_MAX        32767                                                            | 11361    24
    55       |#define _POSIX_STREAM_MAX       8                                                                | 11362    24
    56       |#define _POSIX_TZNAME_MAX       6                                                                | 11363    24
    57       |                                                                                                 | 11364    24
    57       +                                                                                                 + 11364    24
    58       |#define BC_BASE_MAX                99   /* max ibase/obase values in bc(1) */                    | 11365    24
    59       |#define BC_DIM_MAX               2048   /* max array elements in bc(1) */                        | 11366    24
    60       |#define BC_SCALE_MAX               99   /* max scale value in bc(1) */                           | 11367    24
    61       |#define BC_STRING_MAX            1000   /* max const string length in bc(1) */                   | 11368    24
    62       |#define COLL_WEIGHTS_MAX            0   /* max weights for order keyword */                      | 11369    24
    63       |#define EXPR_NEST_MAX              32   /* max expressions nested in expr(1) */                  | 11370    24
    64       |#define LINE_MAX                 2048   /* max bytes in an input line */                         | 11371    24
    65       |#define RE_DUP_MAX                255   /* max RE's in interval notation */                      | 11372    24
    66       |                                                                                                 | 11373    24
    67       |#define _POSIX2_BC_BASE_MAX     99                                                               | 11374    24
    68       |#define _POSIX2_BC_DIM_MAX      2048                                                             | 11375    24
    69       |#define _POSIX2_BC_SCALE_MAX    99                                                               | 11376    24
    70       |#define _POSIX2_BC_STRING_MAX   1000                                                             | 11377    24
    71       |#define _POSIX2_EQUIV_CLASS_MAX 2                                                                | 11378    24
    72       |#define _POSIX2_EXPR_NEST_MAX   32                                                               | 11379    24
    73       |#define _POSIX2_LINE_MAX        2048                                                             | 11380    24
    74       |#define _POSIX2_RE_DUP_MAX      255                                                              | 11381    24
    75       |#endif                                                                                           | 11382    24
    76       |                                                                                                 | 11383    24
    77       |#if __POSIX_VISIBLE >= 199309                                                                    | 11384    24
    78       |#define _POSIX_AIO_LISTIO_MAX   16                                                               | 11385    24
    79       |#define _POSIX_AIO_MAX          1                                                                | 11386    24
    80       |#define _POSIX_DELAYTIMER_MAX   32                                                               | 11387    24
    81       |#define _POSIX_MQ_OPEN_MAX      8                                                                | 11388    24
    82       |#define _POSIX_MQ_PRIO_MAX      32                                                               | 11389    24
    83       |#define _POSIX_RTSIG_MAX        8                                                                | 11390    24
    84       |#define _POSIX_SEM_NSEMS_MAX    256                                                              | 11391    24
    85       |#define _POSIX_SEM_VALUE_MAX    32767                                                            | 11392    24
    86       |#define _POSIX_SIGQUEUE_MAX     32                                                               | 11393    24
    87       |#define _POSIX_TIMER_MAX        32                                                               | 11394    24
    88       |#endif                                                                                           | 11395    24
    89       |                                                                                                 | 11396    24
    89       +                                                                                                 + 11396    24
    90       |#if __POSIX_VISIBLE >= 199506                                                                    | 11397    24
    91       |#define _POSIX_THREAD_DESTRUCTOR_ITERATIONS 4                                                    | 11398    24
    92       |#define _POSIX_THREAD_KEYS_MAX  128                                                              | 11399    24
    93       |#define _POSIX_THREAD_THREADS_MAX 64                                                             | 11400    24
    94       |#endif                                                                                           | 11401    24
    95       |                                                                                                 | 11402    24
    95       +                                                                                                 + 11402    24
    96       |#if __POSIX_VISIBLE >= 200112                                                                    | 11403    24
    97       |#define _POSIX_HOST_NAME_MAX    255                                                              | 11404    24
    98       |#define _POSIX_LOGIN_NAME_MAX   9                                                                | 11405    24
    99       |#define _POSIX_SS_REPL_MAX      4                                                                | 11406    24
   100       |#define _POSIX_SYMLINK_MAX      255                                                              | 11407    24
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   229


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   101       |#define _POSIX_SYMLOOP_MAX      8                                                                | 11408    24
   102       |#define _POSIX_TRACE_EVENT_NAME_MAX 30                                                           | 11409    24
   103       |#define _POSIX_TRACE_NAME_MAX   8                                                                | 11410    24
   104       |#define _POSIX_TRACE_SYS_MAX    8                                                                | 11411    24
   105       |#define _POSIX_TRACE_USER_EVENT_MAX 32                                                           | 11412    24
   106       |#define _POSIX_TTY_NAME_MAX     9                                                                | 11413    24
   107       |#define _POSIX2_CHARCLASS_NAME_MAX 14                                                            | 11414    24
   108       |#define _POSIX2_COLL_WEIGHTS_MAX 2                                                               | 11415    24
   109       |                                                                                                 | 11416    24
   109       +                                                                                                 + 11416    24
   110       |#define _POSIX_RE_DUP_MAX       _POSIX2_RE_DUP_MAX                                               | 11417    24
   111       |#endif                                                                                           | 11418    24
   112       |                                                                                                 | 11419    24
   113       |#if __XSI_VISIBLE                                                                                | 11420    24
   114       |#define _XOPEN_IOV_MAX          16                                                               | 11421    24
   115       |#define _XOPEN_NAME_MAX         255                                                              | 11422    24
   116       |#define _XOPEN_PATH_MAX         1024                                                             | 11423    24
   117       |#define PASS_MAX                128     /* _PASSWORD_LEN from <pwd.h> */                         | 11424    24
   118       |                                                                                                 | 11425    24
   118       +                                                                                                 + 11425    24
   119       |#define NL_ARGMAX               99      /* max # of position args for printf */                  | 11426    24
   120       |#define NL_LANGMAX              31      /* max LANG name length */                               | 11427    24
   121       |#define NL_MSGMAX               32767                                                            | 11428    24
   122       |#define NL_NMAX                 1                                                                | 11429    24
   123       |#define NL_SETMAX               255                                                              | 11430    24
   124       |#define NL_TEXTMAX              2048                                                             | 11431    24
   125       |#endif                                                                                           | 11432    24
   126       |                                                                                                 | 11433    24
   127       |#define MB_LEN_MAX              6       /* 31-bit UTF-8 */                                       | 11434    24
   128       |                                                                                                 | 11435    24
   129       |#include <sys/limits.h>                                                                          | 11436    24
     1       |/* release 2.25.00 */                                                                            | 11437    25
     2       |#pragma pack()                                                                                   | 11438    25
     3       |/*-                                                                                              | 11439    25
     4       | * Copyright (c) 1988, 1993                                                                      | 11440    25
     5       | *      The Regents of the University of California.  All rights reserved.                       | 11441    25
     6       | *                                                                                               | 11442    25
     7       | * Redistribution and use in source and binary forms, with or without                            | 11443    25
     8       | * modification, are permitted provided that the following conditions                            | 11444    25
     9       | * are met:                                                                                      | 11445    25
    10       | * 1. Redistributions of source code must retain the above copyright                             | 11446    25
    11       | *    notice, this list of conditions and the following disclaimer.                              | 11447    25
    12       | * 2. Redistributions in binary form must reproduce the above copyright                          | 11448    25
    13       | *    notice, this list of conditions and the following disclaimer in the                        | 11449    25
    14       | *    documentation and/or other materials provided with the distribution.                       | 11450    25
    15       | * 4. Neither the name of the University nor the names of its contributors                       | 11451    25
    16       | *    may be used to endorse or promote products derived from this software                      | 11452    25
    17       | *    without specific prior written permission.                                                 | 11453    25
    18       | *                                                                                               | 11454    25
    19       | * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND                       | 11455    25
    20       | * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE                         | 11456    25
    21       | * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE                    | 11457    25
    22       | * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE                      | 11458    25
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   230


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    23       | * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL                    | 11459    25
    24       | * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS                       | 11460    25
    25       | * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)                         | 11461    25
    26       | * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT                    | 11462    25
    27       | * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY                     | 11463    25
    28       | * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF                        | 11464    25
    29       | * SUCH DAMAGE.                                                                                  | 11465    25
    30       | *                                                                                               | 11466    25
    31       | * $FreeBSD: src/sys/sys/limits.h,v 1.9 2005/01/07 02:29:23 imp Exp $                            | 11467    25
    32       | */                                                                                              | 11468    25
    33       |                                                                                                 | 11469    25
    34       |#ifndef _SYS_LIMITS_H_                                                                           | 11470    25
    35       |#define _SYS_LIMITS_H_                                                                           | 11471    25
    36       |                                                                                                 | 11472    25
    37       |#include <sys/cdefs.h>                                                                           | 11473    25
     1       |/* release 2.25.00 */                                                                            | 11474     4
     2       |#pragma pack()                                                                                   | 11475     4
     3       |/*                                                                                               | 11476     4
     4       | * Copyright (c) 1991, 1993                                                                      | 11477     4
     5       | *      The Regents of the University of California.  All rights reserved.                       | 11478     4
     6       | *                                                                                               | 11479     4
     7       | * This code is derived from software contributed to Berkeley by                                 | 11480     4
     8       | * Berkeley Software Design, Inc.                                                                | 11481     4
     9       | *                                                                                               | 11482     4
    10       | * Redistribution and use in source and binary forms, with or without                            | 11483     4
    11       | * modification, are permitted provided that the following conditions                            | 11484     4
    12       | * are met:                                                                                      | 11485     4
    13       | * 1. Redistributions of source code must retain the above copyright                             | 11486     4
    14       | *    notice, this list of conditions and the following disclaimer.                              | 11487     4
    15       | * 2. Redistributions in binary form must reproduce the above copyright                          | 11488     4
    16       | *    notice, this list of conditions and the following disclaimer in the                        | 11489     4
    17       | *    documentation and/or other materials provided with the distribution.                       | 11490     4
    18       | * 3. All advertising materials mentioning features or use of this software                      | 11491     4
    19       | *    must display the following acknowledgement:                                                | 11492     4
    20       | *      This product includes software developed by the University of                            | 11493     4
    21       | *      California, Berkeley and its contributors.                                               | 11494     4
    22       | * 4. Neither the name of the University nor the names of its contributors                       | 11495     4
    23       | *    may be used to endorse or promote products derived from this software                      | 11496     4
    24       | *    without specific prior written permission.                                                 | 11497     4
    25       | *                                                                                               | 11498     4
    26       | * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND                       | 11499     4
    27       | * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE                         | 11500     4
    28       | * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE                    | 11501     4
    29       | * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE                      | 11502     4
    30       | * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL                    | 11503     4
    31       | * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS                       | 11504     4
    32       | * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)                         | 11505     4
    33       | * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT                    | 11506     4
    34       | * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY                     | 11507     4
    35       | * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF                        | 11508     4
    36       | * SUCH DAMAGE.                                                                                  | 11509     4
    37       | *                                                                                               | 11510     4
    38       | *      @(#)cdefs.h     8.8 (Berkeley) 1/9/95                                                    | 11511     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   231


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    39       | */                                                                                              | 11512     4
    40       |                                                                                                 | 11513     4
    41       |#ifndef _SYS_CDEFS_H_                                                                            | 11514     4
    42       |#define _SYS_CDEFS_H_                                                                            | 11515     4
    43       |                                                                                                 | 11516     4
    44       |#if defined(__cplusplus)                                                                         | 11517     4
    45       |#define __BEGIN_DECLS   extern "C" {                                                             | 11518     4
    46       |#define __END_DECLS     }                                                                        | 11519     4
    47       |#else                                                                                            | 11520     4
    48       |#define __BEGIN_DECLS                                                                            | 11521     4
    49       |#define __END_DECLS                                                                              | 11522     4
    50       |#endif                                                                                           | 11523     4
    51       |                                                                                                 | 11524     4
    52       |/*                                                                                               | 11525     4
    53       | * This code has been put in place to help reduce the addition of                                | 11526     4
    54       | * compiler specific defines in the code.  It helps to aid in                                    | 11527     4
    55       | * having a compiler-agnostic source tree.                                                       | 11528     4
    56       | */                                                                                              | 11529     4
    57       |#define __CC_SUPPORTS_INLINE 1                                                                   | 11530     4
    58       |#define __CC_SUPPORTS___INLINE 1                                                                 | 11531     4
    59       |#define __CC_SUPPORTS___INLINE__ 1                                                               | 11532     4
    60       |                                                                                                 | 11533     4
    61       |#define __CC_SUPPORTS___FUNC__ 1                                                                 | 11534     4
    62       |                                                                                                 | 11535     4
    63       |                                                                                                 | 11536     4
    64       |/*                                                                                               | 11537     4
    65       | * The __CONCAT macro is used to concatenate parts of symbol names, e.g.                         | 11538     4
    66       | * with "#define OLD(foo) __CONCAT(old,foo)", OLD(foo) produces oldfoo.                          | 11539     4
    67       | * The __CONCAT macro is a bit tricky to use if it must work in non-ANSI                         | 11540     4
    68       | * mode -- there must be no spaces between its arguments, and for nested                         | 11541     4
    69       | * __CONCAT's, all the __CONCAT's must be at the left.  __CONCAT can also                        | 11542     4
    70       | * concatenate double-quoted strings produced by the __STRING macro, but                         | 11543     4
    71       | * this only works with ANSI C.                                                                  | 11544     4
    72       | *                                                                                               | 11545     4
    73       | * __XSTRING is like __STRING, but it expands any macros in its argument                         | 11546     4
    74       | * first.  It is only available with ANSI C.                                                     | 11547     4
    75       | */                                                                                              | 11548     4
    76       |#if defined(__STDC__) || defined(__cplusplus)                                                    | 11549     4
    77       |#define __P(protos)     protos          /* full-blown ANSI C */                                  | 11550     4
    78       |#define __CONCAT1(x,y)  x ## y                                                                   | 11551     4
    79       |#define __CONCAT(x,y)   __CONCAT1(x,y)                                                           | 11552     4
    80       |#define __STRING(x)     #x              /* stringify without expanding x */                      | 11553     4
    81       |#define __XSTRING(x)    __STRING(x)     /* expand x, then stringify */                           | 11554     4
    82       |                                                                                                 | 11555     4
    83       |#define __const         const           /* define reserved names to standard */                  | 11556     4
    84       |#define __signed        signed                                                                   | 11557     4
    85       |#define __volatile      volatile                                                                 | 11558     4
    86       |#if defined(__cplusplus)                                                                         | 11559     4
    87       |#define __inline        inline          /* convert to C++ keyword */                             | 11560     4
    88       |#else                                                                                            | 11561     4
    89       |#define __inline        __inline__      /* Use the Systems/C keyword */                          | 11562     4
    90       |#endif /* !__cplusplus */                                                                        | 11563     4
    91       |                                                                                                 | 11564     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   232


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    92       |#else   /* !(__STDC__ || __cplusplus) */                                                         | 11565     4
    93       |#define __P(protos)     ()              /* traditional C preprocessor */                         | 11566     4
    94       |#define __CONCAT(x,y)   x/**/y                                                                   | 11567     4
    95       |#define __STRING(x)     "x"                                                                      | 11568     4
    96       |                                                                                                 | 11569     4
    97       |#define __const                         /* delete pseudo-ANSI C keywords */                      | 11570     4
    98       |#define __inline                                                                                 | 11571     4
    99       |#define __signed                                                                                 | 11572     4
   100       |#define __volatile                                                                               | 11573     4
   101       |/*                                                                                               | 11574     4
   102       | * In non-ANSI C environments, new programs will want ANSI-only C keywords                       | 11575     4
   103       | * deleted from the program and old programs will want them left alone.                          | 11576     4
   104       | * When using a compiler other than Dignus, programs using the ANSI C keywords                   | 11577     4
   105       | * const, inline etc. as normal identifiers should define -DNO_ANSI_KEYWORDS.                    | 11578     4
   106       | */                                                                                              | 11579     4
   107       |#ifndef NO_ANSI_KEYWORDS                                                                         | 11580     4
   108       |#define const                           /* delete ANSI C keywords */                             | 11581     4
   109       |#define inline                                                                                   | 11582     4
   110       |#define signed                                                                                   | 11583     4
   111       |#define volatile                                                                                 | 11584     4
   112       |#endif  /* !NO_ANSI_KEYWORDS */                                                                  | 11585     4
   113       |#endif  /* !(__STDC__ || __cplusplus) */                                                         | 11586     4
   114       |                                                                                                 | 11587     4
   115       |/*                                                                                               | 11588     4
   116       | * Compiler-dependent macros to help declare dead (non-returning) and                            | 11589     4
   117       | * pure (no side effects) functions, and unused variables.                                       | 11590     4
   118       | */                                                                                              | 11591     4
   119       |#define __dead2 __attribute__((__noreturn__))                                                    | 11592     4
   120       |#define __pure  __attribute__((__pure__))                                                        | 11593     4
   121       |#define __pure2 __attribute__((__const__))                                                       | 11594     4
   122       |#define __unused                                                                                 | 11595     4
   123       |#define __aligned(x)                                                                             | 11596     4
   124       |#define __section(x)                                                                             | 11597     4
   125       |#define __nonnull(x)                                                                             | 11598     4
   126       |#define __used                                                                                   | 11599     4
   127       |                                                                                                 | 11600     4
   128       |#define __always_inline __attribute__((__always_inline__))                                       | 11601     4
   129       |#define __noinline      __attribute__((__noinline__))                                            | 11602     4
   130       |                                                                                                 | 11603     4
   131       |#if __STDC_VERSION__ < 199901                                                                    | 11604     4
   132       |#define __func__  NULL                                                                           | 11605     4
   133       |#endif                                                                                           | 11606     4
   134       |                                                                                                 | 11607     4
   135       |#if !defined(__STRICT_ANSI__) || __STDC_VERSION__ >= 199901                                      | 11608     4
   136       |#define __LONG_LONG_SUPPORTED                                                                    | 11609     4
   137       |#endif                                                                                           | 11610     4
   138       |                                                                                                 | 11611     4
   139       |/* Systems/C recognizes they keyword __restrict__ in both                                        | 11612     4
   140       | * ANSI and non-ANSI mode to indicate C99 restrict semantics.                                    | 11613     4
   141       | **/                                                                                             | 11614     4
   142       |#ifndef __cplusplus                                                                              | 11615     4
   143       |#define __restrict __restrict__                                                                  | 11616     4
   144       |#else                                                                                            | 11617     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   233


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   145       |/* Systems/C++ does not */                                                                       | 11618     4
   146       |#define __restrict                                                                               | 11619     4
   147       |#endif                                                                                           | 11620     4
   148       |                                                                                                 | 11621     4
   149       |/*                                                                                               | 11622     4
   150       | * define-away GCC-specific branch-prediction markers                                            | 11623     4
   151       | */                                                                                              | 11624     4
   152       |#define __predict_true(exp)     (exp)                                                            | 11625     4
   153       |#define __predict_false(exp)    (exp)                                                            | 11626     4
   154       |                                                                                                 | 11627     4
   155       |                                                                                                 | 11628     4
   156       |/*                                                                                               | 11629     4
   157       | * provide a definition of __offsetof(), <stddef.h> and                                          | 11630     4
   158       | * <sys/types.h> reference __offsetof().                                                         | 11631     4
   159       | *                                                                                               | 11632     4
   160       | * For Systems/C, the C compiler recognizes __offsetof(),                                        | 11633     4
   161       | * but we need a definition for versions of C++ prior to 1.85.52.                                | 11634     4
   162       | */                                                                                              | 11635     4
   163       |#if defined(__cplusplus) && (__SYSC_VER__ < (18600))                                             | 11636     4
   164       |#undef __offsetof                                                                                | 11637     4
   165       |#define __offsetof(type, field)  ((size_t)(&((type *)0)->field))                                 | 11638     4
   166       |#endif                                                                                           | 11639     4
   167       |                                                                                                 | 11640     4
   168       |/*                                                                                               | 11641     4
   169       | * Compiler-dependent macros to declare that functions take printf-like                          | 11642     4
   170       | * or scanf-like arguments.                                                                      | 11643     4
   171       | */                                                                                              | 11644     4
   172       |#define __printflike(fmtarg, firstvararg)                                                        | 11645     4
   173       |#define __scanflike(fmtarg, firstvararg)                                                         | 11646     4
   174       |#define __format_arg(fmtarg)                                                                     | 11647     4
   175       |#define __printf0like(fmtarg, firstvararg)                                                       | 11648     4
   176       |                                                                                                 | 11649     4
   177       |/* Compiler-dependent macros that rely on specific extensions. */                                | 11650     4
   178       |#define __printf0like(fmtarg, firstvararg)                                                       | 11651     4
   179       |                                                                                                 | 11652     4
   180       |  /* intended to generate a weak reference as an alias */                                        | 11653     4
   181       |#define __weak_reference(sym,alias)                                                              | 11654     4
   182       |  /* If this symbol is refrenced, cause the linker to emit "msg" */                              | 11655     4
   183       |#define __warn_references(sym,msg)                                                               | 11656     4
   184       |                                                                                                 | 11657     4
   185       | /* This places the string into the resulting object.  It should */                              | 11658     4
   186       | /* probably become #pragma ident */                                                             | 11659     4
   187       |#define __IDSTRING(name,string) static const char name[] __unused = string                       | 11660     4
   188       |                                                                                                 | 11661     4
   189       |#ifndef __RCSID                                                                                  | 11662     4
   190       |#define __RCSID(s)      __IDSTRING(rcsid,s)                                                      | 11663     4
   191       |#endif                                                                                           | 11664     4
   192       |                                                                                                 | 11665     4
   193       |/*                                                                                               | 11666     4
   194       | * Embed the rcs id of a source file in the resulting library.                                   | 11667     4
   195       | * Usage:                                                                                        | 11668     4
   196       | *      __SYSCID("Id: src/sys/sys/cdefs.h,v 1.28.2.8 2002/09/18                                  | 11669     4
   197       |*                                            04:05:13 mikeh Exp $");                             | 11670     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   234


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   198       | */                                                                                              | 11671     4
   199       |#ifndef __SYSCID                                                                                 | 11672     4
   200       |#if !defined(lint) && !defined(STRIP_SYSCID)                                                     | 11673     4
   201       |#define __SYSCID(s)     __IDSTRING(__CONCAT(__rcsid_,__LINE__),s)                                | 11674     4
   202       |#else                                                                                            | 11675     4
   203       |#define __SYSCID(s)     struct __hack                                                            | 11676     4
   204       |#endif                                                                                           | 11677     4
   205       |#endif                                                                                           | 11678     4
   206       |                                                                                                 | 11679     4
   207       |#ifndef __RCSID_SOURCE                                                                           | 11680     4
   208       |#define __RCSID_SOURCE(s) __IDSTRING(rcsid_source,s)                                             | 11681     4
   209       |#endif                                                                                           | 11682     4
   210       |                                                                                                 | 11683     4
   211       |#ifndef __COPYRIGHT                                                                              | 11684     4
   212       |#define __COPYRIGHT(s)  __IDSTRING(copyright,s)                                                  | 11685     4
   213       |#endif                                                                                           | 11686     4
   214       |                                                                                                 | 11687     4
   215       |                                                                                                 | 11688     4
   216       |#ifndef __DECONST                                                                                | 11689     4
   217       |#define __DECONST(type, var)    ((type)(uintptr_t)(const void *)(var))                           | 11690     4
   218       |#endif                                                                                           | 11691     4
   219       |                                                                                                 | 11692     4
   220       |#ifndef __DEVOLATILE                                                                             | 11693     4
   221       |#define __DEVOLATILE(type, var) ((type)(uintptr_t)(volatile void *)(var))                        | 11694     4
   222       |#endif                                                                                           | 11695     4
   223       |                                                                                                 | 11696     4
   224       |#ifndef __DEQUALIFY                                                                              | 11697     4
   225       |#define __DEQUALIFY(type, var)  ((type)(uintptr_t)(const volatile void *)(var))                  | 11698     4
   226       |#endif                                                                                           | 11699     4
   227       |                                                                                                 | 11700     4
   228       |                                                                                                 | 11701     4
   229       |/*-                                                                                              | 11702     4
   230       | * The following definitions are an extension of the behavior originally                         | 11703     4
   231       | * implemented in <sys/_posix.h>, but with a different level of granularity.                     | 11704     4
   232       | * POSIX.1 requires that the macros we test be defined before any standard                       | 11705     4
   233       | * header file is included.                                                                      | 11706     4
   234       | *                                                                                               | 11707     4
   235       | * Here's a quick run-down of the versions:                                                      | 11708     4
   236       | *  defined(_POSIX_SOURCE)              1003.1-1988                                              | 11709     4
   237       | *  _POSIX_C_SOURCE == 1                1003.1-1990                                              | 11710     4
   238       | *  _POSIX_C_SOURCE == 2                1003.2-1992 C Language Binding Option                    | 11711     4
   239       | *  _POSIX_C_SOURCE == 199309           1003.1b-1993                                             | 11712     4
   240       | *  _POSIX_C_SOURCE == 199506           1003.1c-1995, 1003.1i-1995,                              | 11713     4
   241       | *                                      and the omnibus ISO/IEC 9945-1: 1996                     | 11714     4
   242       | *  _POSIX_C_SOURCE == 200112           1003.1-2001                                              | 11715     4
   243       | *  _POSIX_C_SOURCE == 200809           1003.1-2008                                              | 11716     4
   244       | *                                                                                               | 11717     4
   245       | * In addition, the X/Open Portability Guide, which is now the Single UNIX                       | 11718     4
   246       | * Specification, defines a feature-test macro which indicates the version of                    | 11719     4
   247       | * that specification, and which subsumes _POSIX_C_SOURCE.                                       | 11720     4
   248       | *                                                                                               | 11721     4
   249       | * Our macros begin with two underscores to avoid namespace screwage.                            | 11722     4
   250       | */                                                                                              | 11723     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   235


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   251       |                                                                                                 | 11724     4
   252       |/*                                                                                               | 11725     4
   253       | * If no special macro was specified, make the DragonFly extensions                              | 11726     4
   254       | * available. Also make them available when requested so.                                        | 11727     4
   255       | */                                                                                              | 11728     4
   256       |#if (!defined(_POSIX_C_SOURCE) && !defined(_XOPEN_SOURCE) && \                                   | 11729     4
   257       |    !defined(_ANSI_SOURCE) && !defined(_C99_SOURCE)) || \                                        | 11730     4
   258       |    defined(_DRAGONFLY_SOURCE) || defined(_NETBSD_SOURCE)                                        | 11731     4
   259       |#define __DF_VISIBLE    1                                                                        | 11732     4
   260       |#else                                                                                            | 11733     4
   261       |#define __DF_VISIBLE    0                                                                        | 11734     4
   262       |#endif                                                                                           | 11735     4
   263       |                                                                                                 | 11736     4
   264       |/*-                                                                                              | 11737     4
   265       | * The following definitions are an extension of the behavior originally                         | 11738     4
   266       | * implemented in <sys/_posix.h>, but with a different level of granularity.                     | 11739     4
   267       | * POSIX.1 requires that the macros we test be defined before any standard                       | 11740     4
   268       | * header file is included.                                                                      | 11741     4
   269       | *                                                                                               | 11742     4
   270       | * Here's a quick run-down of the versions:                                                      | 11743     4
   271       | *  defined(_POSIX_SOURCE)              1003.1-1988                                              | 11744     4
   272       | *  _POSIX_C_SOURCE == 1                1003.1-1990                                              | 11745     4
   273       | *  _POSIX_C_SOURCE == 2                1003.2-1992 C Language Binding Option                    | 11746     4
   274       | *  _POSIX_C_SOURCE == 199309           1003.1b-1993                                             | 11747     4
   275       | *  _POSIX_C_SOURCE == 199506           1003.1c-1995, 1003.1i-1995,                              | 11748     4
   276       | *                                      and the omnibus ISO/IEC 9945-1: 1996                     | 11749     4
   277       | *  _POSIX_C_SOURCE == 200112           1003.1-2001                                              | 11750     4
   278       | *  _POSIX_C_SOURCE == 200809           1003.1-2008                                              | 11751     4
   279       | *                                                                                               | 11752     4
   280       | * In addition, the X/Open Portability Guide, which is now the Single UNIX                       | 11753     4
   281       | * Specification, defines a feature-test macro which indicates the version of                    | 11754     4
   282       | * that specification, and which subsumes _POSIX_C_SOURCE.                                       | 11755     4
   283       | *                                                                                               | 11756     4
   284       | * Our macros begin with two underscores to avoid namespace screwage.                            | 11757     4
   285       | */                                                                                              | 11758     4
   286       |                                                                                                 | 11759     4
   287       |/* Deal with IEEE Std. 1003.1-1990, in which _POSIX_C_SOURCE == 1. */                            | 11760     4
   288       |#if defined(_POSIX_C_SOURCE) && _POSIX_C_SOURCE == 1                                             | 11761     4
   289       |#undef _POSIX_C_SOURCE          /* Probably illegal, but beyond caring now. */                   | 11762     4
   290       |#define _POSIX_C_SOURCE         199009                                                           | 11763     4
   291       |#endif                                                                                           | 11764     4
   292       |                                                                                                 | 11765     4
   293       |/* Deal with IEEE Std. 1003.2-1992, in which _POSIX_C_SOURCE == 2. */                            | 11766     4
   294       |#if defined(_POSIX_C_SOURCE) && _POSIX_C_SOURCE == 2                                             | 11767     4
   295       |#undef _POSIX_C_SOURCE                                                                           | 11768     4
   296       |#define _POSIX_C_SOURCE         199209                                                           | 11769     4
   297       |#endif                                                                                           | 11770     4
   298       |                                                                                                 | 11771     4
   299       |/* Deal with various X/Open Portability Guides and Single UNIX Spec. */                          | 11772     4
   300       |#ifdef _XOPEN_SOURCE                                                                             | 11773     4
   301       |#if _XOPEN_SOURCE - 0 >= 700                                                                     | 11774     4
   302       |#define __XSI_VISIBLE           700                                                              | 11775     4
   303       |#undef _POSIX_C_SOURCE                                                                           | 11776     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   236


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   304       |#define _POSIX_C_SOURCE         200809                                                           | 11777     4
   305       |#elif _XOPEN_SOURCE - 0 >= 600                                                                   | 11778     4
   306       |#define __XSI_VISIBLE           600                                                              | 11779     4
   307       |#undef _POSIX_C_SOURCE                                                                           | 11780     4
   308       |#define _POSIX_C_SOURCE         200112                                                           | 11781     4
   309       |#elif _XOPEN_SOURCE - 0 >= 500                                                                   | 11782     4
   310       |#define __XSI_VISIBLE           500                                                              | 11783     4
   311       |#undef _POSIX_C_SOURCE                                                                           | 11784     4
   312       |#define _POSIX_C_SOURCE         199506                                                           | 11785     4
   313       |#endif                                                                                           | 11786     4
   314       |#endif                                                                                           | 11787     4
   315       |                                                                                                 | 11788     4
   316       |/*                                                                                               | 11789     4
   317       | * Deal with all versions of POSIX.  The ordering relative to the tests above is                 | 11790     4
   318       | * important.                                                                                    | 11791     4
   319       | */                                                                                              | 11792     4
   320       |#if defined(_POSIX_SOURCE) && !defined(_POSIX_C_SOURCE)                                          | 11793     4
   321       |#define _POSIX_C_SOURCE         198808                                                           | 11794     4
   322       |#endif                                                                                           | 11795     4
   323       |#ifdef _POSIX_C_SOURCE                                                                           | 11796     4
   324       |#if _POSIX_C_SOURCE >= 200809                                                                    | 11797     4
   325       |#define __POSIX_VISIBLE         200809                                                           | 11798     4
   326       |#define __ISO_C_VISIBLE         1999                                                             | 11799     4
   327       |#elif _POSIX_C_SOURCE >= 200112                                                                  | 11800     4
   328       |#define __POSIX_VISIBLE         200112                                                           | 11801     4
   329       |#define __ISO_C_VISIBLE         1999                                                             | 11802     4
   330       |#elif _POSIX_C_SOURCE >= 199506                                                                  | 11803     4
   331       |#define __POSIX_VISIBLE         199506                                                           | 11804     4
   332       |#define __ISO_C_VISIBLE         1990                                                             | 11805     4
   333       |#elif _POSIX_C_SOURCE >= 199309                                                                  | 11806     4
   334       |#define __POSIX_VISIBLE         199309                                                           | 11807     4
   335       |#define __ISO_C_VISIBLE         1990                                                             | 11808     4
   336       |#elif _POSIX_C_SOURCE >= 199209                                                                  | 11809     4
   337       |#define __POSIX_VISIBLE         199209                                                           | 11810     4
   338       |#define __ISO_C_VISIBLE         1990                                                             | 11811     4
   339       |#elif _POSIX_C_SOURCE >= 199009                                                                  | 11812     4
   340       |#define __POSIX_VISIBLE         199009                                                           | 11813     4
   341       |#define __ISO_C_VISIBLE         1990                                                             | 11814     4
   342       |#else                                                                                            | 11815     4
   343       |#define __POSIX_VISIBLE         198808                                                           | 11816     4
   344       |#define __ISO_C_VISIBLE         0                                                                | 11817     4
   345       |#endif /* _POSIX_C_SOURCE */                                                                     | 11818     4
   346       |#else                                                                                            | 11819     4
   347       |/*-                                                                                              | 11820     4
   348       | * Deal with _ANSI_SOURCE:                                                                       | 11821     4
   349       | * If it is defined, and no other compilation environment is explicitly                          | 11822     4
   350       | * requested, then define our internal feature-test macros to zero.  This                        | 11823     4
   351       | * makes no difference to the preprocessor (undefined symbols in preprocessing                   | 11824     4
   352       | * expressions are defined to have value zero), but makes it more convenient for                 | 11825     4
   353       | * a test program to print out the values.                                                       | 11826     4
   354       | *                                                                                               | 11827     4
   355       | * If a program mistakenly defines _ANSI_SOURCE and some other macro such as                     | 11828     4
   356       | * _POSIX_C_SOURCE, we will assume that it wants the broader compilation                         | 11829     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   237


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   357       | * environment (and in fact we will never get here).                                             | 11830     4
   358       | */                                                                                              | 11831     4
   359       |#if defined(_ANSI_SOURCE)       /* Hide almost everything. */                                    | 11832     4
   360       |#define __POSIX_VISIBLE         0                                                                | 11833     4
   361       |#define __XSI_VISIBLE           0                                                                | 11834     4
   362       |#define __BSD_VISIBLE           0                                                                | 11835     4
   363       |#define __ISO_C_VISIBLE         1990                                                             | 11836     4
   364       |#define __EXT1_VISIBLE          0                                                                | 11837     4
   365       |#elif defined(_C99_SOURCE)      /* Localism to specify strict C99 env. */                        | 11838     4
   366       |#define __POSIX_VISIBLE         0                                                                | 11839     4
   367       |#define __XSI_VISIBLE           0                                                                | 11840     4
   368       |#define __BSD_VISIBLE           0                                                                | 11841     4
   369       |#define __ISO_C_VISIBLE         1999                                                             | 11842     4
   370       |#define __EXT1_VISIBLE          0                                                                | 11843     4
   371       |#elif defined(_C11_SOURCE)      /* Localism to specify strict C11 env. */                        | 11844     4
   372       |#define __POSIX_VISIBLE         0                                                                | 11845     4
   373       |#define __XSI_VISIBLE           0                                                                | 11846     4
   374       |#define __BSD_VISIBLE           0                                                                | 11847     4
   375       |#define __ISO_C_VISIBLE         2011                                                             | 11848     4
   376       |#define __EXT1_VISIBLE          0                                                                | 11849     4
   377       |#else                           /* Default environment: show everything. */                      | 11850     4
   378       |#define __POSIX_VISIBLE         200809                                                           | 11851     4
   379       |#define __XSI_VISIBLE           700                                                              | 11852     4
   380       |#define __BSD_VISIBLE           1                                                                | 11853     4
   381       |#define __ISO_C_VISIBLE         2011                                                             | 11854     4
   382       |#define __EXT1_VISIBLE          1                                                                | 11855     4
   383       |#endif                                                                                           | 11856     4
   384       |#endif                                                                                           | 11857     4
   385       |                                                                                                 | 11858     4
   386       |/* User override __EXT1_VISIBLE */                                                               | 11859     4
   387       |#if defined(__STDC_WANT_LIB_EXT1__)                                                              | 11860     4
   388       |#undef  __EXT1_VISIBLE                                                                           | 11861     4
   389       |#if __STDC_WANT_LIB_EXT1__                                                                       | 11862     4
   390       |#define __EXT1_VISIBLE          1                                                                | 11863     4
   391       |#else                                                                                            | 11864     4
   392       |#define __EXT1_VISIBLE          0                                                                | 11865     4
   393       |#endif                                                                                           | 11866     4
   394       |#endif /* __STDC_WANT_LIB_EXT1__ */                                                              | 11867     4
   395       |                                                                                                 | 11868     4
   396       |#if defined(__370__) || defined(__mips) || defined(__powerpc64__)                                | 11869     4
   397       |#define __NO_TLS 1                                                                               | 11870     4
   398       |#endif                                                                                           | 11871     4
   399       |                                                                                                 | 11872     4
   400       |                                                                                                 | 11873     4
   401       |/* easier than stripping __FBSDID() from sources - Greg 2008/07/28 */                            | 11874     4
   402       |#define __FBSDID(x)                                                                              | 11875     4
   403       |                                                                                                 | 11876     4
   404       |#endif /* !_SYS_CDEFS_H_ */                                                                      | 11877     4
   405       |#pragma pack(reset)                                                                              | 11878     4
    38       |#include <machine/_limits.h>                                                                     | 11879    25
     1       |/* release 2.25.00 */                                                                            | 11880    26
     2       |#pragma pack()                                                                                   | 11881    26
     3       |/*-                                                                                              | 11882    26
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   238


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
     4       | * Copyright (c) 1988, 1993                                                                      | 11883    26
     5       | *      The Regents of the University of California.  All rights reserved.                       | 11884    26
     6       | *                                                                                               | 11885    26
     7       | * Redistribution and use in source and binary forms, with or without                            | 11886    26
     8       | * modification, are permitted provided that the following conditions                            | 11887    26
     9       | * are met:                                                                                      | 11888    26
    10       | * 1. Redistributions of source code must retain the above copyright                             | 11889    26
    11       | *    notice, this list of conditions and the following disclaimer.                              | 11890    26
    12       | * 2. Redistributions in binary form must reproduce the above copyright                          | 11891    26
    13       | *    notice, this list of conditions and the following disclaimer in the                        | 11892    26
    14       | *    documentation and/or other materials provided with the distribution.                       | 11893    26
    15       | * 4. Neither the name of the University nor the names of its contributors                       | 11894    26
    16       | *    may be used to endorse or promote products derived from this software                      | 11895    26
    17       | *    without specific prior written permission.                                                 | 11896    26
    18       | *                                                                                               | 11897    26
    19       | * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND                       | 11898    26
    20       | * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE                         | 11899    26
    21       | * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE                    | 11900    26
    22       | * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE                      | 11901    26
    23       | * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL                    | 11902    26
    24       | * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS                       | 11903    26
    25       | * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)                         | 11904    26
    26       | * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT                    | 11905    26
    27       | * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY                     | 11906    26
    28       | * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF                        | 11907    26
    29       | * SUCH DAMAGE.                                                                                  | 11908    26
    30       | *                                                                                               | 11909    26
    31       | *      @(#)limits.h    8.3 (Berkeley) 1/4/94                                                    | 11910    26
    32       | * $FreeBSD: src/sys/i386/include/_limits.h,v 1.27 2005/01/06 22:18:15 imp Exp $                 | 11911    26
    33       | */                                                                                              | 11912    26
    34       |                                                                                                 | 11913    26
    35       |#ifndef _MACHINE__LIMITS_H_                                                                      | 11914    26
    36       |#define _MACHINE__LIMITS_H_                                                                      | 11915    26
    37       |                                                                                                 | 11916    26
    38       |/*                                                                                               | 11917    26
    39       | * According to ANSI (section 2.2.4.2), the values below must be usable by                       | 11918    26
    40       | * #if preprocessing directives.  Additionally, the expression must have the                     | 11919    26
    41       | * same type as would an expression that is an object of the corresponding                       | 11920    26
    42       | * type converted according to the integral promotions.  The subtraction for                     | 11921    26
    43       | * INT_MIN, etc., is so the value is not unsigned; e.g., 0x80000000 is an                        | 11922    26
    44       | * unsigned int for 32-bit two's complement ANSI compilers (section 3.1.3.2).                    | 11923    26
    45       | * These numbers are for the default configuration of gcc.  They work for                        | 11924    26
    46       | * some other compilers as well, but this should not be depended on.                             | 11925    26
    47       | */                                                                                              | 11926    26
    48       |                                                                                                 | 11927    26
    49       |#define __CHAR_BIT      8               /* number of bits in a char */                           | 11928    26
    50       |                                                                                                 | 11929    26
    51       |#define __SCHAR_MAX     0x7f            /* max value for a signed char */                        | 11930    26
    52       |#define __SCHAR_MIN     (-0x7f - 1)     /* min value for a signed char */                        | 11931    26
    53       |                                                                                                 | 11932    26
    54       |#define __UCHAR_MAX     0xff            /* max value for an unsigned char */                     | 11933    26
    55       |                                                                                                 | 11934    26
    56       |#define __USHRT_MAX     0xffff          /* max value for an unsigned short */                    | 11935    26
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   239


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    57       |#define __SHRT_MAX      0x7fff          /* max value for a short */                              | 11936    26
    58       |#define __SHRT_MIN      (-0x7fff - 1)   /* min value for a short */                              | 11937    26
    59       |                                                                                                 | 11938    26
    60       |#define __UINT_MAX      0xffffffffU     /* max value for an unsigned int */                      | 11939    26
    61       |#define __INT_MAX       0x7fffffff      /* max value for an int */                               | 11940    26
    62       |#define __INT_MIN       (-0x7fffffff - 1)       /* min value for an int */                       | 11941    26
    63       |                                                                                                 | 11942    26
    64       |#ifdef _LP64                                                                                     | 11943    26
    65       |  /* (long) is 64-bits */                                                                        | 11944    26
    66       |#define __ULONG_MAX     0xffffffffffffffffUL                                                     | 11945    26
    67       |#define __LONG_MAX      0x7fffffffffffffffL                                                      | 11946    26
    68       |#define __LONG_MIN      (-0x7fffffffffffffffL - 1)                                               | 11947    26
    69       |#else                                                                                            | 11948    26
    70       |#define __ULONG_MAX     0xffffffffUL    /* max value for an unsigned long */                     | 11949    26
    71       |#define __LONG_MAX      0x7fffffffL     /* max value for a long */                               | 11950    26
    72       |#define __LONG_MIN      (-0x7fffffffL - 1)      /* min value for a long */                       | 11951    26
    73       |#endif                                                                                           | 11952    26
    74       |                                                                                                 | 11953    26
    75       |                        /* max value for an unsigned long long */                                | 11954    26
    76       |#define __ULLONG_MAX    0xffffffffffffffffULL                                                    | 11955    26
    77       |#define __LLONG_MAX     0x7fffffffffffffffLL    /* max value for a long long */                  | 11956    26
    78       |#define __LLONG_MIN     (-0x7fffffffffffffffLL - 1)  /* min for a long long */                   | 11957    26
    79       |                                                                                                 | 11958    26
    80       |#define __SSIZE_MAX     __INT_MAX       /* max value for a ssize_t */                            | 11959    26
    81       |                                                                                                 | 11960    26
    82       |#define __SIZE_T_MAX    __UINT_MAX      /* max value for a size_t */                             | 11961    26
    83       |                                                                                                 | 11962    26
    84       |#define __OFF_MAX       __LLONG_MAX     /* max value for an off_t */                             | 11963    26
    85       |#define __OFF_MIN       __LLONG_MIN     /* min value for an off_t */                             | 11964    26
    86       |                                                                                                 | 11965    26
    87       |/* Quads and long longs are the same size.  Ensure they stay in sync. */                         | 11966    26
    88       |#define __UQUAD_MAX     __ULLONG_MAX    /* max value for a uquad_t */                            | 11967    26
    89       |#define __QUAD_MAX      __LLONG_MAX     /* max value for a quad_t */                             | 11968    26
    90       |#define __QUAD_MIN      __LLONG_MIN     /* min value for a quad_t */                             | 11969    26
    91       |                                                                                                 | 11970    26
    92       |#ifdef _LP64                                                                                     | 11971    26
    93       |#define __LONG_BIT      64                                                                       | 11972    26
    94       |#else                                                                                            | 11973    26
    95       |#define __LONG_BIT      32                                                                       | 11974    26
    96       |#endif                                                                                           | 11975    26
    97       |#define __WORD_BIT      32                                                                       | 11976    26
    98       |                                                                                                 | 11977    26
    99       |#endif /* !_MACHINE__LIMITS_H_ */                                                                | 11978    26
   100       |#pragma pack(reset)                                                                              | 11979    26
    39       |                                                                                                 | 11980    25
    40       |#define CHAR_BIT        __CHAR_BIT      /* number of bits in a char */                           | 11981    25
    41       |                                                                                                 | 11982    25
    42       |#define SCHAR_MAX       __SCHAR_MAX     /* max value for a signed char */                        | 11983    25
    43       |#define SCHAR_MIN       __SCHAR_MIN     /* min value for a signed char */                        | 11984    25
    44       |                                                                                                 | 11985    25
    45       |#define UCHAR_MAX       __UCHAR_MAX     /* max value for an unsigned char */                     | 11986    25
    46       |                                                                                                 | 11987    25
    47       |#ifdef __CHAR_UNSIGNED__                                                                         | 11988    25
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   240


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    48       |#define CHAR_MAX        UCHAR_MAX       /* max value for a char */                               | 11989    25
    49       |#define CHAR_MIN        0               /* min value for a char */                               | 11990    25
    50       |#else                                                                                            | 11991    25
    51       |#define CHAR_MAX        SCHAR_MAX                                                                | 11992    25
    52       |#define CHAR_MIN        SCHAR_MIN                                                                | 11993    25
    53       |#endif                                                                                           | 11994    25
    54       |                                                                                                 | 11995    25
    55       |#define USHRT_MAX       __USHRT_MAX     /* max value for an unsigned short */                    | 11996    25
    56       |#define SHRT_MAX        __SHRT_MAX      /* max value for a short */                              | 11997    25
    57       |#define SHRT_MIN        __SHRT_MIN      /* min value for a short */                              | 11998    25
    58       |                                                                                                 | 11999    25
    59       |#define UINT_MAX        __UINT_MAX      /* max value for an unsigned int */                      | 12000    25
    60       |#define INT_MAX         __INT_MAX       /* max value for an int */                               | 12001    25
    61       |#define INT_MIN         __INT_MIN       /* min value for an int */                               | 12002    25
    62       |                                                                                                 | 12003    25
    63       |#define ULONG_MAX       __ULONG_MAX     /* max for an unsigned long */                           | 12004    25
    64       |#define LONG_MAX        __LONG_MAX      /* max for a long */                                     | 12005    25
    65       |#define LONG_MIN        __LONG_MIN      /* min for a long */                                     | 12006    25
    66       |                                                                                                 | 12007    25
    67       |#ifdef __LONG_LONG_SUPPORTED                                                                     | 12008    25
    68       |#define ULLONG_MAX      __ULLONG_MAX    /* max for an unsigned long long */                      | 12009    25
    69       |#define LLONG_MAX       __LLONG_MAX     /* max for a long long */                                | 12010    25
    70       |#define LLONG_MIN       __LLONG_MIN     /* min for a long long */                                | 12011    25
    71       |#endif                                                                                           | 12012    25
    72       |                                                                                                 | 12013    25
    73       |#if __POSIX_VISIBLE || __XSI_VISIBLE                                                             | 12014    25
    74       |#define SSIZE_MAX       __SSIZE_MAX     /* max value for an ssize_t */                           | 12015    25
    75       |#endif                                                                                           | 12016    25
    76       |                                                                                                 | 12017    25
    76       +                                                                                                 + 12017    25
    77       |#if __POSIX_VISIBLE >= 200112 || __XSI_VISIBLE                                                   | 12018    25
    78       |#define SIZE_T_MAX      __SIZE_T_MAX    /* max value for a size_t */                             | 12019    25
    79       |                                                                                                 | 12020    25
    79       +                                                                                                 + 12020    25
    80       |#define OFF_MAX         __OFF_MAX       /* max value for an off_t */                             | 12021    25
    81       |#define OFF_MIN         __OFF_MIN       /* min value for an off_t */                             | 12022    25
    82       |#endif                                                                                           | 12023    25
    83       |                                                                                                 | 12024    25
    84       |#if __BSD_VISIBLE                                                                                | 12025    25
    85       |#define GID_MAX         UINT_MAX        /* max value for a gid_t */                              | 12026    25
    86       |#define UID_MAX         UINT_MAX        /* max value for a uid_t */                              | 12027    25
    87       |                                                                                                 | 12028    25
    87       +                                                                                                 + 12028    25
    88       |#define UQUAD_MAX       (__UQUAD_MAX)   /* max value for a uquad_t */                            | 12029    25
    89       |#define QUAD_MAX        (__QUAD_MAX)    /* max value for a quad_t */                             | 12030    25
    90       |#define QUAD_MIN        (__QUAD_MIN)    /* min value for a quad_t */                             | 12031    25
    91       |#endif                                                                                           | 12032    25
    92       |                                                                                                 | 12033    25
    93       |#if __XSI_VISIBLE                                                                                | 12034    25
    94       |#define LONG_BIT        __LONG_BIT                                                               | 12035    25
    95       |#define WORD_BIT        __WORD_BIT                                                               | 12036    25
    96       |#endif                                                                                           | 12037    25
    97       |                                                                                                 | 12038    25
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   241


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    97       +                                                                                                 + 12038    25
    98       |#endif /* !_SYS_LIMITS_H_ */                                                                     | 12039    25
    99       |#pragma pack(reset)                                                                              | 12040    25
   130       |                                                                                                 | 12041    24
   131       |#if __POSIX_VISIBLE                                                                              | 12042    24
   132       |#include <sys/syslimits.h>                                                                       | 12043    24
     1       |/* release 2.25.00 */                                                                            | 12044    27
     1       +                                                                                                 + 12044    27
     2       |#pragma pack()                                                                                   | 12045    27
     3       |/*-                                                                                              | 12046    27
     4       | * Copyright (c) 1988, 1993                                                                      | 12047    27
     5       | *      The Regents of the University of California.  All rights reserved.                       | 12048    27
     6       | *                                                                                               | 12049    27
     7       | * Redistribution and use in source and binary forms, with or without                            | 12050    27
     8       | * modification, are permitted provided that the following conditions                            | 12051    27
     9       | * are met:                                                                                      | 12052    27
    10       | * 1. Redistributions of source code must retain the above copyright                             | 12053    27
    11       | *    notice, this list of conditions and the following disclaimer.                              | 12054    27
    12       | * 2. Redistributions in binary form must reproduce the above copyright                          | 12055    27
    13       | *    notice, this list of conditions and the following disclaimer in the                        | 12056    27
    14       | *    documentation and/or other materials provided with the distribution.                       | 12057    27
    15       | * 4. Neither the name of the University nor the names of its contributors                       | 12058    27
    16       | *    may be used to endorse or promote products derived from this software                      | 12059    27
    17       | *    without specific prior written permission.                                                 | 12060    27
    18       | *                                                                                               | 12061    27
    19       | * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND                       | 12062    27
    20       | * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE                         | 12063    27
    21       | * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE                    | 12064    27
    22       | * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE                      | 12065    27
    23       | * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL                    | 12066    27
    24       | * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS                       | 12067    27
    25       | * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)                         | 12068    27
    26       | * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT                    | 12069    27
    27       | * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY                     | 12070    27
    28       | * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF                        | 12071    27
    29       | * SUCH DAMAGE.                                                                                  | 12072    27
    30       | *                                                                                               | 12073    27
    31       | *      @(#)syslimits.h 8.1 (Berkeley) 6/2/93                                                    | 12074    27
    32       | * $FreeBSD: src/sys/sys/syslimits.h,v 1.21 2005/03/02 21:33:29 joerg Exp $                      | 12075    27
    33       | */                                                                                              | 12076    27
    34       |                                                                                                 | 12077    27
    35       |#ifndef _SYS_SYSLIMITS_H_                                                                        | 12078    27
    36       |#define _SYS_SYSLIMITS_H_                                                                        | 12079    27
    37       |                                                                                                 | 12080    27
    38       |#if !defined(_KERNEL) && !defined(_LIMITS_H_) && !defined(_SYS_PARAM_H_)                         | 12081    27
    39       |#ifndef _SYS_CDEFS_H_                                                                            | 12082    27
    40       |#error this file needs sys/cdefs.h as a prerequisite                                             | 12083    27
    41       |#endif                                                                                           | 12084    27
    42       |#ifdef __CC_SUPPORTS_WARNING                                                                     | 12085    27
    43       |#warning "No user-serviceable parts inside."                                                     | 12086    27
    44       |#endif                                                                                           | 12087    27
    45       |#endif                                                                                           | 12088    27
    46       |                                                                                                 | 12089    27
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   242


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    47       |/*                                                                                               | 12090    27
    48       | * Do not add any new variables here.  (See the comment at the end of                            | 12091    27
    49       | * the file for why.)                                                                            | 12092    27
    50       | */                                                                                              | 12093    27
    51       |#if defined(__arm__) || defined(__powerpc__)                                                     | 12094    27
    52       |#define ARG_MAX                 65536   /* max bytes for an exec function */                     | 12095    27
    53       |#else                                                                                            | 12096    27
    54       |#define ARG_MAX                 262144  /* max bytes for an exec function */                     | 12097    27
    55       |#endif                                                                                           | 12098    27
    56       |#ifndef CHILD_MAX                                                                                | 12099    27
    57       |#define CHILD_MAX                  40   /* max simultaneous processes */                         | 12100    27
    58       |#endif                                                                                           | 12101    27
    59       |#define LINK_MAX                32767   /* max file link count */                                | 12102    27
    60       |#define MAX_CANON                 255   /* max bytes in term canon input line */                 | 12103    27
    61       |#define MAX_INPUT                 255   /* max bytes in terminal input */                        | 12104    27
    62       |#define NAME_MAX                  255   /* max bytes in a file name */                           | 12105    27
    63       |#ifdef __VM__                                                                                    | 12106    27
    64       |#define NGROUPS_MAX                32   /* max supplemental group id's */                        | 12107    27
    65       |#else                                                                                            | 12108    27
    66       |#define NGROUPS_MAX               300   /* max supplemental group id's */                        | 12109    27
    67       |#endif                                                                                           | 12110    27
    68       |#ifndef OPEN_MAX                                                                                 | 12111    27
    69       |#define OPEN_MAX                   64   /* max open files per process */                         | 12112    27
    70       |#endif                                                                                           | 12113    27
    71       |#define PATH_MAX                 1024   /* max bytes in pathname */                              | 12114    27
    72       |#define PIPE_BUF                  512   /* max bytes for atomic pipe writes */                   | 12115    27
    73       |#define IOV_MAX                  1024   /* max elements in i/o vector */                         | 12116    27
    74       |                                                                                                 | 12117    27
    75       |#ifndef __SEM_VALUE_MAX_DEFINED                                                                  | 12118    27
    76       |#define SEM_VALUE_MAX   0x7fffffff                                                               | 12119    27
    77       |#define __SEM_VALUE_MAX_DEFINED                                                                  | 12120    27
    78       |#endif                                                                                           | 12121    27
    79       |#ifndef __SEM_NSEMS_MAX_DEFINED                                                                  | 12122    27
    80       |#define SEM_NSEMS_MAX             256                                                            | 12123    27
    81       |#define __SEM_NSEMS_MAX_DEFINED                                                                  | 12124    27
    82       |#endif                                                                                           | 12125    27
    83       |                                                                                                 | 12126    27
    84       |/*                                                                                               | 12127    27
    85       | * We leave the following values undefined to force applications to either                       | 12128    27
    86       | * assume conservative values or call sysconf() to get the current value.                        | 12129    27
    87       | *                                                                                               | 12130    27
    88       | * HOST_NAME_MAX                                                                                 | 12131    27
    89       | *                                                                                               | 12132    27
    90       | * (We should do this for most of the values currently defined here,                             | 12133    27
    91       | * but many programs are not prepared to deal with this yet.)                                    | 12134    27
    92       | */                                                                                              | 12135    27
    93       |#endif                                                                                           | 12136    27
    94       |#pragma pack(reset)                                                                              | 12137    27
   133       |#endif                                                                                           | 12138    24
   134       |                                                                                                 | 12139    24
   135       |#endif /* !_LIMITS_H_ */                                                                         | 12140    24
   136       |#pragma pack(reset)                                                                              | 12141    24
    47       |#include <sched.h>                                                                               | 12142    20
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   243


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
     1       |/* release 2.25.00 */                                                                            | 12143    28
     2       |#pragma pack()                                                                                   | 12144    28
     3       |/*-                                                                                              | 12145    28
     4       | * Copyright (c) 1996, 1997                                                                      | 12146    28
     5       | *      HD Associates, Inc.  All rights reserved.                                                | 12147    28
     6       | *                                                                                               | 12148    28
     7       | * Redistribution and use in source and binary forms, with or without                            | 12149    28
     8       | * modification, are permitted provided that the following conditions                            | 12150    28
     9       | * are met:                                                                                      | 12151    28
    10       | * 1. Redistributions of source code must retain the above copyright                             | 12152    28
    11       | *    notice, this list of conditions and the following disclaimer.                              | 12153    28
    12       | * 2. Redistributions in binary form must reproduce the above copyright                          | 12154    28
    13       | *    notice, this list of conditions and the following disclaimer in the                        | 12155    28
    14       | *    documentation and/or other materials provided with the distribution.                       | 12156    28
    15       | * 3. All advertising materials mentioning features or use of this software                      | 12157    28
    16       | *    must display the following acknowledgement:                                                | 12158    28
    17       | *      This product includes software developed by HD Associates, Inc                           | 12159    28
    18       | *      and Jukka Antero Ukkonen.                                                                | 12160    28
    19       | * 4. Neither the name of the author nor the names of any co-contributors                        | 12161    28
    20       | *    may be used to endorse or promote products derived from this software                      | 12162    28
    21       | *    without specific prior written permission.                                                 | 12163    28
    22       | *                                                                                               | 12164    28
    23       | * THIS SOFTWARE IS PROVIDED BY HD ASSOCIATES AND CONTRIBUTORS ``AS IS'' AND                     | 12165    28
    24       | * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE                         | 12166    28
    25       | * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE                    | 12167    28
    26       | * ARE DISCLAIMED.  IN NO EVENT SHALL HD ASSOCIATES OR CONTRIBUTORS BE LIABLE                    | 12168    28
    27       | * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL                    | 12169    28
    28       | * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS                       | 12170    28
    29       | * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)                         | 12171    28
    30       | * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT                    | 12172    28
    31       | * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY                     | 12173    28
    32       | * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF                        | 12174    28
    33       | * SUCH DAMAGE.                                                                                  | 12175    28
    34       | */                                                                                              | 12176    28
    35       |                                                                                                 | 12177    28
    36       |/*-                                                                                              | 12178    28
    37       | * Copyright (c) 2002-2008, Jeffrey Roberson <jeff@freebsd.org>                                  | 12179    28
    38       | * All rights reserved.                                                                          | 12180    28
    39       | *                                                                                               | 12181    28
    40       | * Redistribution and use in source and binary forms, with or without                            | 12182    28
    41       | * modification, are permitted provided that the following conditions                            | 12183    28
    42       | * are met:                                                                                      | 12184    28
    43       | * 1. Redistributions of source code must retain the above copyright                             | 12185    28
    44       | *    notice unmodified, this list of conditions, and the following                              | 12186    28
    45       | *    disclaimer.                                                                                | 12187    28
    46       | * 2. Redistributions in binary form must reproduce the above copyright                          | 12188    28
    47       | *    notice, this list of conditions and the following disclaimer in the                        | 12189    28
    48       | *    documentation and/or other materials provided with the distribution.                       | 12190    28
    49       | *                                                                                               | 12191    28
    50       | * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR                          | 12192    28
    51       | * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES                     | 12193    28
    52       | * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.                       | 12194    28
    53       | * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,                              | 12195    28
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   244


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    54       | * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT                      | 12196    28
    55       | * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,                     | 12197    28
    56       | * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY                         | 12198    28
    57       | * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT                           | 12199    28
    58       | * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF                      | 12200    28
    59       | * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                             | 12201    28
    60       | *                                                                                               | 12202    28
    61       | * $FreeBSD: releng/11.1/sys/sys/sched.h 301026 2016-05-31 08:07:40Z ed $                        | 12203    28
    62       | */                                                                                              | 12204    28
    63       |                                                                                                 | 12205    28
    64       |#ifndef _SCHED_H_                                                                                | 12206    28
    65       |#define _SCHED_H_                                                                                | 12207    28
    66       |                                                                                                 | 12208    28
    67       |/* POSIX 1003.1b Process Scheduling */                                                           | 12209    28
    68       |                                                                                                 | 12210    28
    69       |/*                                                                                               | 12211    28
    70       | * POSIX scheduling policies                                                                     | 12212    28
    71       | */                                                                                              | 12213    28
    72       |#define SCHED_FIFO      1                                                                        | 12214    28
    73       |#define SCHED_OTHER     2                                                                        | 12215    28
    74       |#define SCHED_RR        3                                                                        | 12216    28
    75       |                                                                                                 | 12217    28
    76       |struct sched_param {                                                                             | 12218    28
    77       |        int     sched_priority;                                                                  | 12219    28
    78       |};                                                                                               | 12220    28
    79       |                                                                                                 | 12221    28
    80       |/*                                                                                               | 12222    28
    81       | * POSIX scheduling declarations for userland.                                                   | 12223    28
    82       | */                                                                                              | 12224    28
    83       |#ifndef _KERNEL                                                                                  | 12225    28
    84       |#include <sys/cdefs.h>                                                                           | 12226    28
     1       |/* release 2.25.00 */                                                                            | 12227     4
     2       |#pragma pack()                                                                                   | 12228     4
     3       |/*                                                                                               | 12229     4
     4       | * Copyright (c) 1991, 1993                                                                      | 12230     4
     5       | *      The Regents of the University of California.  All rights reserved.                       | 12231     4
     6       | *                                                                                               | 12232     4
     7       | * This code is derived from software contributed to Berkeley by                                 | 12233     4
     8       | * Berkeley Software Design, Inc.                                                                | 12234     4
     9       | *                                                                                               | 12235     4
    10       | * Redistribution and use in source and binary forms, with or without                            | 12236     4
    11       | * modification, are permitted provided that the following conditions                            | 12237     4
    12       | * are met:                                                                                      | 12238     4
    13       | * 1. Redistributions of source code must retain the above copyright                             | 12239     4
    14       | *    notice, this list of conditions and the following disclaimer.                              | 12240     4
    15       | * 2. Redistributions in binary form must reproduce the above copyright                          | 12241     4
    16       | *    notice, this list of conditions and the following disclaimer in the                        | 12242     4
    17       | *    documentation and/or other materials provided with the distribution.                       | 12243     4
    18       | * 3. All advertising materials mentioning features or use of this software                      | 12244     4
    19       | *    must display the following acknowledgement:                                                | 12245     4
    20       | *      This product includes software developed by the University of                            | 12246     4
    21       | *      California, Berkeley and its contributors.                                               | 12247     4
    22       | * 4. Neither the name of the University nor the names of its contributors                       | 12248     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   245


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    23       | *    may be used to endorse or promote products derived from this software                      | 12249     4
    24       | *    without specific prior written permission.                                                 | 12250     4
    25       | *                                                                                               | 12251     4
    26       | * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND                       | 12252     4
    27       | * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE                         | 12253     4
    28       | * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE                    | 12254     4
    29       | * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE                      | 12255     4
    30       | * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL                    | 12256     4
    31       | * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS                       | 12257     4
    32       | * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)                         | 12258     4
    33       | * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT                    | 12259     4
    34       | * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY                     | 12260     4
    35       | * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF                        | 12261     4
    36       | * SUCH DAMAGE.                                                                                  | 12262     4
    37       | *                                                                                               | 12263     4
    38       | *      @(#)cdefs.h     8.8 (Berkeley) 1/9/95                                                    | 12264     4
    39       | */                                                                                              | 12265     4
    40       |                                                                                                 | 12266     4
    41       |#ifndef _SYS_CDEFS_H_                                                                            | 12267     4
    42       |#define _SYS_CDEFS_H_                                                                            | 12268     4
    43       |                                                                                                 | 12269     4
    44       |#if defined(__cplusplus)                                                                         | 12270     4
    45       |#define __BEGIN_DECLS   extern "C" {                                                             | 12271     4
    46       |#define __END_DECLS     }                                                                        | 12272     4
    47       |#else                                                                                            | 12273     4
    48       |#define __BEGIN_DECLS                                                                            | 12274     4
    49       |#define __END_DECLS                                                                              | 12275     4
    50       |#endif                                                                                           | 12276     4
    51       |                                                                                                 | 12277     4
    52       |/*                                                                                               | 12278     4
    53       | * This code has been put in place to help reduce the addition of                                | 12279     4
    54       | * compiler specific defines in the code.  It helps to aid in                                    | 12280     4
    55       | * having a compiler-agnostic source tree.                                                       | 12281     4
    56       | */                                                                                              | 12282     4
    57       |#define __CC_SUPPORTS_INLINE 1                                                                   | 12283     4
    58       |#define __CC_SUPPORTS___INLINE 1                                                                 | 12284     4
    59       |#define __CC_SUPPORTS___INLINE__ 1                                                               | 12285     4
    60       |                                                                                                 | 12286     4
    61       |#define __CC_SUPPORTS___FUNC__ 1                                                                 | 12287     4
    62       |                                                                                                 | 12288     4
    63       |                                                                                                 | 12289     4
    64       |/*                                                                                               | 12290     4
    65       | * The __CONCAT macro is used to concatenate parts of symbol names, e.g.                         | 12291     4
    66       | * with "#define OLD(foo) __CONCAT(old,foo)", OLD(foo) produces oldfoo.                          | 12292     4
    67       | * The __CONCAT macro is a bit tricky to use if it must work in non-ANSI                         | 12293     4
    68       | * mode -- there must be no spaces between its arguments, and for nested                         | 12294     4
    69       | * __CONCAT's, all the __CONCAT's must be at the left.  __CONCAT can also                        | 12295     4
    70       | * concatenate double-quoted strings produced by the __STRING macro, but                         | 12296     4
    71       | * this only works with ANSI C.                                                                  | 12297     4
    72       | *                                                                                               | 12298     4
    73       | * __XSTRING is like __STRING, but it expands any macros in its argument                         | 12299     4
    74       | * first.  It is only available with ANSI C.                                                     | 12300     4
    75       | */                                                                                              | 12301     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   246


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    76       |#if defined(__STDC__) || defined(__cplusplus)                                                    | 12302     4
    77       |#define __P(protos)     protos          /* full-blown ANSI C */                                  | 12303     4
    78       |#define __CONCAT1(x,y)  x ## y                                                                   | 12304     4
    79       |#define __CONCAT(x,y)   __CONCAT1(x,y)                                                           | 12305     4
    80       |#define __STRING(x)     #x              /* stringify without expanding x */                      | 12306     4
    81       |#define __XSTRING(x)    __STRING(x)     /* expand x, then stringify */                           | 12307     4
    82       |                                                                                                 | 12308     4
    83       |#define __const         const           /* define reserved names to standard */                  | 12309     4
    84       |#define __signed        signed                                                                   | 12310     4
    85       |#define __volatile      volatile                                                                 | 12311     4
    86       |#if defined(__cplusplus)                                                                         | 12312     4
    87       |#define __inline        inline          /* convert to C++ keyword */                             | 12313     4
    88       |#else                                                                                            | 12314     4
    89       |#define __inline        __inline__      /* Use the Systems/C keyword */                          | 12315     4
    90       |#endif /* !__cplusplus */                                                                        | 12316     4
    91       |                                                                                                 | 12317     4
    92       |#else   /* !(__STDC__ || __cplusplus) */                                                         | 12318     4
    93       |#define __P(protos)     ()              /* traditional C preprocessor */                         | 12319     4
    94       |#define __CONCAT(x,y)   x/**/y                                                                   | 12320     4
    95       |#define __STRING(x)     "x"                                                                      | 12321     4
    96       |                                                                                                 | 12322     4
    97       |#define __const                         /* delete pseudo-ANSI C keywords */                      | 12323     4
    98       |#define __inline                                                                                 | 12324     4
    99       |#define __signed                                                                                 | 12325     4
   100       |#define __volatile                                                                               | 12326     4
   101       |/*                                                                                               | 12327     4
   102       | * In non-ANSI C environments, new programs will want ANSI-only C keywords                       | 12328     4
   103       | * deleted from the program and old programs will want them left alone.                          | 12329     4
   104       | * When using a compiler other than Dignus, programs using the ANSI C keywords                   | 12330     4
   105       | * const, inline etc. as normal identifiers should define -DNO_ANSI_KEYWORDS.                    | 12331     4
   106       | */                                                                                              | 12332     4
   107       |#ifndef NO_ANSI_KEYWORDS                                                                         | 12333     4
   108       |#define const                           /* delete ANSI C keywords */                             | 12334     4
   109       |#define inline                                                                                   | 12335     4
   110       |#define signed                                                                                   | 12336     4
   111       |#define volatile                                                                                 | 12337     4
   112       |#endif  /* !NO_ANSI_KEYWORDS */                                                                  | 12338     4
   113       |#endif  /* !(__STDC__ || __cplusplus) */                                                         | 12339     4
   114       |                                                                                                 | 12340     4
   115       |/*                                                                                               | 12341     4
   116       | * Compiler-dependent macros to help declare dead (non-returning) and                            | 12342     4
   117       | * pure (no side effects) functions, and unused variables.                                       | 12343     4
   118       | */                                                                                              | 12344     4
   119       |#define __dead2 __attribute__((__noreturn__))                                                    | 12345     4
   120       |#define __pure  __attribute__((__pure__))                                                        | 12346     4
   121       |#define __pure2 __attribute__((__const__))                                                       | 12347     4
   122       |#define __unused                                                                                 | 12348     4
   123       |#define __aligned(x)                                                                             | 12349     4
   124       |#define __section(x)                                                                             | 12350     4
   125       |#define __nonnull(x)                                                                             | 12351     4
   126       |#define __used                                                                                   | 12352     4
   127       |                                                                                                 | 12353     4
   128       |#define __always_inline __attribute__((__always_inline__))                                       | 12354     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   247


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   129       |#define __noinline      __attribute__((__noinline__))                                            | 12355     4
   130       |                                                                                                 | 12356     4
   131       |#if __STDC_VERSION__ < 199901                                                                    | 12357     4
   132       |#define __func__  NULL                                                                           | 12358     4
   133       |#endif                                                                                           | 12359     4
   134       |                                                                                                 | 12360     4
   135       |#if !defined(__STRICT_ANSI__) || __STDC_VERSION__ >= 199901                                      | 12361     4
   136       |#define __LONG_LONG_SUPPORTED                                                                    | 12362     4
   137       |#endif                                                                                           | 12363     4
   138       |                                                                                                 | 12364     4
   139       |/* Systems/C recognizes they keyword __restrict__ in both                                        | 12365     4
   140       | * ANSI and non-ANSI mode to indicate C99 restrict semantics.                                    | 12366     4
   141       | **/                                                                                             | 12367     4
   142       |#ifndef __cplusplus                                                                              | 12368     4
   143       |#define __restrict __restrict__                                                                  | 12369     4
   144       |#else                                                                                            | 12370     4
   145       |/* Systems/C++ does not */                                                                       | 12371     4
   146       |#define __restrict                                                                               | 12372     4
   147       |#endif                                                                                           | 12373     4
   148       |                                                                                                 | 12374     4
   149       |/*                                                                                               | 12375     4
   150       | * define-away GCC-specific branch-prediction markers                                            | 12376     4
   151       | */                                                                                              | 12377     4
   152       |#define __predict_true(exp)     (exp)                                                            | 12378     4
   153       |#define __predict_false(exp)    (exp)                                                            | 12379     4
   154       |                                                                                                 | 12380     4
   155       |                                                                                                 | 12381     4
   156       |/*                                                                                               | 12382     4
   157       | * provide a definition of __offsetof(), <stddef.h> and                                          | 12383     4
   158       | * <sys/types.h> reference __offsetof().                                                         | 12384     4
   159       | *                                                                                               | 12385     4
   160       | * For Systems/C, the C compiler recognizes __offsetof(),                                        | 12386     4
   161       | * but we need a definition for versions of C++ prior to 1.85.52.                                | 12387     4
   162       | */                                                                                              | 12388     4
   163       |#if defined(__cplusplus) && (__SYSC_VER__ < (18600))                                             | 12389     4
   164       |#undef __offsetof                                                                                | 12390     4
   165       |#define __offsetof(type, field)  ((size_t)(&((type *)0)->field))                                 | 12391     4
   166       |#endif                                                                                           | 12392     4
   167       |                                                                                                 | 12393     4
   168       |/*                                                                                               | 12394     4
   169       | * Compiler-dependent macros to declare that functions take printf-like                          | 12395     4
   170       | * or scanf-like arguments.                                                                      | 12396     4
   171       | */                                                                                              | 12397     4
   172       |#define __printflike(fmtarg, firstvararg)                                                        | 12398     4
   173       |#define __scanflike(fmtarg, firstvararg)                                                         | 12399     4
   174       |#define __format_arg(fmtarg)                                                                     | 12400     4
   175       |#define __printf0like(fmtarg, firstvararg)                                                       | 12401     4
   176       |                                                                                                 | 12402     4
   177       |/* Compiler-dependent macros that rely on specific extensions. */                                | 12403     4
   178       |#define __printf0like(fmtarg, firstvararg)                                                       | 12404     4
   179       |                                                                                                 | 12405     4
   180       |  /* intended to generate a weak reference as an alias */                                        | 12406     4
   181       |#define __weak_reference(sym,alias)                                                              | 12407     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   248


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   182       |  /* If this symbol is refrenced, cause the linker to emit "msg" */                              | 12408     4
   183       |#define __warn_references(sym,msg)                                                               | 12409     4
   184       |                                                                                                 | 12410     4
   185       | /* This places the string into the resulting object.  It should */                              | 12411     4
   186       | /* probably become #pragma ident */                                                             | 12412     4
   187       |#define __IDSTRING(name,string) static const char name[] __unused = string                       | 12413     4
   188       |                                                                                                 | 12414     4
   189       |#ifndef __RCSID                                                                                  | 12415     4
   190       |#define __RCSID(s)      __IDSTRING(rcsid,s)                                                      | 12416     4
   191       |#endif                                                                                           | 12417     4
   192       |                                                                                                 | 12418     4
   193       |/*                                                                                               | 12419     4
   194       | * Embed the rcs id of a source file in the resulting library.                                   | 12420     4
   195       | * Usage:                                                                                        | 12421     4
   196       | *      __SYSCID("Id: src/sys/sys/cdefs.h,v 1.28.2.8 2002/09/18                                  | 12422     4
   197       |*                                            04:05:13 mikeh Exp $");                             | 12423     4
   198       | */                                                                                              | 12424     4
   199       |#ifndef __SYSCID                                                                                 | 12425     4
   200       |#if !defined(lint) && !defined(STRIP_SYSCID)                                                     | 12426     4
   201       |#define __SYSCID(s)     __IDSTRING(__CONCAT(__rcsid_,__LINE__),s)                                | 12427     4
   202       |#else                                                                                            | 12428     4
   203       |#define __SYSCID(s)     struct __hack                                                            | 12429     4
   204       |#endif                                                                                           | 12430     4
   205       |#endif                                                                                           | 12431     4
   206       |                                                                                                 | 12432     4
   207       |#ifndef __RCSID_SOURCE                                                                           | 12433     4
   208       |#define __RCSID_SOURCE(s) __IDSTRING(rcsid_source,s)                                             | 12434     4
   209       |#endif                                                                                           | 12435     4
   210       |                                                                                                 | 12436     4
   211       |#ifndef __COPYRIGHT                                                                              | 12437     4
   212       |#define __COPYRIGHT(s)  __IDSTRING(copyright,s)                                                  | 12438     4
   213       |#endif                                                                                           | 12439     4
   214       |                                                                                                 | 12440     4
   215       |                                                                                                 | 12441     4
   216       |#ifndef __DECONST                                                                                | 12442     4
   217       |#define __DECONST(type, var)    ((type)(uintptr_t)(const void *)(var))                           | 12443     4
   218       |#endif                                                                                           | 12444     4
   219       |                                                                                                 | 12445     4
   220       |#ifndef __DEVOLATILE                                                                             | 12446     4
   221       |#define __DEVOLATILE(type, var) ((type)(uintptr_t)(volatile void *)(var))                        | 12447     4
   222       |#endif                                                                                           | 12448     4
   223       |                                                                                                 | 12449     4
   224       |#ifndef __DEQUALIFY                                                                              | 12450     4
   225       |#define __DEQUALIFY(type, var)  ((type)(uintptr_t)(const volatile void *)(var))                  | 12451     4
   226       |#endif                                                                                           | 12452     4
   227       |                                                                                                 | 12453     4
   228       |                                                                                                 | 12454     4
   229       |/*-                                                                                              | 12455     4
   230       | * The following definitions are an extension of the behavior originally                         | 12456     4
   231       | * implemented in <sys/_posix.h>, but with a different level of granularity.                     | 12457     4
   232       | * POSIX.1 requires that the macros we test be defined before any standard                       | 12458     4
   233       | * header file is included.                                                                      | 12459     4
   234       | *                                                                                               | 12460     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   249


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   235       | * Here's a quick run-down of the versions:                                                      | 12461     4
   236       | *  defined(_POSIX_SOURCE)              1003.1-1988                                              | 12462     4
   237       | *  _POSIX_C_SOURCE == 1                1003.1-1990                                              | 12463     4
   238       | *  _POSIX_C_SOURCE == 2                1003.2-1992 C Language Binding Option                    | 12464     4
   239       | *  _POSIX_C_SOURCE == 199309           1003.1b-1993                                             | 12465     4
   240       | *  _POSIX_C_SOURCE == 199506           1003.1c-1995, 1003.1i-1995,                              | 12466     4
   241       | *                                      and the omnibus ISO/IEC 9945-1: 1996                     | 12467     4
   242       | *  _POSIX_C_SOURCE == 200112           1003.1-2001                                              | 12468     4
   243       | *  _POSIX_C_SOURCE == 200809           1003.1-2008                                              | 12469     4
   244       | *                                                                                               | 12470     4
   245       | * In addition, the X/Open Portability Guide, which is now the Single UNIX                       | 12471     4
   246       | * Specification, defines a feature-test macro which indicates the version of                    | 12472     4
   247       | * that specification, and which subsumes _POSIX_C_SOURCE.                                       | 12473     4
   248       | *                                                                                               | 12474     4
   249       | * Our macros begin with two underscores to avoid namespace screwage.                            | 12475     4
   250       | */                                                                                              | 12476     4
   251       |                                                                                                 | 12477     4
   252       |/*                                                                                               | 12478     4
   253       | * If no special macro was specified, make the DragonFly extensions                              | 12479     4
   254       | * available. Also make them available when requested so.                                        | 12480     4
   255       | */                                                                                              | 12481     4
   256       |#if (!defined(_POSIX_C_SOURCE) && !defined(_XOPEN_SOURCE) && \                                   | 12482     4
   257       |    !defined(_ANSI_SOURCE) && !defined(_C99_SOURCE)) || \                                        | 12483     4
   258       |    defined(_DRAGONFLY_SOURCE) || defined(_NETBSD_SOURCE)                                        | 12484     4
   259       |#define __DF_VISIBLE    1                                                                        | 12485     4
   260       |#else                                                                                            | 12486     4
   261       |#define __DF_VISIBLE    0                                                                        | 12487     4
   262       |#endif                                                                                           | 12488     4
   263       |                                                                                                 | 12489     4
   264       |/*-                                                                                              | 12490     4
   265       | * The following definitions are an extension of the behavior originally                         | 12491     4
   266       | * implemented in <sys/_posix.h>, but with a different level of granularity.                     | 12492     4
   267       | * POSIX.1 requires that the macros we test be defined before any standard                       | 12493     4
   268       | * header file is included.                                                                      | 12494     4
   269       | *                                                                                               | 12495     4
   270       | * Here's a quick run-down of the versions:                                                      | 12496     4
   271       | *  defined(_POSIX_SOURCE)              1003.1-1988                                              | 12497     4
   272       | *  _POSIX_C_SOURCE == 1                1003.1-1990                                              | 12498     4
   273       | *  _POSIX_C_SOURCE == 2                1003.2-1992 C Language Binding Option                    | 12499     4
   274       | *  _POSIX_C_SOURCE == 199309           1003.1b-1993                                             | 12500     4
   275       | *  _POSIX_C_SOURCE == 199506           1003.1c-1995, 1003.1i-1995,                              | 12501     4
   276       | *                                      and the omnibus ISO/IEC 9945-1: 1996                     | 12502     4
   277       | *  _POSIX_C_SOURCE == 200112           1003.1-2001                                              | 12503     4
   278       | *  _POSIX_C_SOURCE == 200809           1003.1-2008                                              | 12504     4
   279       | *                                                                                               | 12505     4
   280       | * In addition, the X/Open Portability Guide, which is now the Single UNIX                       | 12506     4
   281       | * Specification, defines a feature-test macro which indicates the version of                    | 12507     4
   282       | * that specification, and which subsumes _POSIX_C_SOURCE.                                       | 12508     4
   283       | *                                                                                               | 12509     4
   284       | * Our macros begin with two underscores to avoid namespace screwage.                            | 12510     4
   285       | */                                                                                              | 12511     4
   286       |                                                                                                 | 12512     4
   287       |/* Deal with IEEE Std. 1003.1-1990, in which _POSIX_C_SOURCE == 1. */                            | 12513     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   250


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   288       |#if defined(_POSIX_C_SOURCE) && _POSIX_C_SOURCE == 1                                             | 12514     4
   289       |#undef _POSIX_C_SOURCE          /* Probably illegal, but beyond caring now. */                   | 12515     4
   290       |#define _POSIX_C_SOURCE         199009                                                           | 12516     4
   291       |#endif                                                                                           | 12517     4
   292       |                                                                                                 | 12518     4
   293       |/* Deal with IEEE Std. 1003.2-1992, in which _POSIX_C_SOURCE == 2. */                            | 12519     4
   294       |#if defined(_POSIX_C_SOURCE) && _POSIX_C_SOURCE == 2                                             | 12520     4
   295       |#undef _POSIX_C_SOURCE                                                                           | 12521     4
   296       |#define _POSIX_C_SOURCE         199209                                                           | 12522     4
   297       |#endif                                                                                           | 12523     4
   298       |                                                                                                 | 12524     4
   299       |/* Deal with various X/Open Portability Guides and Single UNIX Spec. */                          | 12525     4
   300       |#ifdef _XOPEN_SOURCE                                                                             | 12526     4
   301       |#if _XOPEN_SOURCE - 0 >= 700                                                                     | 12527     4
   302       |#define __XSI_VISIBLE           700                                                              | 12528     4
   303       |#undef _POSIX_C_SOURCE                                                                           | 12529     4
   304       |#define _POSIX_C_SOURCE         200809                                                           | 12530     4
   305       |#elif _XOPEN_SOURCE - 0 >= 600                                                                   | 12531     4
   306       |#define __XSI_VISIBLE           600                                                              | 12532     4
   307       |#undef _POSIX_C_SOURCE                                                                           | 12533     4
   308       |#define _POSIX_C_SOURCE         200112                                                           | 12534     4
   309       |#elif _XOPEN_SOURCE - 0 >= 500                                                                   | 12535     4
   310       |#define __XSI_VISIBLE           500                                                              | 12536     4
   311       |#undef _POSIX_C_SOURCE                                                                           | 12537     4
   312       |#define _POSIX_C_SOURCE         199506                                                           | 12538     4
   313       |#endif                                                                                           | 12539     4
   314       |#endif                                                                                           | 12540     4
   315       |                                                                                                 | 12541     4
   316       |/*                                                                                               | 12542     4
   317       | * Deal with all versions of POSIX.  The ordering relative to the tests above is                 | 12543     4
   318       | * important.                                                                                    | 12544     4
   319       | */                                                                                              | 12545     4
   320       |#if defined(_POSIX_SOURCE) && !defined(_POSIX_C_SOURCE)                                          | 12546     4
   321       |#define _POSIX_C_SOURCE         198808                                                           | 12547     4
   322       |#endif                                                                                           | 12548     4
   323       |#ifdef _POSIX_C_SOURCE                                                                           | 12549     4
   324       |#if _POSIX_C_SOURCE >= 200809                                                                    | 12550     4
   325       |#define __POSIX_VISIBLE         200809                                                           | 12551     4
   326       |#define __ISO_C_VISIBLE         1999                                                             | 12552     4
   327       |#elif _POSIX_C_SOURCE >= 200112                                                                  | 12553     4
   328       |#define __POSIX_VISIBLE         200112                                                           | 12554     4
   329       |#define __ISO_C_VISIBLE         1999                                                             | 12555     4
   330       |#elif _POSIX_C_SOURCE >= 199506                                                                  | 12556     4
   331       |#define __POSIX_VISIBLE         199506                                                           | 12557     4
   332       |#define __ISO_C_VISIBLE         1990                                                             | 12558     4
   333       |#elif _POSIX_C_SOURCE >= 199309                                                                  | 12559     4
   334       |#define __POSIX_VISIBLE         199309                                                           | 12560     4
   335       |#define __ISO_C_VISIBLE         1990                                                             | 12561     4
   336       |#elif _POSIX_C_SOURCE >= 199209                                                                  | 12562     4
   337       |#define __POSIX_VISIBLE         199209                                                           | 12563     4
   338       |#define __ISO_C_VISIBLE         1990                                                             | 12564     4
   339       |#elif _POSIX_C_SOURCE >= 199009                                                                  | 12565     4
   340       |#define __POSIX_VISIBLE         199009                                                           | 12566     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   251


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   341       |#define __ISO_C_VISIBLE         1990                                                             | 12567     4
   342       |#else                                                                                            | 12568     4
   343       |#define __POSIX_VISIBLE         198808                                                           | 12569     4
   344       |#define __ISO_C_VISIBLE         0                                                                | 12570     4
   345       |#endif /* _POSIX_C_SOURCE */                                                                     | 12571     4
   346       |#else                                                                                            | 12572     4
   347       |/*-                                                                                              | 12573     4
   348       | * Deal with _ANSI_SOURCE:                                                                       | 12574     4
   349       | * If it is defined, and no other compilation environment is explicitly                          | 12575     4
   350       | * requested, then define our internal feature-test macros to zero.  This                        | 12576     4
   351       | * makes no difference to the preprocessor (undefined symbols in preprocessing                   | 12577     4
   352       | * expressions are defined to have value zero), but makes it more convenient for                 | 12578     4
   353       | * a test program to print out the values.                                                       | 12579     4
   354       | *                                                                                               | 12580     4
   355       | * If a program mistakenly defines _ANSI_SOURCE and some other macro such as                     | 12581     4
   356       | * _POSIX_C_SOURCE, we will assume that it wants the broader compilation                         | 12582     4
   357       | * environment (and in fact we will never get here).                                             | 12583     4
   358       | */                                                                                              | 12584     4
   359       |#if defined(_ANSI_SOURCE)       /* Hide almost everything. */                                    | 12585     4
   360       |#define __POSIX_VISIBLE         0                                                                | 12586     4
   361       |#define __XSI_VISIBLE           0                                                                | 12587     4
   362       |#define __BSD_VISIBLE           0                                                                | 12588     4
   363       |#define __ISO_C_VISIBLE         1990                                                             | 12589     4
   364       |#define __EXT1_VISIBLE          0                                                                | 12590     4
   365       |#elif defined(_C99_SOURCE)      /* Localism to specify strict C99 env. */                        | 12591     4
   366       |#define __POSIX_VISIBLE         0                                                                | 12592     4
   367       |#define __XSI_VISIBLE           0                                                                | 12593     4
   368       |#define __BSD_VISIBLE           0                                                                | 12594     4
   369       |#define __ISO_C_VISIBLE         1999                                                             | 12595     4
   370       |#define __EXT1_VISIBLE          0                                                                | 12596     4
   371       |#elif defined(_C11_SOURCE)      /* Localism to specify strict C11 env. */                        | 12597     4
   372       |#define __POSIX_VISIBLE         0                                                                | 12598     4
   373       |#define __XSI_VISIBLE           0                                                                | 12599     4
   374       |#define __BSD_VISIBLE           0                                                                | 12600     4
   375       |#define __ISO_C_VISIBLE         2011                                                             | 12601     4
   376       |#define __EXT1_VISIBLE          0                                                                | 12602     4
   377       |#else                           /* Default environment: show everything. */                      | 12603     4
   378       |#define __POSIX_VISIBLE         200809                                                           | 12604     4
   379       |#define __XSI_VISIBLE           700                                                              | 12605     4
   380       |#define __BSD_VISIBLE           1                                                                | 12606     4
   381       |#define __ISO_C_VISIBLE         2011                                                             | 12607     4
   382       |#define __EXT1_VISIBLE          1                                                                | 12608     4
   383       |#endif                                                                                           | 12609     4
   384       |#endif                                                                                           | 12610     4
   385       |                                                                                                 | 12611     4
   386       |/* User override __EXT1_VISIBLE */                                                               | 12612     4
   387       |#if defined(__STDC_WANT_LIB_EXT1__)                                                              | 12613     4
   388       |#undef  __EXT1_VISIBLE                                                                           | 12614     4
   389       |#if __STDC_WANT_LIB_EXT1__                                                                       | 12615     4
   390       |#define __EXT1_VISIBLE          1                                                                | 12616     4
   391       |#else                                                                                            | 12617     4
   392       |#define __EXT1_VISIBLE          0                                                                | 12618     4
   393       |#endif                                                                                           | 12619     4
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   252


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   394       |#endif /* __STDC_WANT_LIB_EXT1__ */                                                              | 12620     4
   395       |                                                                                                 | 12621     4
   396       |#if defined(__370__) || defined(__mips) || defined(__powerpc64__)                                | 12622     4
   397       |#define __NO_TLS 1                                                                               | 12623     4
   398       |#endif                                                                                           | 12624     4
   399       |                                                                                                 | 12625     4
   400       |                                                                                                 | 12626     4
   401       |/* easier than stripping __FBSDID() from sources - Greg 2008/07/28 */                            | 12627     4
   402       |#define __FBSDID(x)                                                                              | 12628     4
   403       |                                                                                                 | 12629     4
   404       |#endif /* !_SYS_CDEFS_H_ */                                                                      | 12630     4
   405       |#pragma pack(reset)                                                                              | 12631     4
    85       |#include <sys/timespec.h>                                                                        | 12632    28
     1       |/* release 2.25.00 */                                                                            | 12633    12
     2       |#pragma pack()                                                                                   | 12634    12
     3       |/*-                                                                                              | 12635    12
     4       | * Copyright (c) 1982, 1986, 1993                                                                | 12636    12
     5       | *      The Regents of the University of California.  All rights reserved.                       | 12637    12
     6       | *                                                                                               | 12638    12
     7       | * Redistribution and use in source and binary forms, with or without                            | 12639    12
     8       | * modification, are permitted provided that the following conditions                            | 12640    12
     9       | * are met:                                                                                      | 12641    12
    10       | * 1. Redistributions of source code must retain the above copyright                             | 12642    12
    11       | *    notice, this list of conditions and the following disclaimer.                              | 12643    12
    12       | * 2. Redistributions in binary form must reproduce the above copyright                          | 12644    12
    13       | *    notice, this list of conditions and the following disclaimer in the                        | 12645    12
    14       | *    documentation and/or other materials provided with the distribution.                       | 12646    12
    15       | * 4. Neither the name of the University nor the names of its contributors                       | 12647    12
    16       | *    may be used to endorse or promote products derived from this software                      | 12648    12
    17       | *    without specific prior written permission.                                                 | 12649    12
    18       | *                                                                                               | 12650    12
    19       | * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND                       | 12651    12
    20       | * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE                         | 12652    12
    21       | * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE                    | 12653    12
    22       | * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE                      | 12654    12
    23       | * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL                    | 12655    12
    24       | * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS                       | 12656    12
    25       | * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)                         | 12657    12
    26       | * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT                    | 12658    12
    27       | * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY                     | 12659    12
    28       | * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF                        | 12660    12
    29       | * SUCH DAMAGE.                                                                                  | 12661    12
    30       | *                                                                                               | 12662    12
    31       | *      @(#)time.h      8.5 (Berkeley) 5/4/95                                                    | 12663    12
    32       | * from: FreeBSD: src/sys/sys/time.h,v 1.43 2000/03/20 14:09:05 phk Exp                          | 12664    12
    33       | *      $FreeBSD: src/sys/sys/timespec.h,v 1.4 2005/01/07 02:29:24 imp Exp $                     | 12665    12
    34       | */                                                                                              | 12666    12
    35       |                                                                                                 | 12667    12
    36       |/*                                                                                               | 12668    12
    37       | * Prerequisites: <sys/cdefs.h>, <sys/_types.h>                                                  | 12669    12
    38       | */                                                                                              | 12670    12
    39       |                                                                                                 | 12671    12
    40       |#ifndef _SYS_TIMESPEC_H_                                                                         | 12672    12
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   253


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    41       |#define _SYS_TIMESPEC_H_                                                                         | 12673    12
    42       |                                                                                                 | 12674    12
    43       |#include <sys/_types.h>                                                                          | 12675    12
    44       |                                                                                                 | 12676    12
    45       |#ifndef _TIME_T_DECLARED                                                                         | 12677    12
    46       |typedef __time_t        time_t;                                                                  | 12678    12
    47       |#define _TIME_T_DECLARED                                                                         | 12679    12
    48       |#endif                                                                                           | 12680    12
    49       |                                                                                                 | 12681    12
    50       |struct timespec {                                                                                | 12682    12
    51       |        time_t  tv_sec;         /* seconds */                                                    | 12683    12
    52       |        long    tv_nsec;        /* and nanoseconds */                                            | 12684    12
    53       |};                                                                                               | 12685    12
    54       |                                                                                                 | 12686    12
    55       |#if __BSD_VISIBLE                                                                                | 12687    12
    56       |#define TIMEVAL_TO_TIMESPEC(tv, ts)                                     \                        | 12688    12
    57       |        do {                                                            \                        | 12689    12
    58       |                (ts)->tv_sec = (tv)->tv_sec;                            \                        | 12690    12
    59       |                (ts)->tv_nsec = (tv)->tv_usec * 1000;                   \                        | 12691    12
    60       |        } while (0)                                                                              | 12692    12
    61       |#define TIMESPEC_TO_TIMEVAL(tv, ts)                                     \                        | 12693    12
    62       |        do {                                                            \                        | 12694    12
    63       |                (tv)->tv_sec = (ts)->tv_sec;                            \                        | 12695    12
    64       |                (tv)->tv_usec = (ts)->tv_nsec / 1000;                   \                        | 12696    12
    65       |        } while (0)                                                                              | 12697    12
    66       |                                                                                                 | 12698    12
    67       |#endif /* __BSD_VISIBLE */                                                                       | 12699    12
    68       |                                                                                                 | 12700    12
    69       |#endif /* _SYS_TIMESPEC_H_ */                                                                    | 12701    12
    70       |#pragma pack(reset)                                                                              | 12702    12
    86       |#include <sys/_types.h>                                                                          | 12703    28
     1       |/* release 2.25.00 */                                                                            | 12704     6
     2       |#pragma pack()                                                                                   | 12705     6
     3       |/*-                                                                                              | 12706     6
     4       | * Copyright (c) 2002 Mike Barcroft <mike@FreeBSD.org>                                           | 12707     6
     5       | * All rights reserved.                                                                          | 12708     6
     6       | *                                                                                               | 12709     6
     7       | * Redistribution and use in source and binary forms, with or without                            | 12710     6
     8       | * modification, are permitted provided that the following conditions                            | 12711     6
     9       | * are met:                                                                                      | 12712     6
    10       | * 1. Redistributions of source code must retain the above copyright                             | 12713     6
    11       | *    notice, this list of conditions and the following disclaimer.                              | 12714     6
    12       | * 2. Redistributions in binary form must reproduce the above copyright                          | 12715     6
    13       | *    notice, this list of conditions and the following disclaimer in the                        | 12716     6
    14       | *    documentation and/or other materials provided with the distribution.                       | 12717     6
    15       | *                                                                                               | 12718     6
    16       | * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND                        | 12719     6
    17       | * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE                         | 12720     6
    18       | * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE                    | 12721     6
    19       | * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE                       | 12722     6
    20       | * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL                    | 12723     6
    21       | * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS                       | 12724     6
    22       | * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)                         | 12725     6
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   254


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    23       | * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT                    | 12726     6
    24       | * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY                     | 12727     6
    25       | * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF                        | 12728     6
    26       | * SUCH DAMAGE.                                                                                  | 12729     6
    27       | *                                                                                               | 12730     6
    28       | * $FreeBSD: src/sys/sys/_types.h,v 1.21 2005/03/22 01:19:17 das Exp $                           | 12731     6
    29       | */                                                                                              | 12732     6
    30       |                                                                                                 | 12733     6
    31       |#ifndef _SYS__TYPES_H_                                                                           | 12734     6
    32       |#define _SYS__TYPES_H_                                                                           | 12735     6
    33       |                                                                                                 | 12736     6
    34       |#include <sys/cdefs.h>                                                                           | 12737     6
    35       |#include <machine/_types.h>                                                                      | 12738     6
    36       |                                                                                                 | 12739     6
    37       |/*                                                                                               | 12740     6
    38       | * Standard type definitions.                                                                    | 12741     6
    39       | */                                                                                              | 12742     6
    40       |typedef __int32_t       __blksize_t;    /* file block size */                                    | 12743     6
    41       |typedef __int64_t       __blkcnt_t;     /* file block count */                                   | 12744     6
    42       |typedef __int32_t       __clockid_t;    /* clock_gettime()... */                                 | 12745     6
    43       |typedef __uint32_t      __fflags_t;     /* file flags */                                         | 12746     6
    44       |typedef __uint64_t      __fsblkcnt_t;                                                            | 12747     6
    45       |typedef __uint64_t      __fsfilcnt_t;                                                            | 12748     6
    46       |typedef __uint32_t      __gid_t;                                                                 | 12749     6
    47       |typedef __int64_t       __id_t;         /* can hold a gid_t, pid_t, or uid_t */                  | 12750     6
    48       |typedef __uint32_t      __ino_t;        /* inode number */                                       | 12751     6
    49       |typedef long            __key_t;        /* IPC key (for Sys V IPC) */                            | 12752     6
    50       |typedef __int32_t       __lwpid_t;      /* Thread ID (a.k.a. LWP) */                             | 12753     6
    51       |typedef __uint16_t      __mode_t;       /* permissions */                                        | 12754     6
    52       |typedef int             __nl_item;                                                               | 12755     6
    53       |typedef __uint16_t      __nlink_t;      /* link count */                                         | 12756     6
    54       |typedef __int64_t       __off_t;        /* file offset */                                        | 12757     6
    55       |typedef __int32_t       __pid_t;        /* process [group] */                                    | 12758     6
    56       |typedef __int64_t       __rlim_t;       /* resource limit - intentionally */                     | 12759     6
    57       |                                        /* signed, because of legacy code */                     | 12760     6
    58       |                                        /* that uses -1 for RLIM_INFINITY */                     | 12761     6
    59       |typedef __uint8_t       __sa_family_t;                                                           | 12762     6
    60       |typedef __uint32_t      __socklen_t;                                                             | 12763     6
    61       |typedef long            __suseconds_t;  /* microseconds (signed) */                              | 12764     6
    62       |typedef __int32_t       __timer_t;      /* timer_gettime()... */                                 | 12765     6
    63       |typedef __uint32_t      __uid_t;                                                                 | 12766     6
    64       |typedef unsigned int    __useconds_t;   /* microseconds (unsigned) */                            | 12767     6
    65       |                                                                                                 | 12768     6
    66       |/*                                                                                               | 12769     6
    67       | * Unusual type definitions.                                                                     | 12770     6
    68       | */                                                                                              | 12771     6
    69       |/*                                                                                               | 12772     6
    70       | * rune_t is declared to be an ``int'' instead of the more natural                               | 12773     6
    71       | * ``unsigned long'' or ``long''.  Two things are happening here.  It is not                     | 12774     6
    72       | * unsigned so that EOF (-1) can be naturally assigned to it and used.  Also,                    | 12775     6
    73       | * it looks like 10646 will be a 31 bit standard.  This means that if your                       | 12776     6
    74       | * ints cannot hold 32 bits, you will be in trouble.  The reason an int was                      | 12777     6
    75       | * chosen over a long is that the is*() and to*() routines take ints (says                       | 12778     6
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   255


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    76       | * ANSI C), but they use __ct_rune_t instead of int.                                             | 12779     6
    77       | *                                                                                               | 12780     6
    78       | * NOTE: rune_t is not covered by ANSI nor other standards, and should not                       | 12781     6
    79       | * be instantiated outside of lib/libc/locale.  Use wchar_t.  wchar_t and                        | 12782     6
    80       | * rune_t must be the same type.  Also, wint_t must be no narrower than                          | 12783     6
    81       | * wchar_t, and should be able to hold all members of the largest                                | 12784     6
    82       | * character set plus one extra value (WEOF), and must be at least 16 bits.                      | 12785     6
    83       | */                                                                                              | 12786     6
    84       |#ifdef __cplusplus                                                                               | 12787     6
    85       |/* DCXX provides a builtin definition of wchar_t as a keyword, and it matters                    | 12788     6
    86       | * for parameter type matching even though it's the same type (4-byte signed) */                 | 12789     6
    87       |typedef wchar_t         __ct_rune_t;    /* arg type for ctype funcs */                           | 12790     6
    88       |#else                                                                                            | 12791     6
    89       |typedef int             __ct_rune_t;    /* arg type for ctype funcs */                           | 12792     6
    90       |#endif                                                                                           | 12793     6
    91       |typedef __ct_rune_t     __rune_t;       /* rune_t (see above) */                                 | 12794     6
    92       |typedef __ct_rune_t     __wchar_t;      /* wchar_t (see above) */                                | 12795     6
    93       |typedef __ct_rune_t     __wint_t;       /* wint_t (see above) */                                 | 12796     6
    94       |                                                                                                 | 12797     6
    95       |/* In C++11, char16_t and char32_t are builtin types */                                          | 12798     6
    96       |#if defined(__cplusplus) && __cplusplus >= 201103L                                               | 12799     6
    97       |#define _CHAR16_T_DECLARED                                                                       | 12800     6
    98       |#define _CHAR32_T_DECLARED                                                                       | 12801     6
    99       |#endif                                                                                           | 12802     6
   100       |                                                                                                 | 12803     6
   101       |#if !defined(__cplusplus)                                                                        | 12804     6
   102       |typedef __uint_least16_t __char16_t;                                                             | 12805     6
   103       |typedef __uint_least32_t __char32_t;                                                             | 12806     6
   104       |#endif                                                                                           | 12807     6
   105       |                                                                                                 | 12808     6
   106       |                                                                                                 | 12809     6
   107       |typedef __uint32_t      __dev_t;        /* device number */                                      | 12810     6
   108       |                                                                                                 | 12811     6
   109       |typedef __uint32_t      __fixpt_t;      /* fixed point number */                                 | 12812     6
   110       |                                                                                                 | 12813     6
   111       |/*                                                                                               | 12814     6
   112       | * mbstate_t is an opaque object to keep conversion state during multibyte                       | 12815     6
   113       | * stream conversions.                                                                           | 12816     6
   114       | */                                                                                              | 12817     6
   115       |typedef union {                                                                                  | 12818     6
   116       |        char            __mbstate8[128];                                                         | 12819     6
   117       |        __int64_t       _mbstateL;      /* for alignment */                                      | 12820     6
   118       |} __mbstate_t;                                                                                   | 12821     6
   119       |                                                                                                 | 12822     6
   120       |#endif /* !_SYS__TYPES_H_ */                                                                     | 12823     6
   121       |#pragma pack(reset)                                                                              | 12824     6
    87       |                                                                                                 | 12825    28
    88       |#ifndef _PID_T_DECLARED                                                                          | 12826    28
    89       |typedef __pid_t         pid_t;                                                                   | 12827    28
    90       |#define _PID_T_DECLARED                                                                          | 12828    28
    91       |#endif                                                                                           | 12829    28
    92       |                                                                                                 | 12830    28
    93       |__BEGIN_DECLS                                                                                    | 12831    28
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   256


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    93       +                                                                                                 + 12831    28
    94       |#if 0                                                                                            | 12832    28
    95       | /* These aren't available on z/OS, they are part of the */                                      | 12833    28
    96       | /* posix REALTIME extensions. */                                                                | 12834    28
    97       |int     sched_get_priority_max(int);                                                             | 12835    28
    98       |int     sched_get_priority_min(int);                                                             | 12836    28
    99       |int     sched_getparam(pid_t, struct sched_param *);                                             | 12837    28
   100       |int     sched_getscheduler(pid_t);                                                               | 12838    28
   101       |int     sched_rr_get_interval(pid_t, struct timespec *);                                         | 12839    28
   102       |int     sched_setparam(pid_t, const struct sched_param *);                                       | 12840    28
   103       |int     sched_setscheduler(pid_t, int, const struct sched_param *);                              | 12841    28
   104       |#endif                                                                                           | 12842    28
   105       |#pragma map(sched_yield, "@@SCHD@Y")                                                             | 12843    28
   106       |int     sched_yield(void);                                                                       | 12844    28
   107       |__END_DECLS                                                                                      | 12845    28
   107       +                                                                                                 + 12845    28
   108       |                                                                                                 | 12846    28
   109       |#endif                                                                                           | 12847    28
   110       |#endif /* !_SCHED_H_ */                                                                          | 12848    28
   111       |#pragma pack(reset)                                                                              | 12849    28
    48       |                                                                                                 | 12850    20
    49       |/*                                                                                               | 12851    20
    50       | * Run-time invariant values:                                                                    | 12852    20
    51       | */                                                                                              | 12853    20
    52       |#define PTHREAD_DESTRUCTOR_ITERATIONS           4                                                | 12854    20
    53       |#define PTHREAD_KEYS_MAX                        256                                              | 12855    20
    54       |#define PTHREAD_STACK_MIN                       MINSIGSTKSZ                                      | 12856    20
    55       |#define PTHREAD_THREADS_MAX                     ULONG_MAX                                        | 12857    20
    56       |#define PTHREAD_BARRIER_SERIAL_THREAD           -1                                               | 12858    20
    57       |                                                                                                 | 12859    20
    58       |/*                                                                                               | 12860    20
    59       | * Flags for threads and thread attributes.                                                      | 12861    20
    60       | */                                                                                              | 12862    20
    61       |#define PTHREAD_DETACHED            0x1                                                          | 12863    20
    62       |#define PTHREAD_SCOPE_SYSTEM        0x2                                                          | 12864    20
    63       |#define PTHREAD_INHERIT_SCHED       0x4                                                          | 12865    20
    64       |#define PTHREAD_NOFLOAT             0x8                                                          | 12866    20
    65       |                                                                                                 | 12867    20
    66       |#define PTHREAD_CREATE_DETACHED     PTHREAD_DETACHED                                             | 12868    20
    67       |#define PTHREAD_CREATE_JOINABLE     0                                                            | 12869    20
    68       |#define PTHREAD_SCOPE_PROCESS       0                                                            | 12870    20
    69       |#define PTHREAD_EXPLICIT_SCHED      0                                                            | 12871    20
    70       |                                                                                                 | 12872    20
    71       |      /* BPX thread weights */                                                                   | 12873    20
    72       |#define __HEAVY_WEIGHT              0 /* default */                                              | 12874    20
    73       |#define __MEDIUM_WEIGHT             1                                                            | 12875    20
    74       |                                                                                                 | 12876    20
    75       |      /* BPX thread synctypes */                                                                 | 12877    20
    76       |#define __PTATSYNCHRONOUS           0 /* default */                                              | 12878    20
    77       |#define __PTATASYNCHRONOUS          1                                                            | 12879    20
    78       |                                                                                                 | 12880    20
    79       |      /* pthread_set_limit_np action */                                                          | 12881    20
    80       |#define __STL_MAX_TASKS             1                                                            | 12882    20
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   257


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    81       |#define __STL_MAX_THREADS           2                                                            | 12883    20
    82       |#define __STL_SET_BOTH              3                                                            | 12884    20
    83       |                                                                                                 | 12885    20
    84       |/*                                                                                               | 12886    20
    85       | * Flags for read/write lock attributes                                                          | 12887    20
    86       | */                                                                                              | 12888    20
    87       |#define PTHREAD_PROCESS_PRIVATE     0                                                            | 12889    20
    88       |#define PTHREAD_PROCESS_SHARED      1                                                            | 12890    20
    89       |                                                                                                 | 12891    20
    90       |/*                                                                                               | 12892    20
    91       | * Flags for cancelling threads                                                                  | 12893    20
    92       | */                                                                                              | 12894    20
    93       |#define PTHREAD_CANCEL_ENABLE 0                                                                  | 12895    20
    94       |#define PTHREAD_CANCEL_DISABLE 1                                                                 | 12896    20
    95       |#define PTHREAD_CANCEL_MASKED 2                                                                  | 12897    20
    96       |                                                                                                 | 12898    20
    97       |#define PTHREAD_CANCEL_DEFERRED 0                                                                | 12899    20
    98       |#define PTHREAD_CANCEL_ASYNCHRONOUS 1                                                            | 12900    20
    99       |                                                                                                 | 12901    20
   100       |#define PTHREAD_CANCELED ((void *)-1L)                                                           | 12902    20
   101       |                                                                                                 | 12903    20
   102       |                                                                                                 | 12904    20
   103       |/*                                                                                               | 12905    20
   104       | * Flags for once initialization.                                                                | 12906    20
   105       | */                                                                                              | 12907    20
   106       |#define PTHREAD_NEEDS_INIT  0                                                                    | 12908    20
   107       |#define PTHREAD_DONE_INIT   1                                                                    | 12909    20
   108       |                                                                                                 | 12910    20
   109       |/*                                                                                               | 12911    20
   110       | * Static once initialization values.                                                            | 12912    20
   111       | */                                                                                              | 12913    20
   112       |#define PTHREAD_ONCE_INIT   ( 0 )                                                                | 12914    20
   113       |                                                                                                 | 12915    20
   114       |/*                                                                                               | 12916    20
   115       | * Static initialization values.                                                                 | 12917    20
   116       | */                                                                                              | 12918    20
   117       |#define PTHREAD_MUTEX_INITIALIZER {{{0}}}                                                        | 12919    20
   118       |#define PTHREAD_RWLOCK_INITIALIZER {{{0}}}                                                       | 12920    20
   119       |#define PTHREAD_COND_INITIALIZER {{{0}}}                                                         | 12921    20
   120       |                                                                                                 | 12922    20
   121       |/*                                                                                               | 12923    20
   122       | * Default attribute arguments (draft 4, deprecated).                                            | 12924    20
   123       | */                                                                                              | 12925    20
   124       |#ifndef PTHREAD_KERNEL                                                                           | 12926    20
   125       |#define pthread_condattr_default    NULL                                                         | 12927    20
   126       |#define pthread_mutexattr_default   NULL                                                         | 12928    20
   127       |#define pthread_attr_default        NULL                                                         | 12929    20
   128       |#endif                                                                                           | 12930    20
   129       |                                                                                                 | 12931    20
   130       |#define PTHREAD_PRIO_NONE       0                                                                | 12932    20
   131       |#define PTHREAD_PRIO_INHERIT    1                                                                | 12933    20
   132       |#define PTHREAD_PRIO_PROTECT    2                                                                | 12934    20
   133       |                                                                                                 | 12935    20
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   258


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   134       |/*                                                                                               | 12936    20
   135       | * Mutex types (Single UNIX Specification, Version 2, 1997).                                     | 12937    20
   136       | *                                                                                               | 12938    20
   137       | * Note that a mutex attribute with one of the following types:                                  | 12939    20
   138       | *                                                                                               | 12940    20
   139       | *      PTHREAD_MUTEX_NORMAL                                                                     | 12941    20
   140       | *      PTHREAD_MUTEX_RECURSIVE                                                                  | 12942    20
   141       | *      MUTEX_TYPE_FAST (deprecated)                                                             | 12943    20
   142       | *      MUTEX_TYPE_COUNTING_FAST (deprecated)                                                    | 12944    20
   143       | *                                                                                               | 12945    20
   144       | * will deviate from POSIX specified semantics.                                                  | 12946    20
   145       | */                                                                                              | 12947    20
   146       |enum pthread_mutextype {                                                                         | 12948    20
   147       |        PTHREAD_MUTEX_NORMAL            = 0,    /* No error checking */                          | 12949    20
   148       |        PTHREAD_MUTEX_RECURSIVE         = 1,    /* Recursive mutex */                            | 12950    20
   149       |        PTHREAD_MUTEX_ERRORCHECK        = 2,    /* Default POSIX mutex */                        | 12951    20
   150       |        MUTEX_TYPE_MAX                                                                           | 12952    20
   151       |};                                                                                               | 12953    20
   152       |                                                                                                 | 12954    20
   153       |#define PTHREAD_MUTEX_DEFAULT           PTHREAD_MUTEX_ERRORCHECK                                 | 12955    20
   154       |#define MUTEX_TYPE_FAST                 PTHREAD_MUTEX_NORMAL                                     | 12956    20
   155       |#define MUTEX_TYPE_COUNTING_FAST        PTHREAD_MUTEX_RECURSIVE                                  | 12957    20
   156       |                                                                                                 | 12958    20
   157       |/*                                                                                               | 12959    20
   158       | * Thread function prototype definitions:                                                        | 12960    20
   159       | */                                                                                              | 12961    20
   160       |__BEGIN_DECLS                                                                                    | 12962    20
   160       +                                                                                                 + 12962    20
   161       |#pragma map (pthread_atfork, "@@PT@AF")                                                          | 12963    20
   162       |int             pthread_atfork(void (*prepare)(void), void (*parent)(void),                      | 12964    20
   163       |                        void (*child)(void));                                                    | 12965    20
   164       |#pragma map (pthread_attr_destroy, "@@PT3AD")                                                    | 12966    20
   165       |int             pthread_attr_destroy(pthread_attr_t *);                                          | 12967    20
   166       |#pragma map (pthread_attr_getstack, "@@PT@AGK")                                                  | 12968    20
   167       |int             pthread_attr_getstack(const pthread_attr_t * __restrict,                         | 12969    20
   167       +int             pthread_attr_getstack(const pthread_attr_t * __restrict__,                       + 12969    20
   168       |                        void ** __restrict stackaddr,                                            | 12970    20
   168       +                                                void ** __restrict__ stackaddr,                  + 12970    20
   169       |                        size_t * __restrict stacksize);                                          | 12971    20
   169       +                                                size_t * __restrict__ stacksize);                + 12971    20
   170       |#pragma map (pthread_attr_getstacksize, "@@PT3AGS")                                              | 12972    20
   171       |int             pthread_attr_getstacksize(const pthread_attr_t *, size_t *);                     | 12973    20
   172       |#pragma map (pthread_attr_getguardsize, "@@PT@AGG")                                              | 12974    20
   173       |int             pthread_attr_getguardsize(const pthread_attr_t *, size_t *);                     | 12975    20
   174       |#pragma map (pthread_attr_getstackaddr, "@@PT@GSA")                                              | 12976    20
   175       |int             pthread_attr_getstackaddr(const pthread_attr_t *, void **);                      | 12977    20
   176       |#pragma map (pthread_attr_getdetachstate, "@@PT3AGD")                                            | 12978    20
   177       |int             pthread_attr_getdetachstate(const pthread_attr_t *, int *);                      | 12979    20
   178       |#pragma map (pthread_attr_init, "@@PT3AI")                                                       | 12980    20
   179       |int             pthread_attr_init(pthread_attr_t *);                                             | 12981    20
   180       |#pragma map (pthread_attr_setstacksize, "@@PT3ASS")                                              | 12982    20
   181       |int             pthread_attr_setstacksize(pthread_attr_t *, size_t);                             | 12983    20
   182       |#pragma map (pthread_attr_setguardsize, "@@PT@ASG")                                              | 12984    20
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   259


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   183       |int             pthread_attr_setguardsize(pthread_attr_t *, size_t);                             | 12985    20
   184       |#pragma map (pthread_attr_setstack, "@@PT@ASK")                                                  | 12986    20
   185       |int             pthread_attr_setstack(pthread_attr_t *, void *, size_t);                         | 12987    20
   186       |#pragma map (pthread_attr_setstackaddr, "@@PT@SSA")                                              | 12988    20
   187       |int             pthread_attr_setstackaddr(pthread_attr_t *, void *);                             | 12989    20
   188       |#pragma map (pthread_attr_setdetachstate, "@@PT3ASD")                                            | 12990    20
   189       |int             pthread_attr_setdetachstate(pthread_attr_t *, int);                              | 12991    20
   190       |#pragma map (pthread_attr_getweight_np, "@@PT@AGW")                                              | 12992    20
   191       |int             pthread_attr_getweight_np(const pthread_attr_t *__restrict,                      | 12993    20
   191       +int             pthread_attr_getweight_np(const pthread_attr_t *__restrict__,                    + 12993    20
   192       |                                          int *__restrict);                                      | 12994    20
   192       +                                                                                    int *__restri+ 12994    20
   192       +ct__);                                                                                           + 12994    20
   193       |#pragma map (pthread_attr_setweight_np, "@@PT@ASW")                                              | 12995    20
   194       |int             pthread_attr_setweight_np(pthread_attr_t *, int );                               | 12996    20
   195       |#pragma map (pthread_attr_getsynctype_np, "@@PT@AGT")                                            | 12997    20
   196       |int             pthread_attr_getsynctype_np(const pthread_attr_t *__restrict,                    | 12998    20
   196       +int             pthread_attr_getsynctype_np(const pthread_attr_t *__restrict__,                  + 12998    20
   197       |                                            int *__restrict);                                    | 12999    20
   197       +                                                                                        int *__re+ 12999    20
   197       +strict__);                                                                                       + 12999    20
   198       |#pragma map (pthread_attr_setsynctype_np, "@@PT@AST")                                            | 13000    20
   199       |int             pthread_attr_setsynctype_np(pthread_attr_t *, int );                             | 13001    20
   200       |#pragma map (pthread_barrier_destroy, "@@PT6@BD")                                                | 13002    20
   201       |int             pthread_barrier_destroy(pthread_barrier_t *);                                    | 13003    20
   202       |#pragma map (pthread_barrier_init, "@@PT6@BI")                                                   | 13004    20
   203       |int             pthread_barrier_init(pthread_barrier_t *,                                        | 13005    20
   204       |                        const pthread_barrierattr_t *, unsigned);                                | 13006    20
   205       |#pragma map (pthread_barrier_wait, "@@PT6@BW")                                                   | 13007    20
   206       |int             pthread_barrier_wait(pthread_barrier_t *);                                       | 13008    20
   207       |#pragma map (pthread_barrierattr_destroy, "@@PT6BAD")                                            | 13009    20
   208       |int             pthread_barrierattr_destroy(pthread_barrierattr_t *);                            | 13010    20
   209       |#if 0                                                                                            | 13011    20
   210       |#pragma map (pthread_barrierattr_getpshared, "@@PT6BAG")                                         | 13012    20
   211       |int             pthread_barrierattr_getpshared(const pthread_barrierattr_t *,                    | 13013    20
   212       |                        int *);                                                                  | 13014    20
   213       |#endif                                                                                           | 13015    20
   214       |#pragma map (pthread_barrierattr_init, "@@PT6BAI")                                               | 13016    20
   215       |int             pthread_barrierattr_init(pthread_barrierattr_t *);                               | 13017    20
   216       |#if 0                                                                                            | 13018    20
   217       |#pragma map (pthread_barrierattr_setpshared, "@@PT6BAS")                                         | 13019    20
   218       |int             pthread_barrierattr_setpshared(pthread_barrierattr_t *, int);                    | 13020    20
   219       |#endif                                                                                           | 13021    20
   220       |                                                                                                 | 13022    20
   221       |                                                                                                 | 13023    20
   222       |struct __ptcb {                                                                                  | 13024    20
   223       |        void (*__f)(void *);                                                                     | 13025    20
   224       |        void *__x;                                                                               | 13026    20
   225       |        struct __ptcb *__next;                                                                   | 13027    20
   226       |};                                                                                               | 13028    20
   227       |                                                                                                 | 13029    20
   228       |#pragma map (_pthread_cleanup_push, "@@PT@CPU")                                                  | 13030    20
   229       |void _pthread_cleanup_push(struct __ptcb *, void (*)(void *), void *);                           | 13031    20
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   260


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   230       |#pragma map (_pthread_cleanup_pop, "@@PT@CPO")                                                   | 13032    20
   231       |void _pthread_cleanup_pop(struct __ptcb *, int);                                                 | 13033    20
   232       |                                                                                                 | 13034    20
   233       | /* OpenGroup definition of pthread_cleanup_push()/pthread_cleanup_pop()                         | 13035    20
   234       |  * says these can be macros the open and close a new lexical scope.  So,                        | 13036    20
   235       |  * that's what we do, and this avoids any memory allocation questions.                          | 13037    20
   236       |  */                                                                                             | 13038    20
   237       |#define pthread_cleanup_push(f, x) \                                                             | 13039    20
   238       |        do { struct __ptcb __cb; _pthread_cleanup_push(&__cb, f, x); {                           | 13040    20
   239       |#define pthread_cleanup_pop(r) } _pthread_cleanup_pop(&__cb, (r)); } while(0)                    | 13041    20
   240       |#pragma map (pthread_condattr_destroy, "@@PT3DD")                                                | 13042    20
   241       |int             pthread_condattr_destroy(pthread_condattr_t *);                                  | 13043    20
   242       |#pragma map (pthread_condattr_init, "@@PT3DI")                                                   | 13044    20
   243       |int             pthread_condattr_init(pthread_condattr_t *);                                     | 13045    20
   244       |#if 0                                                                                            | 13046    20
   245       |#pragma map (pthread_condattr_getpshared, "@@PT3CGP")                                            | 13047    20
   246       |int             pthread_condattr_getpshared(const pthread_condattr_t *, int *);                  | 13048    20
   247       |#endif                                                                                           | 13049    20
   248       |#pragma map (pthread_condattr_getclock, "@@PT3CGC")                                              | 13050    20
   249       |int             pthread_condattr_getclock(const pthread_condattr_t *,                            | 13051    20
   250       |                        clockid_t *);                                                            | 13052    20
   251       |#pragma map (pthread_condattr_setclock, "@@PT3CSC")                                              | 13053    20
   252       |int             pthread_condattr_setclock(pthread_condattr_t *,                                  | 13054    20
   253       |                        clockid_t);                                                              | 13055    20
   254       |#if 0                                                                                            | 13056    20
   255       |#pragma map (pthread_condattr_setpshared, "@@PT3CSP")                                            | 13057    20
   256       |int             pthread_condattr_setpshared(pthread_condattr_t *, int);                          | 13058    20
   257       |#endif                                                                                           | 13059    20
   258       |#pragma map (pthread_cond_broadcast, "@@PT3CB")                                                  | 13060    20
   259       |int             pthread_cond_broadcast(pthread_cond_t *);                                        | 13061    20
   260       |#pragma map (pthread_cond_destroy, "@@PT3CD")                                                    | 13062    20
   261       |int             pthread_cond_destroy(pthread_cond_t *);                                          | 13063    20
   262       |#pragma map (pthread_cond_init, "@@PT3CI")                                                       | 13064    20
   263       |int             pthread_cond_init(pthread_cond_t *,                                              | 13065    20
   264       |                        const pthread_condattr_t *);                                             | 13066    20
   265       |#pragma map (pthread_cond_signal,  "@@PT3CS")                                                    | 13067    20
   266       |int             pthread_cond_signal(pthread_cond_t *);                                           | 13068    20
   267       |#pragma map (pthread_cond_timedwait, "@@PT3CT")                                                  | 13069    20
   268       |int             pthread_cond_timedwait(pthread_cond_t *,                                         | 13070    20
   269       |                        pthread_mutex_t *, const struct timespec *);                             | 13071    20
   270       |#pragma map (pthread_cond_wait, "@@PT3CW")                                                       | 13072    20
   271       |int             pthread_cond_wait(pthread_cond_t *, pthread_mutex_t *);                          | 13073    20
   272       |#pragma map (pthread_create, "@@PT3C")                                                           | 13074    20
   273       |int             pthread_create(pthread_t *, const pthread_attr_t *,                              | 13075    20
   274       |                        void *(*) (void *), void *);                                             | 13076    20
   275       |#pragma map (pthread_detach, "@@PT3D")                                                           | 13077    20
   276       |int             pthread_detach(pthread_t);                                                       | 13078    20
   277       |#pragma map (pthread_equal, "@@PT@EQ")                                                           | 13079    20
   278       |int             pthread_equal(pthread_t, pthread_t);                                             | 13080    20
   279       |#pragma map (pthread_exit,  "@@PT@EXI")                                                          | 13081    20
   280       |void            pthread_exit(void *) __dead2;                                                    | 13082    20
   280       +void            pthread_exit(void *) __attribute__((__noreturn__));                              + 13082    20
   281       |#pragma map (pthread_getspecific, "@@PT8GS")                                                     | 13083    20
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   261


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   282       |void            *pthread_getspecific(pthread_key_t);                                             | 13084    20
   283       |#pragma map (pthread_join, "@@PT3J")                                                             | 13085    20
   284       |int             pthread_join(pthread_t, void **);                                                | 13086    20
   285       |#pragma map (pthread_key_create, "@@PT3KC")                                                      | 13087    20
   286       |int             pthread_key_create(pthread_key_t *,                                              | 13088    20
   287       |                        void (*) (void *));                                                      | 13089    20
   288       |#pragma map (pthread_key_delete, "@@PT@KD")                                                      | 13090    20
   289       |int             pthread_key_delete(pthread_key_t);                                               | 13091    20
   290       |#pragma map (pthread_mutexattr_init, "@@PT3XI")                                                  | 13092    20
   291       |int             pthread_mutexattr_init(pthread_mutexattr_t *);                                   | 13093    20
   292       |#pragma map (pthread_mutexattr_destroy, "@@PT3XS")                                               | 13094    20
   293       |int             pthread_mutexattr_destroy(pthread_mutexattr_t *);                                | 13095    20
   294       |#pragma map (pthread_mutexattr_getprotocol, "@@PT3MGP")                                          | 13096    20
   295       |int pthread_mutexattr_getprotocol(const pthread_mutexattr_t *attr,                               | 13097    20
   296       |    int *protocol);                                                                              | 13098    20
   297       |#pragma map (pthread_mutexattr_getrobust, "@@PT3MGR")                                            | 13099    20
   298       |int pthread_mutexattr_getrobust(const pthread_mutexattr_t *__restrict,                           | 13100    20
   298       +int pthread_mutexattr_getrobust(const pthread_mutexattr_t *__restrict__,                         + 13100    20
   299       |                                 int *__restrict );                                              | 13101    20
   299       +                                                                  int *__restrict__ );           + 13101    20
   300       |#pragma map (pthread_mutexattr_gettype, "@@PT3TG")                                               | 13102    20
   301       |int pthread_mutexattr_gettype(const pthread_mutexattr_t *__restrict,                             | 13103    20
   301       +int pthread_mutexattr_gettype(const pthread_mutexattr_t *__restrict__,                           + 13103    20
   302       |        int *__restrict);                                                                        | 13104    20
   302       +                int *__restrict__);                                                              + 13104    20
   303       |#if 0                                                                                            | 13105    20
   304       |#pragma map (pthread_mutexattr_getpshared, "@@P3MPG")                                            | 13106    20
   305       |int     pthread_mutexattr_getpshared(const pthread_mutexattr_t *, int *);                        | 13107    20
   306       |#endif                                                                                           | 13108    20
   307       |#pragma map(pthread_mutexattr_setprotocol, "@@PT3MSP")                                           | 13109    20
   308       |int pthread_mutexattr_setprotocol(pthread_mutexattr_t *attr,                                     | 13110    20
   309       |    int protocol);                                                                               | 13111    20
   310       |#pragma map (pthread_mutexattr_setrobust, "@@PT3MSR")                                            | 13112    20
   311       |int pthread_mutexattr_setrobust(pthread_mutexattr_t *attr, int robust);                          | 13113    20
   312       |#pragma map (pthread_mutexattr_settype, "@@PT3TS")                                               | 13114    20
   313       |int             pthread_mutexattr_settype(pthread_mutexattr_t *, int);                           | 13115    20
   314       |#if 0                                                                                            | 13116    20
   315       |#pragma map (pthread_mutexattr_setpshared, "@@P3MPS")                                            | 13117    20
   316       |int             pthread_mutexattr_setpshared(pthread_mutexattr_t *, int);                        | 13118    20
   317       |#endif                                                                                           | 13119    20
   318       |#pragma map (pthread_mutex_consistent, "@@PT7MC")                                                | 13120    20
   319       |int pthread_mutex_consistent(pthread_mutex_t *mutex);                                            | 13121    20
   320       |#pragma map (pthread_mutex_destroy, "@@PT3MD")                                                   | 13122    20
   321       |int             pthread_mutex_destroy(pthread_mutex_t *);                                        | 13123    20
   322       |#pragma map (pthread_mutex_init, "@@PT3MI")                                                      | 13124    20
   323       |int             pthread_mutex_init(pthread_mutex_t *,                                            | 13125    20
   324       |                        const pthread_mutexattr_t *);                                            | 13126    20
   325       |#pragma map (pthread_mutex_lock, "@@PT3ML")                                                      | 13127    20
   326       |int             pthread_mutex_lock(pthread_mutex_t *);                                           | 13128    20
   327       |#pragma map (pthread_mutex_trylock, "@@PT3MT")                                                   | 13129    20
   328       |int             pthread_mutex_trylock(pthread_mutex_t *);                                        | 13130    20
   329       |#pragma map (pthread_mutex_timedlock, "@@PT3MTM")                                                | 13131    20
   330       |int             pthread_mutex_timedlock(pthread_mutex_t *,                                       | 13132    20
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   262


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   331       |                        const struct timespec *);                                                | 13133    20
   332       |#pragma map (pthread_mutex_unlock, "@@PT3MU")                                                    | 13134    20
   333       |int             pthread_mutex_unlock(pthread_mutex_t *);                                         | 13135    20
   334       |#pragma map (pthread_once, "@@PT3O")                                                             | 13136    20
   335       |int             pthread_once(pthread_once_t *, void (*) (void));                                 | 13137    20
   336       |#pragma map (pthread_rwlock_destroy, "@@P3R@D")                                                  | 13138    20
   337       |int             pthread_rwlock_destroy(pthread_rwlock_t *);                                      | 13139    20
   338       |#pragma map (pthread_rwlock_init, "@@P3R@I")                                                     | 13140    20
   339       |int             pthread_rwlock_init(pthread_rwlock_t *,                                          | 13141    20
   340       |                        const pthread_rwlockattr_t *);                                           | 13142    20
   341       |#pragma map (pthread_rwlock_rdlock, "@@P3RRL")                                                   | 13143    20
   342       |int             pthread_rwlock_rdlock(pthread_rwlock_t *);                                       | 13144    20
   343       |#pragma map (pthread_rwlock_timedrdlock, "@@P3RTRL")                                             | 13145    20
   344       |int             pthread_rwlock_timedrdlock(pthread_rwlock_t *,                                   | 13146    20
   345       |                        const struct timespec *);                                                | 13147    20
   346       |#pragma map (pthread_rwlock_timedwrlock, "@@P3RTWL")                                             | 13148    20
   347       |int             pthread_rwlock_timedwrlock(pthread_rwlock_t *,                                   | 13149    20
   348       |                        const struct timespec *);                                                | 13150    20
   349       |#pragma map (pthread_rwlock_tryrdlock, "@@P3RTR")                                                | 13151    20
   350       |int             pthread_rwlock_tryrdlock(pthread_rwlock_t *);                                    | 13152    20
   351       |#pragma map (pthread_rwlock_trywrlock,"@@P3RTW")                                                 | 13153    20
   352       |int             pthread_rwlock_trywrlock(pthread_rwlock_t *);                                    | 13154    20
   353       |#pragma map (pthread_rwlock_unlock, "@@P3R@U")                                                   | 13155    20
   354       |int             pthread_rwlock_unlock(pthread_rwlock_t *);                                       | 13156    20
   355       |#pragma map (pthread_rwlock_wrlock, "@@P3RWL")                                                   | 13157    20
   356       |int             pthread_rwlock_wrlock(pthread_rwlock_t *);                                       | 13158    20
   357       |#pragma map (pthread_rwlockattr_init, "@@P3RAI")                                                 | 13159    20
   358       |int             pthread_rwlockattr_init(pthread_rwlockattr_t *);                                 | 13160    20
   359       |#if 0                                                                                            | 13161    20
   360       |#pragma map (pthread_rwlockattr_getpshared, "@@P3RAG")                                           | 13162    20
   361       |int             pthread_rwlockattr_getpshared(const pthread_rwlockattr_t *,                      | 13163    20
   362       |                        int *);                                                                  | 13164    20
   363       |#pragma map (pthread_rwlockattr_setpshared,  "@@P3RAS")                                          | 13165    20
   364       |int             pthread_rwlockattr_setpshared(pthread_rwlockattr_t *, int);                      | 13166    20
   365       |#endif                                                                                           | 13167    20
   366       |#pragma map (pthread_rwlockattr_destroy,     "@@P3RAD")                                          | 13168    20
   367       |int             pthread_rwlockattr_destroy(pthread_rwlockattr_t *);                              | 13169    20
   368       |#pragma map (pthread_self, "@@PT@S")                                                             | 13170    20
   369       |pthread_t       pthread_self(void);                                                              | 13171    20
   370       |#pragma map (pthread_setspecific, "@@PT3SS")                                                     | 13172    20
   371       |int             pthread_setspecific(pthread_key_t, const void *);                                | 13173    20
   372       |                                                                                                 | 13174    20
   373       |#pragma map(pthread_spin_init, "@@P3@SPI")                                                       | 13175    20
   374       |int             pthread_spin_init(pthread_spinlock_t *, int);                                    | 13176    20
   375       |#pragma map(pthread_spin_destroy, "@@P3@SPD")                                                    | 13177    20
   376       |int             pthread_spin_destroy(pthread_spinlock_t *);                                      | 13178    20
   377       |#pragma map(pthread_spin_lock, "@@P3@SPL")                                                       | 13179    20
   378       |int             pthread_spin_lock(pthread_spinlock_t *);                                         | 13180    20
   379       |#pragma map(pthread_spin_trylock, "@@P3@SPT")                                                    | 13181    20
   380       |int             pthread_spin_trylock(pthread_spinlock_t *);                                      | 13182    20
   381       |#pragma map(pthread_spin_unlock, "@@P3@SPU")                                                     | 13183    20
   382       |int             pthread_spin_unlock(pthread_spinlock_t *);                                       | 13184    20
   383       |                                                                                                 | 13185    20
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   263


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   384       |#pragma map (pthread_cancel, "@@PT3CAN")                                                         | 13186    20
   385       |int             pthread_cancel(pthread_t);                                                       | 13187    20
   386       |#pragma map (pthread_setcancelstate, "@@PT@SCS")                                                 | 13188    20
   387       |int             pthread_setcancelstate(int, int *);                                              | 13189    20
   388       |#pragma map (pthread_setcanceltype, "@@PT@SCT")                                                  | 13190    20
   389       |int             pthread_setcanceltype(int, int *);                                               | 13191    20
   390       |#pragma map (pthread_testcancel,           "@@PT@TC")                                            | 13192    20
   391       |void            pthread_testcancel(void);                                                        | 13193    20
   392       |#pragma map (pthread_yield,           "@PT@Y")                                                   | 13194    20
   393       |void            pthread_yield(void);                                                             | 13195    20
   394       |                                                                                                 | 13196    20
   395       |#if 0                                                                                            | 13197    20
   396       |int             pthread_getprio(pthread_t);                                                      | 13198    20
   397       |int             pthread_setprio(pthread_t, int);                                                 | 13199    20
   398       |                                                                                                 | 13200    20
   399       |int             pthread_mutexattr_getprioceiling(pthread_mutexattr_t *,                          | 13201    20
   400       |                        int *);                                                                  | 13202    20
   401       |int             pthread_mutexattr_setprioceiling(pthread_mutexattr_t *,                          | 13203    20
   402       |                        int);                                                                    | 13204    20
   403       |#endif                                                                                           | 13205    20
   404       |#pragma map(pthread_mutex_getprioceiling, "@@PT5GPC")                                            | 13206    20
   405       |int   pthread_mutex_getprioceiling(const pthread_mutex_t *__restrict,                            | 13207    20
   405       +int   pthread_mutex_getprioceiling(const pthread_mutex_t *__restrict__,                          + 13207    20
   406       |                        int *__restrict);                                                        | 13208    20
   406       +                                                int *__restrict__);                              + 13208    20
   407       |#pragma map(pthread_mutex_setprioceiling, "@@PT5SPC")                                            | 13209    20
   408       |int   pthread_mutex_setprioceiling(pthread_mutex_t *__restrict,                                  | 13210    20
   408       +int   pthread_mutex_setprioceiling(pthread_mutex_t *__restrict__,                                + 13210    20
   409       |                        int ceiling, int * __restrict);                                          | 13211    20
   409       +                                                int ceiling, int * __restrict__);                + 13211    20
   410       |                                                                                                 | 13212    20
   411       |#pragma map (pthread_attr_getinheritsched, "@@PT@GIS")                                           | 13213    20
   412       |int             pthread_attr_getinheritsched(const pthread_attr_t *, int *);                     | 13214    20
   413       |#pragma map (pthread_attr_getschedparam, "@@PT@GSP")                                             | 13215    20
   414       |int             pthread_attr_getschedparam(const pthread_attr_t *,                               | 13216    20
   415       |                        struct sched_param *);                                                   | 13217    20
   416       |#pragma map (pthread_attr_getschedpolicy, "@@PT@GSO")                                            | 13218    20
   417       |int             pthread_attr_getschedpolicy(const pthread_attr_t *, int *);                      | 13219    20
   418       |#pragma map (pthread_attr_getscope, "@@PT@GSC")                                                  | 13220    20
   419       |int             pthread_attr_getscope(const pthread_attr_t *, int *);                            | 13221    20
   420       |#pragma map (pthread_attr_setinheritsched, "@@PT@SIS")                                           | 13222    20
   421       |int             pthread_attr_setinheritsched(pthread_attr_t *, int);                             | 13223    20
   422       |#pragma map (pthread_attr_setschedparam, "@@PT@SSP")                                             | 13224    20
   423       |int             pthread_attr_setschedparam(pthread_attr_t *,                                     | 13225    20
   424       |                        const struct sched_param *);                                             | 13226    20
   425       |#pragma map (pthread_attr_setscope, "@@PT3ASC")                                                  | 13227    20
   426       |int             pthread_attr_setscope(pthread_attr_t *, int);                                    | 13228    20
   427       |#pragma map (pthread_attr_setschedpolicy, "@@PT3ASP")                                            | 13229    20
   428       |int             pthread_attr_setschedpolicy(pthread_attr_t *, int);                              | 13230    20
   429       |#if 0                                                                                            | 13231    20
   430       |int             pthread_getschedparam(pthread_t pthread, int *,                                  | 13232    20
   431       |                        struct sched_param *);                                                   | 13233    20
   432       |int             pthread_setschedparam(pthread_t, int,                                            | 13234    20
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   264


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   433       |                        const struct sched_param *);                                             | 13235    20
   434       |#endif                                                                                           | 13236    20
   435       |#pragma map (pthread_getconcurrency,       "@@PT@GC")                                            | 13237    20
   436       |int             pthread_getconcurrency(void);                                                    | 13238    20
   437       |#pragma map (pthread_setconcurrency,       "@@PT@SC")                                            | 13239    20
   438       |int             pthread_setconcurrency(int);                                                     | 13240    20
   439       |                                                                                                 | 13241    20
   440       |                                                                                                 | 13242    20
   441       |#pragma map (pthread_set_limit_np, "@@PT@STL")                                                   | 13243    20
   442       |int             pthread_set_limit_np(int, int, int);                                             | 13244    20
   443       |__END_DECLS                                                                                      | 13245    20
   443       +                                                                                                 + 13245    20
   444       |                                                                                                 | 13246    20
   445       |#endif                                                                                           | 13247    20
   101       |#elif defined(_TTHREAD_WIN32_)                                                                   | 13248    18
   102       |  #ifndef WIN32_LEAN_AND_MEAN                                                                    | 13249    18
   103       |    #define WIN32_LEAN_AND_MEAN                                                                  | 13250    18
   104       |    #define __UNDEF_LEAN_AND_MEAN                                                                | 13251    18
   105       |  #endif                                                                                         | 13252    18
   106       |  #include <windows.h>                                                                           | 13253    18
   107       |  #ifdef __UNDEF_LEAN_AND_MEAN                                                                   | 13254    18
   108       |    #undef WIN32_LEAN_AND_MEAN                                                                   | 13255    18
   109       |    #undef __UNDEF_LEAN_AND_MEAN                                                                 | 13256    18
   110       |  #endif                                                                                         | 13257    18
   111       |#endif                                                                                           | 13258    18
   112       |                                                                                                 | 13259    18
   113       |/* Compiler-specific information */                                                              | 13260    18
   114       |#if defined(__STDC_VERSION__) && __STDC_VERSION__ >= 201112L                                     | 13261    18
   115       |  #define TTHREAD_NORETURN _Noreturn                                                             | 13262    18
   116       |#elif defined(__GNUC__)                                                                          | 13263    18
   117       |  #define TTHREAD_NORETURN __attribute__((__noreturn__))                                         | 13264    18
   118       |#else                                                                                            | 13265    18
   119       |  #define TTHREAD_NORETURN                                                                       | 13266    18
   120       |#endif                                                                                           | 13267    18
   121       |                                                                                                 | 13268    18
   121       +                                                                                                 + 13268    18
   122       |/* If TIME_UTC is missing, provide it and provide a wrapper for                                  | 13269    18
   123       |   timespec_get. */                                                                              | 13270    18
   124       |#ifndef TIME_UTC                                                                                 | 13271    18
   125       |#define TIME_UTC 1                                                                               | 13272    18
   126       |#define _TTHREAD_EMULATE_TIMESPEC_GET_                                                           | 13273    18
   127       |                                                                                                 | 13274    18
   128       |#if defined(_TTHREAD_WIN32_)                                                                     | 13275    18
   129       |struct _tthread_timespec {                                                                       | 13276    18
   130       |  time_t tv_sec;                                                                                 | 13277    18
   131       |  long   tv_nsec;                                                                                | 13278    18
   132       |};                                                                                               | 13279    18
   133       |#define timespec _tthread_timespec                                                               | 13280    18
   134       |#endif                                                                                           | 13281    18
   135       |                                                                                                 | 13282    18
   136       |int _tthread_timespec_get(struct timespec *ts, int base);                                        | 13283    18
   137       |#define timespec_get _tthread_timespec_get                                                       | 13284    18
   138       |#endif                                                                                           | 13285    18
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   265


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   139       |                                                                                                 | 13286    18
   140       |/** TinyCThread version (major number). */                                                       | 13287    18
   141       |#define TINYCTHREAD_VERSION_MAJOR 1                                                              | 13288    18
   142       |/** TinyCThread version (minor number). */                                                       | 13289    18
   143       |#define TINYCTHREAD_VERSION_MINOR 2                                                              | 13290    18
   144       |/** TinyCThread version (full version). */                                                       | 13291    18
   145       |#define TINYCTHREAD_VERSION (TINYCTHREAD_VERSION_MAJOR * 100 + TINYCTHREAD_VERSION_MINOR)        | 13292    18
   146       |                                                                                                 | 13293    18
   147       |/**                                                                                              | 13294    18
   148       |* @def _Thread_local                                                                             | 13295    18
   149       |* Thread local storage keyword.                                                                  | 13296    18
   150       |* A variable that is declared with the @c _Thread_local keyword makes the                        | 13297    18
   151       |* value of the variable local to each thread (known as thread-local storage,                     | 13298    18
   152       |* or TLS). Example usage:                                                                        | 13299    18
   153       |* @code                                                                                          | 13300    18
   154       |* // This variable is local to each thread.                                                      | 13301    18
   155       |* _Thread_local int variable;                                                                    | 13302    18
   156       |* @endcode                                                                                       | 13303    18
   157       |* @note The @c _Thread_local keyword is a macro that maps to the corresponding                   | 13304    18
   158       |* compiler directive (e.g. @c __declspec(thread)).                                               | 13305    18
   159       |* @note This directive is currently not supported on Mac OS X (it will give                      | 13306    18
   160       |* a compiler error), since compile-time TLS is not supported in the Mac OS X                     | 13307    18
   161       |* executable format. Also, some older versions of MinGW (before GCC 4.x) do                      | 13308    18
   162       |* not support this directive, nor does the Tiny C Compiler.                                      | 13309    18
   163       |* @hideinitializer                                                                               | 13310    18
   164       |*/                                                                                               | 13311    18
   165       |                                                                                                 | 13312    18
   166       |#if !(defined(__STDC_VERSION__) && (__STDC_VERSION__ >= 201102L)) && !defined(_Thread_local)     | 13313    18
   167       | #if defined(__GNUC__) || defined(__INTEL_COMPILER) || defined(__SUNPRO_CC) || defined(__IBMCPP__| 13314    18
   167       +)                                                                                                + 13314    18
   168       |  #define _Thread_local __thread                                                                 | 13315    18
   169       | #else                                                                                           | 13316    18
   170       |  #define _Thread_local __declspec(thread)                                                       | 13317    18
   171       | #endif                                                                                          | 13318    18
   172       |#elif defined(__GNUC__) && defined(__GNUC_MINOR__) && (((__GNUC__ << 8) | __GNUC_MINOR__) < ((4 <| 13319    18
   172       +< 8) | 9))                                                                                       + 13319    18
   173       | #define _Thread_local __thread                                                                  | 13320    18
   174       |#endif                                                                                           | 13321    18
   175       |                                                                                                 | 13322    18
   175       +                                                                                                 + 13322    18
   176       |/* Macros */                                                                                     | 13323    18
   177       |#if defined(_TTHREAD_WIN32_)                                                                     | 13324    18
   178       |#define TSS_DTOR_ITERATIONS (4)                                                                  | 13325    18
   179       |#else                                                                                            | 13326    18
   180       |#define TSS_DTOR_ITERATIONS PTHREAD_DESTRUCTOR_ITERATIONS                                        | 13327    18
   181       |#endif                                                                                           | 13328    18
   182       |                                                                                                 | 13329    18
   183       |/* Function return values */                                                                     | 13330    18
   184       |/* Note: The values are unspecified by C11 but match glibc and musl to make                      | 13331    18
   185       | * sure they're compatible for the case where librdkafka was built with                          | 13332    18
   186       | * tinycthreads but the runtime libc also provides C11 threads.                                  | 13333    18
   187       | * The *BSD values are notably different. */                                                     | 13334    18
   188       |#define thrd_success  0 /**< The requested operation succeeded */                                | 13335    18
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   266


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   189       |#define thrd_busy     1 /**< The requested operation failed because a tesource requested by a tes| 13336    18
   189       +t and return function is already in use */                                                       + 13336    18
   190       |#define thrd_error    2 /**< The requested operation failed */                                   | 13337    18
   191       |#define thrd_nomem    3 /**< The requested operation failed because it was unable to allocate mem| 13338    18
   191       +ory */                                                                                           + 13338    18
   192       |#define thrd_timedout 4 /**< The time specified in the call was reached without acquiring the req| 13339    18
   192       +uested resource */                                                                               + 13339    18
   193       |                                                                                                 | 13340    18
   194       |/* Mutex types */                                                                                | 13341    18
   195       |#define mtx_plain     0                                                                          | 13342    18
   196       |#define mtx_recursive 1                                                                          | 13343    18
   197       |#define mtx_timed     2                                                                          | 13344    18
   198       |                                                                                                 | 13345    18
   199       |/* Mutex */                                                                                      | 13346    18
   200       |#if defined(_TTHREAD_WIN32_)                                                                     | 13347    18
   201       |typedef struct {                                                                                 | 13348    18
   202       |  union {                                                                                        | 13349    18
   203       |    CRITICAL_SECTION cs;      /* Critical section handle (used for non-timed mutexes) */         | 13350    18
   204       |    HANDLE mut;               /* Mutex handle (used for timed mutex) */                          | 13351    18
   205       |  } mHandle;                  /* Mutex handle */                                                 | 13352    18
   206       |  int mAlreadyLocked;         /* TRUE if the mutex is already locked */                          | 13353    18
   207       |  int mRecursive;             /* TRUE if the mutex is recursive */                               | 13354    18
   208       |  int mTimed;                 /* TRUE if the mutex is timed */                                   | 13355    18
   209       |} mtx_t;                                                                                         | 13356    18
   210       |#else                                                                                            | 13357    18
   211       |typedef pthread_mutex_t mtx_t;                                                                   | 13358    18
   212       |#endif                                                                                           | 13359    18
   213       |                                                                                                 | 13360    18
   214       |/** Create a mutex object.                                                                       | 13361    18
   215       |* @param mtx A mutex object.                                                                     | 13362    18
   216       |* @param type Bit-mask that must have one of the following six values:                           | 13363    18
   217       |*   @li @c mtx_plain for a simple non-recursive mutex                                            | 13364    18
   218       |*   @li @c mtx_timed for a non-recursive mutex that supports timeout                             | 13365    18
   219       |*   @li @c mtx_plain | @c mtx_recursive (same as @c mtx_plain, but recursive)                    | 13366    18
   220       |*   @li @c mtx_timed | @c mtx_recursive (same as @c mtx_timed, but recursive)                    | 13367    18
   221       |* @return @ref thrd_success on success, or @ref thrd_error if the request could                  | 13368    18
   222       |* not be honored.                                                                                | 13369    18
   223       |*/                                                                                               | 13370    18
   224       |int mtx_init(mtx_t *mtx, int type);                                                              | 13371    18
   225       |                                                                                                 | 13372    18
   226       |/** Release any resources used by the given mutex.                                               | 13373    18
   227       |* @param mtx A mutex object.                                                                     | 13374    18
   228       |*/                                                                                               | 13375    18
   229       |void mtx_destroy(mtx_t *mtx);                                                                    | 13376    18
   230       |                                                                                                 | 13377    18
   231       |/** Lock the given mutex.                                                                        | 13378    18
   232       |* Blocks until the given mutex can be locked. If the mutex is non-recursive, and                 | 13379    18
   233       |* the calling thread already has a lock on the mutex, this call will block                       | 13380    18
   234       |* forever.                                                                                       | 13381    18
   235       |* @param mtx A mutex object.                                                                     | 13382    18
   236       |* @return @ref thrd_success on success, or @ref thrd_error if the request could                  | 13383    18
   237       |* not be honored.                                                                                | 13384    18
   238       |*/                                                                                               | 13385    18
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   267


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   239       |int mtx_lock(mtx_t *mtx);                                                                        | 13386    18
   240       |                                                                                                 | 13387    18
   241       |/** NOT YET IMPLEMENTED.                                                                         | 13388    18
   242       |*/                                                                                               | 13389    18
   243       |int mtx_timedlock(mtx_t *mtx, const struct timespec *ts);                                        | 13390    18
   244       |                                                                                                 | 13391    18
   245       |/** Try to lock the given mutex.                                                                 | 13392    18
   246       |* The specified mutex shall support either test and return or timeout. If the                    | 13393    18
   247       |* mutex is already locked, the function returns without blocking.                                | 13394    18
   248       |* @param mtx A mutex object.                                                                     | 13395    18
   249       |* @return @ref thrd_success on success, or @ref thrd_busy if the resource                        | 13396    18
   250       |* requested is already in use, or @ref thrd_error if the request could not be                    | 13397    18
   251       |* honored.                                                                                       | 13398    18
   252       |*/                                                                                               | 13399    18
   253       |int mtx_trylock(mtx_t *mtx);                                                                     | 13400    18
   254       |                                                                                                 | 13401    18
   255       |/** Unlock the given mutex.                                                                      | 13402    18
   256       |* @param mtx A mutex object.                                                                     | 13403    18
   257       |* @return @ref thrd_success on success, or @ref thrd_error if the request could                  | 13404    18
   258       |* not be honored.                                                                                | 13405    18
   259       |*/                                                                                               | 13406    18
   260       |int mtx_unlock(mtx_t *mtx);                                                                      | 13407    18
   261       |                                                                                                 | 13408    18
   262       |/* Condition variable */                                                                         | 13409    18
   263       |#if defined(_TTHREAD_WIN32_)                                                                     | 13410    18
   264       |typedef struct {                                                                                 | 13411    18
   265       |  HANDLE mEvents[2];                  /* Signal and broadcast event HANDLEs. */                  | 13412    18
   266       |  unsigned int mWaitersCount;         /* Count of the number of waiters. */                      | 13413    18
   267       |  CRITICAL_SECTION mWaitersCountLock; /* Serialize access to mWaitersCount. */                   | 13414    18
   268       |} cnd_t;                                                                                         | 13415    18
   269       |#else                                                                                            | 13416    18
   270       |typedef pthread_cond_t cnd_t;                                                                    | 13417    18
   271       |#endif                                                                                           | 13418    18
   272       |                                                                                                 | 13419    18
   273       |/** Create a condition variable object.                                                          | 13420    18
   274       |* @param cond A condition variable object.                                                       | 13421    18
   275       |* @return @ref thrd_success on success, or @ref thrd_error if the request could                  | 13422    18
   276       |* not be honored.                                                                                | 13423    18
   277       |*/                                                                                               | 13424    18
   278       |int cnd_init(cnd_t *cond);                                                                       | 13425    18
   279       |                                                                                                 | 13426    18
   280       |/** Release any resources used by the given condition variable.                                  | 13427    18
   281       |* @param cond A condition variable object.                                                       | 13428    18
   282       |*/                                                                                               | 13429    18
   283       |void cnd_destroy(cnd_t *cond);                                                                   | 13430    18
   284       |                                                                                                 | 13431    18
   285       |/** Signal a condition variable.                                                                 | 13432    18
   286       |* Unblocks one of the threads that are blocked on the given condition variable                   | 13433    18
   287       |* at the time of the call. If no threads are blocked on the condition variable                   | 13434    18
   288       |* at the time of the call, the function does nothing and return success.                         | 13435    18
   289       |* @param cond A condition variable object.                                                       | 13436    18
   290       |* @return @ref thrd_success on success, or @ref thrd_error if the request could                  | 13437    18
   291       |* not be honored.                                                                                | 13438    18
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   268


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   292       |*/                                                                                               | 13439    18
   293       |int cnd_signal(cnd_t *cond);                                                                     | 13440    18
   294       |                                                                                                 | 13441    18
   295       |/** Broadcast a condition variable.                                                              | 13442    18
   296       |* Unblocks all of the threads that are blocked on the given condition variable                   | 13443    18
   297       |* at the time of the call. If no threads are blocked on the condition variable                   | 13444    18
   298       |* at the time of the call, the function does nothing and return success.                         | 13445    18
   299       |* @param cond A condition variable object.                                                       | 13446    18
   300       |* @return @ref thrd_success on success, or @ref thrd_error if the request could                  | 13447    18
   301       |* not be honored.                                                                                | 13448    18
   302       |*/                                                                                               | 13449    18
   303       |int cnd_broadcast(cnd_t *cond);                                                                  | 13450    18
   304       |                                                                                                 | 13451    18
   305       |/** Wait for a condition variable to become signaled.                                            | 13452    18
   306       |* The function atomically unlocks the given mutex and endeavors to block until                   | 13453    18
   307       |* the given condition variable is signaled by a call to cnd_signal or to                         | 13454    18
   308       |* cnd_broadcast. When the calling thread becomes unblocked it locks the mutex                    | 13455    18
   309       |* before it returns.                                                                             | 13456    18
   310       |* @param cond A condition variable object.                                                       | 13457    18
   311       |* @param mtx A mutex object.                                                                     | 13458    18
   312       |* @return @ref thrd_success on success, or @ref thrd_error if the request could                  | 13459    18
   313       |* not be honored.                                                                                | 13460    18
   314       |*/                                                                                               | 13461    18
   315       |int cnd_wait(cnd_t *cond, mtx_t *mtx);                                                           | 13462    18
   316       |                                                                                                 | 13463    18
   317       |/** Wait for a condition variable to become signaled.                                            | 13464    18
   318       |* The function atomically unlocks the given mutex and endeavors to block until                   | 13465    18
   319       |* the given condition variable is signaled by a call to cnd_signal or to                         | 13466    18
   320       |* cnd_broadcast, or until after the specified time. When the calling thread                      | 13467    18
   321       |* becomes unblocked it locks the mutex before it returns.                                        | 13468    18
   322       |* @param cond A condition variable object.                                                       | 13469    18
   323       |* @param mtx A mutex object.                                                                     | 13470    18
   324       |* @param xt A point in time at which the request will time out (absolute time).                  | 13471    18
   325       |* @return @ref thrd_success upon success, or @ref thrd_timeout if the time                       | 13472    18
   326       |* specified in the call was reached without acquiring the requested resource, or                 | 13473    18
   327       |* @ref thrd_error if the request could not be honored.                                           | 13474    18
   328       |*/                                                                                               | 13475    18
   329       |int cnd_timedwait(cnd_t *cond, mtx_t *mtx, const struct timespec *ts);                           | 13476    18
   330       |                                                                                                 | 13477    18
   331       |#if defined(_TTHREAD_WIN32_)                                                                     | 13478    18
   332       |int _cnd_timedwait_win32(cnd_t *cond, mtx_t *mtx, DWORD timeout);                                | 13479    18
   333       |#endif                                                                                           | 13480    18
   334       |                                                                                                 | 13481    18
   335       |/* Thread */                                                                                     | 13482    18
   336       |#if defined(_TTHREAD_WIN32_)                                                                     | 13483    18
   337       |typedef HANDLE thrd_t;                                                                           | 13484    18
   338       |#else                                                                                            | 13485    18
   339       |typedef pthread_t thrd_t;                                                                        | 13486    18
   340       |#endif                                                                                           | 13487    18
   341       |                                                                                                 | 13488    18
   342       |/** Thread start function.                                                                       | 13489    18
   343       |* Any thread that is started with the @ref thrd_create() function must be                        | 13490    18
   344       |* started through a function of this type.                                                       | 13491    18
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   269


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   345       |* @param arg The thread argument (the @c arg argument of the corresponding                       | 13492    18
   346       |*        @ref thrd_create() call).                                                               | 13493    18
   347       |* @return The thread return value, which can be obtained by another thread                       | 13494    18
   348       |* by using the @ref thrd_join() function.                                                        | 13495    18
   349       |*/                                                                                               | 13496    18
   350       |typedef int (*thrd_start_t)(void *arg);                                                          | 13497    18
   351       |                                                                                                 | 13498    18
   352       |/** Create a new thread.                                                                         | 13499    18
   353       |* @param thr Identifier of the newly created thread.                                             | 13500    18
   354       |* @param func A function pointer to the function that will be executed in                        | 13501    18
   355       |*        the new thread.                                                                         | 13502    18
   356       |* @param arg An argument to the thread function.                                                 | 13503    18
   357       |* @return @ref thrd_success on success, or @ref thrd_nomem if no memory could                    | 13504    18
   358       |* be allocated for the thread requested, or @ref thrd_error if the request                       | 13505    18
   359       |* could not be honored.                                                                          | 13506    18
   360       |* @note A threadâs identifier may be reused for a different thread once the                    | 13507    18
   361       |* original thread has exited and either been detached or joined to another                       | 13508    18
   362       |* thread.                                                                                        | 13509    18
   363       |*/                                                                                               | 13510    18
   364       |int thrd_create(thrd_t *thr, thrd_start_t func, void *arg);                                      | 13511    18
   365       |                                                                                                 | 13512    18
   366       |/** Identify the calling thread.                                                                 | 13513    18
   367       |* @return The identifier of the calling thread.                                                  | 13514    18
   368       |*/                                                                                               | 13515    18
   369       |thrd_t thrd_current(void);                                                                       | 13516    18
   370       |                                                                                                 | 13517    18
   371       |                                                                                                 | 13518    18
   372       |/** Dispose of any resources allocated to the thread when that thread exits.                     | 13519    18
   373       | * @return thrd_success, or thrd_error on error                                                  | 13520    18
   374       |*/                                                                                               | 13521    18
   375       |int thrd_detach(thrd_t thr);                                                                     | 13522    18
   376       |                                                                                                 | 13523    18
   377       |/** Compare two thread identifiers.                                                              | 13524    18
   378       |* The function determines if two thread identifiers refer to the same thread.                    | 13525    18
   379       |* @return Zero if the two thread identifiers refer to different threads.                         | 13526    18
   380       |* Otherwise a nonzero value is returned.                                                         | 13527    18
   381       |*/                                                                                               | 13528    18
   382       |int thrd_equal(thrd_t thr0, thrd_t thr1);                                                        | 13529    18
   383       |                                                                                                 | 13530    18
   384       |/** Terminate execution of the calling thread.                                                   | 13531    18
   385       |* @param res Result code of the calling thread.                                                  | 13532    18
   386       |*/                                                                                               | 13533    18
   387       |TTHREAD_NORETURN void thrd_exit(int res);                                                        | 13534    18
   387       + void thrd_exit(int res);                                                                        + 13534    18
   388       |                                                                                                 | 13535    18
   389       |/** Wait for a thread to terminate.                                                              | 13536    18
   390       |* The function joins the given thread with the current thread by blocking                        | 13537    18
   391       |* until the other thread has terminated.                                                         | 13538    18
   392       |* @param thr The thread to join with.                                                            | 13539    18
   393       |* @param res If this pointer is not NULL, the function will store the result                     | 13540    18
   394       |*        code of the given thread in the integer pointed to by @c res.                           | 13541    18
   395       |* @return @ref thrd_success on success, or @ref thrd_error if the request could                  | 13542    18
   396       |* not be honored.                                                                                | 13543    18
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   270


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   397       |*/                                                                                               | 13544    18
   398       |int thrd_join(thrd_t thr, int *res);                                                             | 13545    18
   399       |                                                                                                 | 13546    18
   400       |/** Put the calling thread to sleep.                                                             | 13547    18
   401       |* Suspend execution of the calling thread.                                                       | 13548    18
   402       |* @param duration  Interval to sleep for                                                         | 13549    18
   403       |* @param remaining If non-NULL, this parameter will hold the remaining                           | 13550    18
   404       |*                  time until time_point upon return. This will                                  | 13551    18
   405       |*                  typically be zero, but if the thread was woken up                             | 13552    18
   406       |*                  by a signal that is not ignored before duration was                           | 13553    18
   407       |*                  reached @c remaining will hold a positive time.                               | 13554    18
   408       |* @return 0 (zero) on successful sleep, -1 if an interrupt occurred,                             | 13555    18
   409       |*         or a negative value if the operation fails.                                            | 13556    18
   410       |*/                                                                                               | 13557    18
   411       |int thrd_sleep(const struct timespec *duration, struct timespec *remaining);                     | 13558    18
   412       |                                                                                                 | 13559    18
   413       |/** Yield execution to another thread.                                                           | 13560    18
   414       |* Permit other threads to run, even if the current thread would ordinarily                       | 13561    18
   415       |* continue to run.                                                                               | 13562    18
   416       |*/                                                                                               | 13563    18
   417       |void thrd_yield(void);                                                                           | 13564    18
   418       |                                                                                                 | 13565    18
   419       |/* Thread local storage */                                                                       | 13566    18
   420       |#if defined(_TTHREAD_WIN32_)                                                                     | 13567    18
   421       |typedef DWORD tss_t;                                                                             | 13568    18
   422       |#else                                                                                            | 13569    18
   423       |typedef pthread_key_t tss_t;                                                                     | 13570    18
   424       |#endif                                                                                           | 13571    18
   425       |                                                                                                 | 13572    18
   426       |/** Destructor function for a thread-specific storage.                                           | 13573    18
   427       |* @param val The value of the destructed thread-specific storage.                                | 13574    18
   428       |*/                                                                                               | 13575    18
   429       |typedef void (*tss_dtor_t)(void *val);                                                           | 13576    18
   430       |                                                                                                 | 13577    18
   431       |/** Create a thread-specific storage.                                                            | 13578    18
   432       |* @param key The unique key identifier that will be set if the function is                       | 13579    18
   433       |*        successful.                                                                             | 13580    18
   434       |* @param dtor Destructor function. This can be NULL.                                             | 13581    18
   435       |* @return @ref thrd_success on success, or @ref thrd_error if the request could                  | 13582    18
   436       |* not be honored.                                                                                | 13583    18
   437       |* @note On Windows, the @c dtor will definitely be called when                                   | 13584    18
   438       |* appropriate for threads created with @ref thrd_create.  It will be                             | 13585    18
   439       |* called for other threads in most cases, the possible exception being                           | 13586    18
   440       |* for DLLs loaded with LoadLibraryEx.  In order to be certain, you                               | 13587    18
   441       |* should use @ref thrd_create whenever possible.                                                 | 13588    18
   442       |*/                                                                                               | 13589    18
   443       |int tss_create(tss_t *key, tss_dtor_t dtor);                                                     | 13590    18
   444       |                                                                                                 | 13591    18
   445       |/** Delete a thread-specific storage.                                                            | 13592    18
   446       |* The function releases any resources used by the given thread-specific                          | 13593    18
   447       |* storage.                                                                                       | 13594    18
   448       |* @param key The key that shall be deleted.                                                      | 13595    18
   449       |*/                                                                                               | 13596    18
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   271


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   450       |void tss_delete(tss_t key);                                                                      | 13597    18
   451       |                                                                                                 | 13598    18
   452       |/** Get the value for a thread-specific storage.                                                 | 13599    18
   453       |* @param key The thread-specific storage identifier.                                             | 13600    18
   454       |* @return The value for the current thread held in the given thread-specific                     | 13601    18
   455       |* storage.                                                                                       | 13602    18
   456       |*/                                                                                               | 13603    18
   457       |void *tss_get(tss_t key);                                                                        | 13604    18
   458       |                                                                                                 | 13605    18
   459       |/** Set the value for a thread-specific storage.                                                 | 13606    18
   460       |* @param key The thread-specific storage identifier.                                             | 13607    18
   461       |* @param val The value of the thread-specific storage to set for the current                     | 13608    18
   462       |*        thread.                                                                                 | 13609    18
   463       |* @return @ref thrd_success on success, or @ref thrd_error if the request could                  | 13610    18
   464       |* not be honored.                                                                                | 13611    18
   465       |*/                                                                                               | 13612    18
   466       |int tss_set(tss_t key, void *val);                                                               | 13613    18
   467       |                                                                                                 | 13614    18
   468       |#if defined(_TTHREAD_WIN32_)                                                                     | 13615    18
   469       |  typedef struct {                                                                               | 13616    18
   470       |    LONG volatile status;                                                                        | 13617    18
   471       |    CRITICAL_SECTION lock;                                                                       | 13618    18
   472       |  } once_flag;                                                                                   | 13619    18
   473       |  #define ONCE_FLAG_INIT {0,}                                                                    | 13620    18
   474       |#else                                                                                            | 13621    18
   475       |  #define once_flag pthread_once_t                                                               | 13622    18
   476       |  #define ONCE_FLAG_INIT PTHREAD_ONCE_INIT                                                       | 13623    18
   477       |#endif                                                                                           | 13624    18
   478       |                                                                                                 | 13625    18
   479       |/** Invoke a callback exactly once                                                               | 13626    18
   480       | * @param flag Flag used to ensure the callback is invoked exactly                               | 13627    18
   481       | *        once.                                                                                  | 13628    18
   482       | * @param func Callback to invoke.                                                               | 13629    18
   483       | */                                                                                              | 13630    18
   484       |#if defined(_TTHREAD_WIN32_)                                                                     | 13631    18
   485       |  void call_once(once_flag *flag, void (*func)(void));                                           | 13632    18
   486       |#else                                                                                            | 13633    18
   487       |  #define call_once(flag,func) pthread_once(flag,func)                                           | 13634    18
   488       |#endif                                                                                           | 13635    18
   489       |                                                                                                 | 13636    18
   490       |                                                                                                 | 13637    18
   491       |                                                                                                 | 13638    18
   492       |#ifdef __cplusplus                                                                               | 13639    18
   493       |}                                                                                                | 13640    18
   494       |#endif                                                                                           | 13641    18
   495       |                                                                                                 | 13642    18
   496       |#endif /* !WITH_C11THREADS */                                                                    | 13643    18
   497       |                                                                                                 | 13644    18
   498       |/**                                                                                              | 13645    18
   499       | * @brief librdkafka extensions to c11threads                                                    | 13646    18
   500       | */                                                                                              | 13647    18
   501       |#include "tinycthread_extra.h"                                                                   | 13648    18
     1       |/*                                                                                               | 13649    29
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   272


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
     2       | * librdkafka - Apache Kafka C library                                                           | 13650    29
     3       | *                                                                                               | 13651    29
     4       | * Copyright (c) 2018 Magnus Edenhill                                                            | 13652    29
     5       | * All rights reserved.                                                                          | 13653    29
     6       | *                                                                                               | 13654    29
     7       | * Redistribution and use in source and binary forms, with or without                            | 13655    29
     8       | * modification, are permitted provided that the following conditions are met:                   | 13656    29
     9       | *                                                                                               | 13657    29
    10       | * 1. Redistributions of source code must retain the above copyright notice,                     | 13658    29
    11       | *    this list of conditions and the following disclaimer.                                      | 13659    29
    12       | * 2. Redistributions in binary form must reproduce the above copyright notice,                  | 13660    29
    13       | *    this list of conditions and the following disclaimer in the documentation                  | 13661    29
    14       | *    and/or other materials provided with the distribution.                                     | 13662    29
    15       | *                                                                                               | 13663    29
    16       | * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"                   | 13664    29
    17       | * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE                     | 13665    29
    18       | * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE                    | 13666    29
    19       | * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE                      | 13667    29
    20       | * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR                           | 13668    29
    21       | * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF                          | 13669    29
    22       | * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS                      | 13670    29
    23       | * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN                       | 13671    29
    24       | * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)                       | 13672    29
    25       | * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE                    | 13673    29
    26       | * POSSIBILITY OF SUCH DAMAGE.                                                                   | 13674    29
    27       | */                                                                                              | 13675    29
    28       |                                                                                                 | 13676    29
    29       |                                                                                                 | 13677    29
    30       |/**                                                                                              | 13678    29
    31       | * @brief Extra methods added to tinychtread/c11threads                                          | 13679    29
    32       | */                                                                                              | 13680    29
    33       |                                                                                                 | 13681    29
    34       |                                                                                                 | 13682    29
    35       |#ifndef _TINYCTHREAD_EXTRA_H_                                                                    | 13683    29
    36       |#define _TINYCTHREAD_EXTRA_H_                                                                    | 13684    29
    37       |                                                                                                 | 13685    29
    38       |                                                                                                 | 13686    29
    39       |#ifndef _WIN32                                                                                   | 13687    29
    40       |#include <pthread.h> /* needed for rwlock_t */                                                   | 13688    29
    41       |#endif                                                                                           | 13689    29
    42       |                                                                                                 | 13690    29
    43       |                                                                                                 | 13691    29
    44       |/**                                                                                              | 13692    29
    45       | * @brief Set thread system name if platform supports it (pthreads)                              | 13693    29
    46       | * @return thrd_success or thrd_error                                                            | 13694    29
    47       | */                                                                                              | 13695    29
    48       |int thrd_setname (const char *name);                                                             | 13696    29
    49       |                                                                                                 | 13697    29
    50       |/**                                                                                              | 13698    29
    51       | * @brief Checks if passed thread is the current thread.                                         | 13699    29
    52       | * @return non-zero if same thread, else 0.                                                      | 13700    29
    53       | */                                                                                              | 13701    29
    54       |int thrd_is_current(thrd_t thr);                                                                 | 13702    29
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   273


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    55       |                                                                                                 | 13703    29
    56       |                                                                                                 | 13704    29
    57       |                                                                                                 | 13705    29
    58       |                                                                                                 | 13706    29
    59       |/**                                                                                              | 13707    29
    60       | * @brief Same as cnd_timedwait() but takes a relative timeout in milliseconds.                  | 13708    29
    61       | */                                                                                              | 13709    29
    62       |int cnd_timedwait_ms(cnd_t *cnd, mtx_t *mtx, int timeout_ms);                                    | 13710    29
    63       |                                                                                                 | 13711    29
    64       |/**                                                                                              | 13712    29
    65       | * @brief Same as cnd_timedwait_ms() but updates the remaining time.                             | 13713    29
    66       |*/                                                                                               | 13714    29
    67       |int cnd_timedwait_msp (cnd_t *cnd, mtx_t *mtx, int *timeout_msp);                                | 13715    29
    68       |                                                                                                 | 13716    29
    69       |/**                                                                                              | 13717    29
    70       | * @brief Same as cnd_timedwait() but honours                                                    | 13718    29
    71       | *        RD_POLL_INFINITE (uses cnd_wait()),                                                    | 13719    29
    72       | *        and RD_POLL_NOWAIT (return thrd_timedout immediately).                                 | 13720    29
    73       | *                                                                                               | 13721    29
    74       | *  @remark Set up \p tspec with rd_timeout_init_timespec().                                     | 13722    29
    75       | */                                                                                              | 13723    29
    76       |int cnd_timedwait_abs (cnd_t *cnd, mtx_t *mtx, const struct timespec *tspec);                    | 13724    29
    77       |                                                                                                 | 13725    29
    78       |                                                                                                 | 13726    29
    79       |                                                                                                 | 13727    29
    80       |                                                                                                 | 13728    29
    81       |/**                                                                                              | 13729    29
    82       | * @brief Read-write locks                                                                       | 13730    29
    83       | */                                                                                              | 13731    29
    84       |                                                                                                 | 13732    29
    85       |#if defined(_TTHREAD_WIN32_)                                                                     | 13733    29
    86       |typedef struct rwlock_t {                                                                        | 13734    29
    87       |        SRWLOCK  lock;                                                                           | 13735    29
    88       |        LONG     rcnt;                                                                           | 13736    29
    89       |        LONG     wcnt;                                                                           | 13737    29
    90       |} rwlock_t;                                                                                      | 13738    29
    91       |#define rwlock_init(rwl)    do { (rwl)->rcnt = (rwl)->wcnt = 0; InitializeSRWLock(&(rwl)->lock); | 13739    29
    91       +} while (0)                                                                                      + 13739    29
    92       |#define rwlock_destroy(rwl)                                                                      | 13740    29
    93       |#define rwlock_rdlock(rwl)   do { if (0) printf("Thr %i: at %i:   RDLOCK %p   %s (%i, %i)\n", Get| 13741    29
    93       +CurrentThreadId(), __LINE__, rwl, __FUNCTION__, (rwl)->rcnt, (rwl)->wcnt); assert((rwl)->rcnt >= + 13741    29
    93       +0 && (rwl)->wcnt >= 0); AcquireSRWLockShared(&(rwl)->lock); InterlockedIncrement(&(rwl)->rcnt); }+ 13741    29
    93       + while (0)                                                                                       + 13741    29
    94       |#define rwlock_wrlock(rwl)   do { if (0) printf("Thr %i: at %i:   WRLOCK %p   %s (%i, %i)\n", Get| 13742    29
    94       +CurrentThreadId(), __LINE__, rwl, __FUNCTION__, (rwl)->rcnt, (rwl)->wcnt); assert((rwl)->rcnt >= + 13742    29
    94       +0 && (rwl)->wcnt >= 0); AcquireSRWLockExclusive(&(rwl)->lock); InterlockedIncrement(&(rwl)->wcnt)+ 13742    29
    94       +; } while (0)                                                                                    + 13742    29
    95       |#define rwlock_rdunlock(rwl) do { if (0) printf("Thr %i: at %i: RDUNLOCK %p   %s (%i, %i)\n", Get| 13743    29
    95       +CurrentThreadId(), __LINE__, rwl, __FUNCTION__, (rwl)->rcnt, (rwl)->wcnt); assert((rwl)->rcnt > 0+ 13743    29
    95       + && (rwl)->wcnt >= 0); ReleaseSRWLockShared(&(rwl)->lock); InterlockedDecrement(&(rwl)->rcnt); } + 13743    29
    95       +while (0)                                                                                        + 13743    29
    96       |#define rwlock_wrunlock(rwl) do { if (0) printf("Thr %i: at %i: RWUNLOCK %p   %s (%i, %i)\n", Get| 13744    29
    96       +CurrentThreadId(), __LINE__, rwl, __FUNCTION__, (rwl)->rcnt, (rwl)->wcnt); assert((rwl)->rcnt >= + 13744    29
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   274


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    96       +0 && (rwl)->wcnt > 0); ReleaseSRWLockExclusive(&(rwl)->lock); InterlockedDecrement(&(rwl)->wcnt);+ 13744    29
    96       + } while (0)                                                                                     + 13744    29
    97       |                                                                                                 | 13745    29
    98       |#define rwlock_rdlock_d(rwl)   do { if (1) printf("Thr %i: at %i:   RDLOCK %p   %s (%i, %i)\n", G| 13746    29
    98       +etCurrentThreadId(), __LINE__, rwl, __FUNCTION__, (rwl)->rcnt, (rwl)->wcnt); assert((rwl)->rcnt >+ 13746    29
    98       += 0 && (rwl)->wcnt >= 0); AcquireSRWLockShared(&(rwl)->lock); InterlockedIncrement(&(rwl)->rcnt);+ 13746    29
    98       + } while (0)                                                                                     + 13746    29
    99       |#define rwlock_wrlock_d(rwl)   do { if (1) printf("Thr %i: at %i:   WRLOCK %p   %s (%i, %i)\n", G| 13747    29
    99       +etCurrentThreadId(), __LINE__, rwl, __FUNCTION__, (rwl)->rcnt, (rwl)->wcnt); assert((rwl)->rcnt >+ 13747    29
    99       += 0 && (rwl)->wcnt >= 0); AcquireSRWLockExclusive(&(rwl)->lock); InterlockedIncrement(&(rwl)->wcn+ 13747    29
    99       +t); } while (0)                                                                                  + 13747    29
   100       |#define rwlock_rdunlock_d(rwl) do { if (1) printf("Thr %i: at %i: RDUNLOCK %p   %s (%i, %i)\n", G| 13748    29
   100       +etCurrentThreadId(), __LINE__, rwl, __FUNCTION__, (rwl)->rcnt, (rwl)->wcnt); assert((rwl)->rcnt >+ 13748    29
   100       + 0 && (rwl)->wcnt >= 0); ReleaseSRWLockShared(&(rwl)->lock); InterlockedDecrement(&(rwl)->rcnt); + 13748    29
   100       +} while (0)                                                                                      + 13748    29
   101       |#define rwlock_wrunlock_d(rwl) do { if (1) printf("Thr %i: at %i: RWUNLOCK %p   %s (%i, %i)\n", G| 13749    29
   101       +etCurrentThreadId(), __LINE__, rwl, __FUNCTION__, (rwl)->rcnt, (rwl)->wcnt); assert((rwl)->rcnt >+ 13749    29
   101       += 0 && (rwl)->wcnt > 0); ReleaseSRWLockExclusive(&(rwl)->lock); InterlockedDecrement(&(rwl)->wcnt+ 13749    29
   101       +); } while (0)                                                                                   + 13749    29
   102       |                                                                                                 | 13750    29
   103       |                                                                                                 | 13751    29
   104       |#else                                                                                            | 13752    29
   105       |typedef pthread_rwlock_t rwlock_t;                                                               | 13753    29
   106       |                                                                                                 | 13754    29
   107       |int rwlock_init (rwlock_t *rwl);                                                                 | 13755    29
   108       |int rwlock_destroy (rwlock_t *rwl);                                                              | 13756    29
   109       |int rwlock_rdlock (rwlock_t *rwl);                                                               | 13757    29
   110       |int rwlock_wrlock (rwlock_t *rwl);                                                               | 13758    29
   111       |int rwlock_rdunlock (rwlock_t *rwl);                                                             | 13759    29
   112       |int rwlock_wrunlock (rwlock_t *rwl);                                                             | 13760    29
   113       |                                                                                                 | 13761    29
   114       |#endif                                                                                           | 13762    29
   115       |                                                                                                 | 13763    29
   116       |                                                                                                 | 13764    29
   117       |#endif /* _TINYCTHREAD_EXTRA_H_ */                                                               | 13765    29
   502       |                                                                                                 | 13766    18
   503       |#endif /* _TINYTHREAD_H_ */                                                                      | 13767    18
    42       |                                                                                                 | 13768     1
    43       |#ifdef SYSC                             /* ASG_LK01: SYSTEM-C */                                 | 13769     1
    44       |#include <pthread.h>                                                                             | 13770     1
    45       |#endif                                  /* ASG_LK01: SYSTEM-C */                                 | 13771     1
    46       |                                                                                                 | 13772     1
    47       |typedef struct {                                                                                 | 13773     1
    48       |        int32_t val;                                                                             | 13774     1
    49       |#ifdef SYSC                             /* ASG_LK01: SYSTEM-C */                                 | 13775     1
    50       |        mtx_t lock;                     /* ASG_LK01: SYSTEM-C */                                 | 13776     1
    51       |#else                                   /* ASG_LK01: SYSTEM-C */                                 | 13777     1
    52       |#if !defined(_WIN32) && !HAVE_ATOMICS_32                                                         | 13778     1
    53       |        mtx_t lock;                                                                              | 13779     1
    54       |#endif                                                                                           | 13780     1
    55       |#endif                                  /* ASG_LK01: SYSTEM-C */                                 | 13781     1
    56       |} rd_atomic32_t;                                                                                 | 13782     1
    57       |                                                                                                 | 13783     1
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   275


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
    58       |typedef struct {                                                                                 | 13784     1
    59       |        int64_t val;                                                                             | 13785     1
    60       |#ifdef SYSC                             /* ASG_LK01: SYSTEM-C */                                 | 13786     1
    61       |        mtx_t lock;                     /* ASG_LK01: SYSTEM-C */                                 | 13787     1
    62       |#else                                   /* ASG_LK01: SYSTEM-C */                                 | 13788     1
    63       |#if !defined(_WIN32) && !HAVE_ATOMICS_64                                                         | 13789     1
    64       |        mtx_t lock;                                                                              | 13790     1
    65       |#endif                                                                                           | 13791     1
    66       |#endif                                  /* ASG_LK01: SYSTEM-C */                                 | 13792     1
    67       |} rd_atomic64_t;                                                                                 | 13793     1
    68       |                                                                                                 | 13794     1
    69       |                                                                                                 | 13795     1
    70       |static RD_INLINE RD_UNUSED void rd_atomic32_init (rd_atomic32_t *ra, int32_t v) {                | 13796     1
*=Warning===> cc: #2163 explicit type is missing, (int) is assumed
*=Error===> cc: #2100 syntax error: expected semicolon after declaration
*=Warning===> cc: #2163 explicit type is missing, (int) is assumed
*=Error===> cc: #2100 syntax error: expected semicolon after declaration
    71       |        ra->val = v;                                                                             | 13797     1
    72       |#ifdef SYSC                             /* ASG_LK01: SYSTEM-C */                                 | 13798     1
    73       |        pthread_mutex_init(&ra->lock, mtx_plain);               /* ASG_LK01: SYSTEM-C */         | 13799     1
    73       +                pthread_mutex_init(&ra->lock, 0);                                                + 13799     1
    74       |#else                                   /* ASG_LK01: SYSTEM-C */                                 | 13800     1
    75       |#if !defined(_WIN32) && !HAVE_ATOMICS_32                                                         | 13801     1
    76       |        mtx_init(&ra->lock, mtx_plain);                                                          | 13802     1
    77       |#endif                                                                                           | 13803     1
    78       |#endif                                  /* ASG_LK01: SYSTEM-C */                                 | 13804     1
    79       |}                                                                                                | 13805     1
    80       |                                                                                                 | 13806     1
    81       |                                                                                                 | 13807     1
    82       |static RD_INLINE int32_t RD_UNUSED rd_atomic32_add (rd_atomic32_t *ra, int32_t v) {              | 13808     1
*=Warning===> cc: #2163 explicit type is missing, (int) is assumed
*=Error===> cc: #2100 syntax error: expected semicolon after declaration
*=Error===> cc: #2100 syntax error: expected semicolon after declaration
*=Warning===> cc: #2163 explicit type is missing, (int) is assumed
    83       |#ifdef SYSC                                                             /* ASG_LK01: SYSTEM-C */ | 13809     1
    84       |        int32_t r;                                                      /* ASG_LK01: SYSTEM-C */ | 13810     1
    85       |        pthread_mutex_lock(&ra->lock);          /* ASG_LK01: SYSTEM-C */                         | 13811     1
    86       |        ra->val += v;                                           /* ASG_LK01: SYSTEM-C */         | 13812     1
    87       |        r = ra->val;                                            /* ASG_LK01: SYSTEM-C */         | 13813     1
    88       |        pthread_mutex_unlock(&ra->lock);        /* ASG_LK01: SYSTEM-C */                         | 13814     1
    89       |        return r;                                                       /* ASG_LK01: SYSTEM-C */ | 13815     1
    90       |#endif                                                                  /* ASG_LK01: SYSTEM-C */ | 13816     1
    91       |#ifdef __SUNPRO_C                                                                                | 13817     1
    92       |        return atomic_add_32_nv(&ra->val, v);                                                    | 13818     1
    93       |#elif defined(_WIN32)                                                                            | 13819     1
    94       |        return InterlockedAdd((LONG *)&ra->val, v);                                              | 13820     1
    95       |#elif !HAVE_ATOMICS_32                                                                           | 13821     1
    96       |        int32_t r;                                                                               | 13822     1
    97       |        mtx_lock(&ra->lock);                                                                     | 13823     1
    98       |        ra->val += v;                                                                            | 13824     1
    99       |        r = ra->val;                                                                             | 13825     1
   100       |        mtx_unlock(&ra->lock);                                                                   | 13826     1
   101       |        return r;                                                                                | 13827     1
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   276


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   102       |#else                                                                                            | 13828     1
   103       |        return ATOMIC_OP32(add, fetch, &ra->val, v);                                             | 13829     1
   103       +                return __atomic_add_fetch(&ra->val, v, 6);                                       + 13829     1
   104       |#endif                                                                                           | 13830     1
   105       |}                                                                                                | 13831     1
   106       |                                                                                                 | 13832     1
   107       |static RD_INLINE int32_t RD_UNUSED rd_atomic32_sub(rd_atomic32_t *ra, int32_t v) {               | 13833     1
*=Warning===> cc: #2163 explicit type is missing, (int) is assumed
*=Error===> cc: #2100 syntax error: expected semicolon after declaration
*=Error===> cc: #2100 syntax error: expected semicolon after declaration
*=Warning===> cc: #2163 explicit type is missing, (int) is assumed
   108       |#ifdef SYSC                                                        /* ASG_LK01: SYSTEM-C */      | 13834     1
   109       |        int32_t r;                                                 /* ASG_LK01: SYSTEM-C */      | 13835     1
   110       |        pthread_mutex_lock(&ra->lock);     /* ASG_LK01: SYSTEM-C */                              | 13836     1
   111       |        ra->val -= v;                                      /* ASG_LK01: SYSTEM-C */              | 13837     1
   112       |        r = ra->val;                                       /* ASG_LK01: SYSTEM-C */              | 13838     1
   113       |        pthread_mutex_unlock(&ra->lock);   /* ASG_LK01: SYSTEM-C */                              | 13839     1
   114       |        return r;                                                  /* ASG_LK01: SYSTEM-C */      | 13840     1
   115       |#endif                                                             /* ASG_LK01: SYSTEM-C */      | 13841     1
   116       |#ifdef __SUNPRO_C                                                                                | 13842     1
   117       |        return atomic_add_32_nv(&ra->val, -v);                                                   | 13843     1
   118       |#elif defined(_WIN32)                                                                            | 13844     1
   119       |        return InterlockedAdd((LONG *)&ra->val, -v);                                             | 13845     1
   120       |#elif !HAVE_ATOMICS_32                                                                           | 13846     1
   121       |        int32_t r;                                                                               | 13847     1
   122       |        mtx_lock(&ra->lock);                                                                     | 13848     1
   123       |        ra->val -= v;                                                                            | 13849     1
   124       |        r = ra->val;                                                                             | 13850     1
   125       |        mtx_unlock(&ra->lock);                                                                   | 13851     1
   126       |        return r;                                                                                | 13852     1
   127       |#else                                                                                            | 13853     1
   128       |        return ATOMIC_OP32(sub, fetch, &ra->val, v);                                             | 13854     1
   128       +                return __atomic_sub_fetch(&ra->val, v, 6);                                       + 13854     1
   129       |#endif                                                                                           | 13855     1
   130       |}                                                                                                | 13856     1
   131       |                                                                                                 | 13857     1
   132       |/**                                                                                              | 13858     1
   133       | * @warning The returned value is the nominal value and will be outdated                         | 13859     1
   134       | *          by the time the application reads it.                                                | 13860     1
   135       | *          It should not be used for exact arithmetics, any correlation                         | 13861     1
   136       | *          with other data is unsynchronized, meaning that two atomics,                         | 13862     1
   137       | *          or one atomic and a mutex-protected piece of data have no                            | 13863     1
   138       | *          common synchronization and can't be relied on.                                       | 13864     1
   139       | */                                                                                              | 13865     1
   140       |static RD_INLINE int32_t RD_UNUSED rd_atomic32_get(rd_atomic32_t *ra) {                          | 13866     1
*=Warning===> cc: #2163 explicit type is missing, (int) is assumed
*=Error===> cc: #2100 syntax error: expected semicolon after declaration
*=Error===> cc: #2100 syntax error: expected semicolon after declaration
*=Warning===> cc: #2163 explicit type is missing, (int) is assumed
   141       |#ifdef SYSC                                                        /* ASG_LK01: SYSTEM-C */      | 13867     1
   142       |        int32_t r;                                                 /* ASG_LK01: SYSTEM-C */      | 13868     1
   143       |        pthread_mutex_lock(&ra->lock);     /* ASG_LK01: SYSTEM-C */                              | 13869     1
   144       |        r = ra->val;                                       /* ASG_LK01: SYSTEM-C */              | 13870     1
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   277


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   145       |        pthread_mutex_unlock(&ra->lock);   /* ASG_LK01: SYSTEM-C */                              | 13871     1
   146       |        return r;                                                  /* ASG_LK01: SYSTEM-C */      | 13872     1
   147       |#endif                                                             /* ASG_LK01: SYSTEM-C */      | 13873     1
   148       |#if defined(_WIN32) || defined(__SUNPRO_C)                                                       | 13874     1
   149       |        return ra->val;                                                                          | 13875     1
   150       |#elif !HAVE_ATOMICS_32                                                                           | 13876     1
   151       |        int32_t r;                                                                               | 13877     1
   152       |        mtx_lock(&ra->lock);                                                                     | 13878     1
   153       |        r = ra->val;                                                                             | 13879     1
   154       |        mtx_unlock(&ra->lock);                                                                   | 13880     1
   155       |        return r;                                                                                | 13881     1
   156       |#else                                                                                            | 13882     1
   157       |        return ATOMIC_OP32(fetch, add, &ra->val, 0);                                             | 13883     1
   157       +                return __atomic_fetch_add(&ra->val, 0, 6);                                       + 13883     1
   158       |#endif                                                                                           | 13884     1
   159       |}                                                                                                | 13885     1
   160       |                                                                                                 | 13886     1
   161       |static RD_INLINE int32_t RD_UNUSED rd_atomic32_set(rd_atomic32_t *ra, int32_t v) {               | 13887     1
*=Warning===> cc: #2163 explicit type is missing, (int) is assumed
*=Error===> cc: #2100 syntax error: expected semicolon after declaration
*=Error===> cc: #2100 syntax error: expected semicolon after declaration
*=Warning===> cc: #2163 explicit type is missing, (int) is assumed
   162       |#ifdef SYSC                                                        /* ASG_LK01: SYSTEM-C */      | 13888     1
   163       |        int32_t r;                                                 /* ASG_LK01: SYSTEM-C */      | 13889     1
   164       |        pthread_mutex_lock(&ra->lock);     /* ASG_LK01: SYSTEM-C */                              | 13890     1
   165       |        r = ra->val = v;                                   /* ASG_LK01: SYSTEM-C */              | 13891     1
   166       |        pthread_mutex_unlock(&ra->lock);   /* ASG_LK01: SYSTEM-C */                              | 13892     1
   167       |        return r;                                                  /* ASG_LK01: SYSTEM-C */      | 13893     1
   168       |#endif                                                             /* ASG_LK01: SYSTEM-C */      | 13894     1
   169       |#ifdef _WIN32                                                                                    | 13895     1
   170       |        return InterlockedExchange((LONG *)&ra->val, v);                                         | 13896     1
   171       |#elif !HAVE_ATOMICS_32                                                                           | 13897     1
   172       |        int32_t r;                                                                               | 13898     1
   173       |        mtx_lock(&ra->lock);                                                                     | 13899     1
   174       |        r = ra->val = v;                                                                         | 13900     1
   175       |        mtx_unlock(&ra->lock);                                                                   | 13901     1
   176       |        return r;                                                                                | 13902     1
   177       |#elif HAVE_ATOMICS_32_ATOMIC                                                                     | 13903     1
   178       |        __atomic_store_n(&ra->val, v, __ATOMIC_SEQ_CST);                                         | 13904     1
   178       +                __atomic_store_n(&ra->val, v, 6);                                                + 13904     1
   179       |        return v;                                                                                | 13905     1
   180       |#elif HAVE_ATOMICS_32_SYNC                                                                       | 13906     1
   181       |        (void)__sync_lock_test_and_set(&ra->val, v);                                             | 13907     1
   182       |        return v;                                                                                | 13908     1
   183       |#else                                                                                            | 13909     1
   184       |        return ra->val = v; // FIXME                                                             | 13910     1
   185       |#endif                                                                                           | 13911     1
   186       |}                                                                                                | 13912     1
   187       |                                                                                                 | 13913     1
   188       |                                                                                                 | 13914     1
   189       |                                                                                                 | 13915     1
   190       |static RD_INLINE RD_UNUSED void rd_atomic64_init (rd_atomic64_t *ra, int64_t v) {                | 13916     1
*=Warning===> cc: #2163 explicit type is missing, (int) is assumed
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   278


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
*=Error===> cc: #2100 syntax error: expected semicolon after declaration
*=Warning===> cc: #2163 explicit type is missing, (int) is assumed
*=Error===> cc: #2100 syntax error: expected semicolon after declaration
   191       |        ra->val = v;                                                                             | 13917     1
   192       |#ifdef SYSC                                                                             /* ASG_LK| 13918     1
   192       +01: SYSTEM-C */                                                                                  + 13918     1
   193       |        pthread_mutex_init(&ra->lock, mtx_plain);       /* ASG_LK01: SYSTEM-C */                 | 13919     1
   193       +                pthread_mutex_init(&ra->lock, 0);                                                + 13919     1
   194       |#else                                                                                   /* ASG_LK| 13920     1
   194       +01: SYSTEM-C */                                                                                  + 13920     1
   195       |#if !defined(_WIN32) && !HAVE_ATOMICS_64                                                         | 13921     1
   196       |        mtx_init(&ra->lock, mtx_plain);                                                          | 13922     1
   197       |#endif                                                                                           | 13923     1
   198       |#endif                                                                                  /* ASG_LK| 13924     1
   198       +01: SYSTEM-C */                                                                                  + 13924     1
   199       |}                                                                                                | 13925     1
   200       |                                                                                                 | 13926     1
   201       |static RD_INLINE int64_t RD_UNUSED rd_atomic64_add (rd_atomic64_t *ra, int64_t v) {              | 13927     1
*=Warning===> cc: #2163 explicit type is missing, (int) is assumed
*=Error===> cc: #2100 syntax error: expected semicolon after declaration
*=Error===> cc: #2131 redeclaration of 'RD_UNUSED', previously declared on line 70 of "C:\asgkafka\librdkafka\src\rdatomic.h"
*=Error===> cc: #2100 syntax error: expected semicolon after declaration
*=Warning===> cc: #2163 explicit type is missing, (int) is assumed
   202       |#ifdef SYSC                                                               /* ASG_LK01: SYSTEM-C *| 13928     1
   202       +/                                                                                                + 13928     1
   203       |        int64_t r;                                                        /* ASG_LK01: SYSTEM-C *| 13929     1
   203       +/                                                                                                + 13929     1
   204       |        pthread_mutex_lock(&ra->lock);            /* ASG_LK01: SYSTEM-C */                       | 13930     1
   205       |        ra->val += v;                                             /* ASG_LK01: SYSTEM-C */       | 13931     1
   206       |        r = ra->val;                                              /* ASG_LK01: SYSTEM-C */       | 13932     1
   207       |        pthread_mutex_unlock(&ra->lock);          /* ASG_LK01: SYSTEM-C */                       | 13933     1
   208       |        return r;                                                         /* ASG_LK01: SYSTEM-C *| 13934     1
   208       +/                                                                                                + 13934     1
   209       |#endif                                                                    /* ASG_LK01: SYSTEM-C *| 13935     1
   209       +/                                                                                                + 13935     1
   210       |#ifdef __SUNPRO_C                                                                                | 13936     1
   211       |        return atomic_add_64_nv(&ra->val, v);                                                    | 13937     1
   212       |#elif defined(_WIN32)                                                                            | 13938     1
   213       |        return InterlockedAdd64(&ra->val, v);                                                    | 13939     1
   214       |#elif !HAVE_ATOMICS_64                                                                           | 13940     1
   215       |        int64_t r;                                                                               | 13941     1
   216       |        mtx_lock(&ra->lock);                                                                     | 13942     1
   217       |        ra->val += v;                                                                            | 13943     1
   218       |        r = ra->val;                                                                             | 13944     1
   219       |        mtx_unlock(&ra->lock);                                                                   | 13945     1
   220       |        return r;                                                                                | 13946     1
   221       |#else                                                                                            | 13947     1
   222       |        return ATOMIC_OP64(add, fetch, &ra->val, v);                                             | 13948     1
   222       +                return __atomic_add_fetch(&ra->val, v, 6);                                       + 13948     1
   223       |#endif                                                                                           | 13949     1
   224       |}                                                                                                | 13950     1
   225       |                                                                                                 | 13951     1
   226       |static RD_INLINE int64_t RD_UNUSED rd_atomic64_sub(rd_atomic64_t *ra, int64_t v) {               | 13952     1
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   279


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
*=Warning===> cc: #2163 explicit type is missing, (int) is assumed
*=Error===> cc: #2100 syntax error: expected semicolon after declaration
*=Error===> cc: #2131 redeclaration of 'RD_UNUSED', previously declared on line 70 of "C:\asgkafka\librdkafka\src\rdatomic.h"
*=Error===> cc: #2100 syntax error: expected semicolon after declaration
*=Warning===> cc: #2163 explicit type is missing, (int) is assumed
   227       |#ifdef SYSC                                                           /* ASG_LK01: SYSTEM-C */   | 13953     1
   228       |        int64_t r;                                                    /* ASG_LK01: SYSTEM-C */   | 13954     1
   229       |        pthread_mutex_lock(&ra->lock);        /* ASG_LK01: SYSTEM-C */                           | 13955     1
   230       |        ra->val -= v;                                         /* ASG_LK01: SYSTEM-C */           | 13956     1
   231       |        r = ra->val;                                          /* ASG_LK01: SYSTEM-C */           | 13957     1
   232       |        pthread_mutex_unlock(&ra->lock);      /* ASG_LK01: SYSTEM-C */                           | 13958     1
   233       |        return r;                                                     /* ASG_LK01: SYSTEM-C */   | 13959     1
   234       |#endif                                                                /* ASG_LK01: SYSTEM-C */   | 13960     1
   235       |#ifdef __SUNPRO_C                                                                                | 13961     1
   236       |        return atomic_add_64_nv(&ra->val, -v);                                                   | 13962     1
   237       |#elif defined(_WIN32)                                                                            | 13963     1
   238       |        return InterlockedAdd64(&ra->val, -v);                                                   | 13964     1
   239       |#elif !HAVE_ATOMICS_64                                                                           | 13965     1
   240       |        int64_t r;                                                                               | 13966     1
   241       |        mtx_lock(&ra->lock);                                                                     | 13967     1
   242       |        ra->val -= v;                                                                            | 13968     1
   243       |        r = ra->val;                                                                             | 13969     1
   244       |        mtx_unlock(&ra->lock);                                                                   | 13970     1
   245       |        return r;                                                                                | 13971     1
   246       |#else                                                                                            | 13972     1
   247       |        return ATOMIC_OP64(sub, fetch, &ra->val, v);                                             | 13973     1
   247       +                return __atomic_sub_fetch(&ra->val, v, 6);                                       + 13973     1
   248       |#endif                                                                                           | 13974     1
   249       |}                                                                                                | 13975     1
   250       |                                                                                                 | 13976     1
   251       |/**                                                                                              | 13977     1
   252       | * @warning The returned value is the nominal value and will be outdated                         | 13978     1
   253       | *          by the time the application reads it.                                                | 13979     1
   254       | *          It should not be used for exact arithmetics, any correlation                         | 13980     1
   255       | *          with other data is unsynchronized, meaning that two atomics,                         | 13981     1
   256       | *          or one atomic and a mutex-protected piece of data have no                            | 13982     1
   257       | *          common synchronization and can't be relied on.                                       | 13983     1
   258       | *          Use with care.                                                                       | 13984     1
   259       | */                                                                                              | 13985     1
   260       |static RD_INLINE int64_t RD_UNUSED rd_atomic64_get(rd_atomic64_t *ra) {                          | 13986     1
*=Warning===> cc: #2163 explicit type is missing, (int) is assumed
*=Error===> cc: #2100 syntax error: expected semicolon after declaration
*=Error===> cc: #2131 redeclaration of 'RD_UNUSED', previously declared on line 70 of "C:\asgkafka\librdkafka\src\rdatomic.h"
*=Error===> cc: #2100 syntax error: expected semicolon after declaration
*=Warning===> cc: #2163 explicit type is missing, (int) is assumed
   261       |#ifdef SYSC                                                         /* ASG_LK01: SYSTEM-C */     | 13987     1
   262       |        int64_t r;                                                  /* ASG_LK01: SYSTEM-C */     | 13988     1
   263       |        pthread_mutex_lock(&ra->lock);      /* ASG_LK01: SYSTEM-C */                             | 13989     1
   264       |        r = ra->val;                                        /* ASG_LK01: SYSTEM-C */             | 13990     1
   265       |        pthread_mutex_unlock(&ra->lock);    /* ASG_LK01: SYSTEM-C */                             | 13991     1
   266       |        return r;                                                   /* ASG_LK01: SYSTEM-C */     | 13992     1
   267       |#endif                                                              /* ASG_LK01: SYSTEM-C */     | 13993     1
   268       |#if defined(_WIN32) || defined(__SUNPRO_C)                                                       | 13994     1
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   280


                                           * * * * *   S O U R C E   * * * * *

  LINE  STMT                                                                                                       SEQNBR  FILE
              *...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+..*
   269       |        return ra->val;                                                                          | 13995     1
   270       |#elif !HAVE_ATOMICS_64                                                                           | 13996     1
   271       |        int64_t r;                                                                               | 13997     1
   272       |        mtx_lock(&ra->lock);                                                                     | 13998     1
   273       |        r = ra->val;                                                                             | 13999     1
   274       |        mtx_unlock(&ra->lock);                                                                   | 14000     1
   275       |        return r;                                                                                | 14001     1
   276       |#else                                                                                            | 14002     1
   277       |        return ATOMIC_OP64(fetch, add, &ra->val, 0);                                             | 14003     1
   277       +                return __atomic_fetch_add(&ra->val, 0, 6);                                       + 14003     1
   278       |#endif                                                                                           | 14004     1
   279       |}                                                                                                | 14005     1
   280       |                                                                                                 | 14006     1
   281       |                                                                                                 | 14007     1
   282       |static RD_INLINE int64_t RD_UNUSED rd_atomic64_set(rd_atomic64_t *ra, int64_t v) {               | 14008     1
*=Warning===> cc: #2163 explicit type is missing, (int) is assumed
*=Error===> cc: #2100 syntax error: expected semicolon after declaration
*=Error===> cc: #2131 redeclaration of 'RD_UNUSED', previously declared on line 70 of "C:\asgkafka\librdkafka\src\rdatomic.h"
*=Error===> cc: #2100 syntax error: expected semicolon after declaration
*=Warning===> cc: #2163 explicit type is missing, (int) is assumed
   283       |#ifdef SYSC                                                              /* ASG_LK01: SYSTEM-C */| 14009     1
   284       |        int64_t r;                                                       /* ASG_LK01: SYSTEM-C */| 14010     1
   285       |        pthread_mutex_lock(&ra->lock);           /* ASG_LK01: SYSTEM-C */                        | 14011     1
   286       |        ra->val = v;                                             /* ASG_LK01: SYSTEM-C */        | 14012     1
   287       |        r = ra->val;                                             /* ASG_LK01: SYSTEM-C */        | 14013     1
   288       |        pthread_mutex_unlock(&ra->lock);         /* ASG_LK01: SYSTEM-C */                        | 14014     1
   289       |        return r;                                                        /* ASG_LK01: SYSTEM-C */| 14015     1
   290       |#endif                                                                   /* ASG_LK01: SYSTEM-C */| 14016     1
   291       |#ifdef _WIN32                                                                                    | 14017     1
   292       |        return InterlockedExchange64(&ra->val, v);                                               | 14018     1
   293       |#elif !HAVE_ATOMICS_64                                                                           | 14019     1
   294       |        int64_t r;                                                                               | 14020     1
   295       |        mtx_lock(&ra->lock);                                                                     | 14021     1
   296       |        ra->val = v;                                                                             | 14022     1
   297       |        r = ra->val;                                                                             | 14023     1
   298       |        mtx_unlock(&ra->lock);                                                                   | 14024     1
   299       |        return r;                                                                                | 14025     1
   300       |#elif HAVE_ATOMICS_64_ATOMIC                                                                     | 14026     1
   301       |        __atomic_store_n(&ra->val, v, __ATOMIC_SEQ_CST);                                         | 14027     1
   301       +                __atomic_store_n(&ra->val, v, 6);                                                + 14027     1
   302       |        return v;                                                                                | 14028     1
   303       |#elif HAVE_ATOMICS_64_SYNC                                                                       | 14029     1
   304       |        (void)__sync_lock_test_and_set(&ra->val, v);                                             | 14030     1
   305       |        return v;                                                                                | 14031     1
   306       |#else                                                                                            | 14032     1
   307       |        return ra->val = v; // FIXME                                                             | 14033     1
   308       |#endif                                                                                           | 14034     1
   309       |}                                                                                                | 14035     1
   310       |                                                                                                 | 14036     1
   311       |#endif /* _RDATOMIC_H_ */                                                                        | 14037     1
                                     * * * * *   E N D   O F   S O U R C E   * * * * *
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   281


                         * * * * *   F I L E S   * * * * *

         FILES  ---  FILE#   NAME

                        1   C:\asgkafka\librdkafka\src\rdatomic.h
                        2   C:\asgkafka\librdkafka\src\sysc.h
                        3   C:\dignus\include\sys\types.h
                        4   C:\dignus\include\sys\cdefs.h
                        5   C:\dignus\include\machine\endian.h
                        6   C:\dignus\include\sys\_types.h
                        7   C:\dignus\include\machine\_types.h
                        8   C:\dignus\include\sys\_pthreadtypes.h
                        9   C:\dignus\include\sys\select.h
                       10   C:\dignus\include\sys\_sigset.h
                       11   C:\dignus\include\sys\_timeval.h
                       12   C:\dignus\include\sys\timespec.h
                       13   C:\dignus\include\unistd.h
                       14   C:\dignus\include\sys\unistd.h
                       15   C:\dignus\include\sys\_null.h
                       16   C:\dignus\include\time.h
                       17   C:\dignus\include\sys\time.h
                       18   C:\asgkafka\librdkafka\src\tinycthread.h
                       19   C:\asgkafka\librdkafka\src\..\config.h
                       20   C:\dignus\include\pthread.h
                       21   C:\dignus\include\sys\signal.h
                       22   C:\dignus\include\machine\signal.h
                       23   C:\dignus\include\machine\trap.h
                       24   C:\dignus\include\limits.h
                       25   C:\dignus\include\sys\limits.h
                       26   C:\dignus\include\machine\_limits.h
                       27   C:\dignus\include\sys\syslimits.h
                       28   C:\dignus\include\sched.h
                       29   C:\asgkafka\librdkafka\src\tinycthread_extra.h

                         * * * * *   E N D   O F   F I L E S   * * * * *
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   282


                                   * * * * *   S T R U C T U R E   M A P S   * * * * *


===================================================================================================================================
| Aggregate map for: union                                                                       Total size: 128 bytes            |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |     128           | __mbstate8[128]                                                                         |
|       0           |       8           | _mbstateL                                                                               |
|       8           |     120           | ***PADDING***                                                                           |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: struct pthread_attr                                                         Total size: 64 bytes             |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |      64           | __u                                                                                     |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: _Packed struct pthread_attr                                                 Total size: 64 bytes             |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |      64           | __u                                                                                     |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: union                                                                       Total size: 64 bytes             |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |      64           | __i[16]                                                                                 |
|       0           |      64           | __vi[16]                                                                                |
|       0           |      64           | __s[8]                                                                                  |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: struct pthread_mutex                                                        Total size: 40 bytes             |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |      40           | __u                                                                                     |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: _Packed struct pthread_mutex                                                Total size: 40 bytes             |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   283


                                   * * * * *   S T R U C T U R E   M A P S   * * * * *

|===================|===================|=========================================================================================|
|       0           |      40           | __u                                                                                     |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: union                                                                       Total size: 40 bytes             |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |      40           | __i[10]                                                                                 |
|       0           |      40           | __vi[10]                                                                                |
|       0           |      40           | __p[5]                                                                                  |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: struct pthread_cond                                                         Total size: 48 bytes             |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |      48           | __u                                                                                     |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: _Packed struct pthread_cond                                                 Total size: 48 bytes             |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |      48           | __u                                                                                     |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: union                                                                       Total size: 48 bytes             |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |      48           | __i[12]                                                                                 |
|       0           |      48           | __vi[12]                                                                                |
|       0           |      48           | __p[6]                                                                                  |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: struct pthread_rwlock                                                       Total size: 56 bytes             |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |      56           | __u                                                                                     |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: _Packed struct pthread_rwlock                                               Total size: 56 bytes             |
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   284


                                   * * * * *   S T R U C T U R E   M A P S   * * * * *

|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |      56           | __u                                                                                     |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: union                                                                       Total size: 56 bytes             |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |      56           | __i[14]                                                                                 |
|       0           |      56           | __vi[14]                                                                                |
|       0           |      56           | __p[7]                                                                                  |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: struct pthread_barrier                                                      Total size: 32 bytes             |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |      32           | __u                                                                                     |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: _Packed struct pthread_barrier                                              Total size: 32 bytes             |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |      32           | __u                                                                                     |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: union                                                                       Total size: 32 bytes             |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |      32           | __i[8]                                                                                  |
|       0           |      32           | __vi[8]                                                                                 |
|       0           |      32           | __p[4]                                                                                  |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: struct                                                                      Total size: 4 bytes              |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |       4           | __attr                                                                                  |
===================================================================================================================================
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   285


                                   * * * * *   S T R U C T U R E   M A P S   * * * * *


===================================================================================================================================
| Aggregate map for: struct                                                                      Total size: 4 bytes              |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |       4           | __attr                                                                                  |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: struct                                                                      Total size: 56 bytes             |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |      56           | __u                                                                                     |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: union                                                                       Total size: 56 bytes             |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |      56           | __i[14]                                                                                 |
|       0           |      56           | __vi[14]                                                                                |
|       0           |      56           | __p[7]                                                                                  |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: struct                                                                      Total size: 8 bytes              |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |       8           | __attr[2]                                                                               |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: struct                                                                      Total size: 4 bytes              |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |       4           | __attr                                                                                  |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: struct __sigset                                                             Total size: 16 bytes             |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |      16           | __bits[4]                                                                               |
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   286


                                   * * * * *   S T R U C T U R E   M A P S   * * * * *

===================================================================================================================================

===================================================================================================================================
| Aggregate map for: _Packed struct __sigset                                                     Total size: 16 bytes             |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |      16           | __bits[4]                                                                               |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: struct timeval                                                              Total size: 16 bytes             |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |       8           | tv_sec                                                                                  |
|       8           |       8           | tv_usec                                                                                 |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: _Packed struct timeval                                                      Total size: 16 bytes             |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |       8           | tv_sec                                                                                  |
|       8           |       8           | tv_usec                                                                                 |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: struct timespec                                                             Total size: 16 bytes             |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |       8           | tv_sec                                                                                  |
|       8           |       8           | tv_nsec                                                                                 |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: _Packed struct timespec                                                     Total size: 16 bytes             |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |       8           | tv_sec                                                                                  |
|       8           |       8           | tv_nsec                                                                                 |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: struct __sigset_t                                                           Total size: 16 bytes             |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   287


                                   * * * * *   S T R U C T U R E   M A P S   * * * * *

|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |      16           | __bits[4]                                                                               |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: _Packed struct __sigset_t                                                   Total size: 16 bytes             |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |      16           | __bits[4]                                                                               |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: struct fd_set                                                               Total size: 128 bytes            |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |     128           | __fds_bits[16]                                                                          |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: _Packed struct fd_set                                                       Total size: 128 bytes            |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |     128           | __fds_bits[16]                                                                          |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: struct fd_set                                                               Total size: 128 bytes            |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |     128           | __fds_bits[16]                                                                          |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: _Packed struct fd_set                                                       Total size: 128 bytes            |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |     128           | __fds_bits[16]                                                                          |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: struct sigset_t                                                             Total size: 16 bytes             |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   288


                                   * * * * *   S T R U C T U R E   M A P S   * * * * *

|===================|===================|=========================================================================================|
|       0           |      16           | __bits[4]                                                                               |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: _Packed struct sigset_t                                                     Total size: 16 bytes             |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |      16           | __bits[4]                                                                               |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: struct tm                                                                   Total size: 56 bytes             |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |       4           | tm_sec                                                                                  |
|       4           |       4           | tm_min                                                                                  |
|       8           |       4           | tm_hour                                                                                 |
|      12           |       4           | tm_mday                                                                                 |
|      16           |       4           | tm_mon                                                                                  |
|      20           |       4           | tm_year                                                                                 |
|      24           |       4           | tm_wday                                                                                 |
|      28           |       4           | tm_yday                                                                                 |
|      32           |       4           | tm_isdst                                                                                |
|      36           |       4           | ***PADDING***                                                                           |
|      40           |       8           | tm_gmtoff                                                                               |
|      48           |       8           | tm_zone                                                                                 |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: _Packed struct tm                                                           Total size: 52 bytes             |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |       4           | tm_sec                                                                                  |
|       4           |       4           | tm_min                                                                                  |
|       8           |       4           | tm_hour                                                                                 |
|      12           |       4           | tm_mday                                                                                 |
|      16           |       4           | tm_mon                                                                                  |
|      20           |       4           | tm_year                                                                                 |
|      24           |       4           | tm_wday                                                                                 |
|      28           |       4           | tm_yday                                                                                 |
|      32           |       4           | tm_isdst                                                                                |
|      36           |       8           | tm_gmtoff                                                                               |
|      44           |       8           | tm_zone                                                                                 |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: struct timezone                                                             Total size: 8 bytes              |
|=================================================================================================================================|
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   289


                                   * * * * *   S T R U C T U R E   M A P S   * * * * *

|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |       4           | tz_minuteswest                                                                          |
|       4           |       4           | tz_dsttime                                                                              |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: _Packed struct timezone                                                     Total size: 8 bytes              |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |       4           | tz_minuteswest                                                                          |
|       4           |       4           | tz_dsttime                                                                              |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: struct bintime                                                              Total size: 16 bytes             |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |       8           | sec                                                                                     |
|       8           |       8           | frac                                                                                    |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: _Packed struct bintime                                                      Total size: 16 bytes             |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |       8           | sec                                                                                     |
|       8           |       8           | frac                                                                                    |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: struct itimerval                                                            Total size: 32 bytes             |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |      16           | it_interval                                                                             |
|      16           |      16           | it_value                                                                                |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: _Packed struct itimerval                                                    Total size: 32 bytes             |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |      16           | it_interval                                                                             |
|      16           |      16           | it_value                                                                                |
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   290


                                   * * * * *   S T R U C T U R E   M A P S   * * * * *

===================================================================================================================================

===================================================================================================================================
| Aggregate map for: struct clockinfo                                                            Total size: 20 bytes             |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |       4           | hz                                                                                      |
|       4           |       4           | tick                                                                                    |
|       8           |       4           | spare                                                                                   |
|      12           |       4           | stathz                                                                                  |
|      16           |       4           | profhz                                                                                  |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: _Packed struct clockinfo                                                    Total size: 20 bytes             |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |       4           | hz                                                                                      |
|       4           |       4           | tick                                                                                    |
|       8           |       4           | spare                                                                                   |
|      12           |       4           | stathz                                                                                  |
|      16           |       4           | profhz                                                                                  |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: union sigval                                                                Total size: 8 bytes              |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |       4           | sigval_int                                                                              |
|       0           |       8           | sigval_ptr                                                                              |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: _Packed union sigval                                                        Total size: 8 bytes              |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |       4           | sigval_int                                                                              |
|       0           |       8           | sigval_ptr                                                                              |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: struct sigevent                                                             Total size: 16 bytes             |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |       4           | sigev_notify                                                                            |
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   291


                                   * * * * *   S T R U C T U R E   M A P S   * * * * *

|       4           |       4           | __sigev_u                                                                               |
|       8           |       8           | sigev_value                                                                             |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: _Packed struct sigevent                                                     Total size: 16 bytes             |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |       4           | sigev_notify                                                                            |
|       4           |       4           | __sigev_u                                                                               |
|       8           |       8           | sigev_value                                                                             |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: union                                                                       Total size: 4 bytes              |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |       4           | __sigev_signo                                                                           |
|       0           |       4           | __sigev_notify_kqueue                                                                   |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: struct __siginfo                                                            Total size: 80 bytes             |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |       4           | si_signo                                                                                |
|       4           |       4           | si_errno                                                                                |
|       8           |       4           | si_code                                                                                 |
|      12           |       4           | si_pid                                                                                  |
|      16           |       4           | si_uid                                                                                  |
|      20           |       4           | si_status                                                                               |
|      24           |       8           | si_addr                                                                                 |
|      32           |       8           | si_value                                                                                |
|      40           |       8           | si_band                                                                                 |
|      48           |      28           | __spare__[7]                                                                            |
|      76           |       4           | ***PADDING***                                                                           |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: _Packed struct __siginfo                                                    Total size: 76 bytes             |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |       4           | si_signo                                                                                |
|       4           |       4           | si_errno                                                                                |
|       8           |       4           | si_code                                                                                 |
|      12           |       4           | si_pid                                                                                  |
|      16           |       4           | si_uid                                                                                  |
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   292


                                   * * * * *   S T R U C T U R E   M A P S   * * * * *

|      20           |       4           | si_status                                                                               |
|      24           |       8           | si_addr                                                                                 |
|      32           |       8           | si_value                                                                                |
|      40           |       8           | si_band                                                                                 |
|      48           |      28           | __spare__[7]                                                                            |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: struct sigaction                                                            Total size: 32 bytes             |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |       8           | __sigaction_u                                                                           |
|       8           |       4           | sa_flags                                                                                |
|      12           |      16           | sa_mask                                                                                 |
|      28           |       4           | ***PADDING***                                                                           |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: _Packed struct sigaction                                                    Total size: 28 bytes             |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |       8           | __sigaction_u                                                                           |
|       8           |       4           | sa_flags                                                                                |
|      12           |      16           | sa_mask                                                                                 |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: union                                                                       Total size: 8 bytes              |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |       8           | __sa_handler                                                                            |
|       0           |       8           | __sa_sigaction                                                                          |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: struct sigaltstack                                                          Total size: 24 bytes             |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |       8           | ss_sp                                                                                   |
|       8           |       8           | ss_size                                                                                 |
|      16           |       4           | ss_flags                                                                                |
|      20           |       4           | ***PADDING***                                                                           |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: _Packed struct sigaltstack                                                  Total size: 20 bytes             |
|=================================================================================================================================|
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   293


                                   * * * * *   S T R U C T U R E   M A P S   * * * * *

|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |       8           | ss_sp                                                                                   |
|       8           |       8           | ss_size                                                                                 |
|      16           |       4           | ss_flags                                                                                |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: struct sigvec                                                               Total size: 16 bytes             |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |       8           | sv_handler                                                                              |
|       8           |       4           | sv_mask                                                                                 |
|      12           |       4           | sv_flags                                                                                |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: _Packed struct sigvec                                                       Total size: 16 bytes             |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |       8           | sv_handler                                                                              |
|       8           |       4           | sv_mask                                                                                 |
|      12           |       4           | sv_flags                                                                                |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: struct sigstack                                                             Total size: 16 bytes             |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |       8           | ss_sp                                                                                   |
|       8           |       4           | ss_onstack                                                                              |
|      12           |       4           | ***PADDING***                                                                           |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: _Packed struct sigstack                                                     Total size: 12 bytes             |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |       8           | ss_sp                                                                                   |
|       8           |       4           | ss_onstack                                                                              |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: struct sched_param                                                          Total size: 4 bytes              |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   294


                                   * * * * *   S T R U C T U R E   M A P S   * * * * *

|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |       4           | sched_priority                                                                          |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: _Packed struct sched_param                                                  Total size: 4 bytes              |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |       4           | sched_priority                                                                          |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: struct pthread_attr_t                                                       Total size: 64 bytes             |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |      64           | __u                                                                                     |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: _Packed struct pthread_attr_t                                               Total size: 64 bytes             |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |      64           | __u                                                                                     |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: struct pthread_barrier_t                                                    Total size: 32 bytes             |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |      32           | __u                                                                                     |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: _Packed struct pthread_barrier_t                                            Total size: 32 bytes             |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |      32           | __u                                                                                     |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: struct pthread_barrierattr_t                                                Total size: 4 bytes              |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   295


                                   * * * * *   S T R U C T U R E   M A P S   * * * * *

|===================|===================|=========================================================================================|
|       0           |       4           | __attr                                                                                  |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: _Packed struct pthread_barrierattr_t                                        Total size: 4 bytes              |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |       4           | __attr                                                                                  |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: struct __ptcb                                                               Total size: 24 bytes             |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |       8           | __f                                                                                     |
|       8           |       8           | __x                                                                                     |
|      16           |       8           | __next                                                                                  |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: _Packed struct __ptcb                                                       Total size: 24 bytes             |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |       8           | __f                                                                                     |
|       8           |       8           | __x                                                                                     |
|      16           |       8           | __next                                                                                  |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: struct pthread_condattr_t                                                   Total size: 4 bytes              |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |       4           | __attr                                                                                  |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: _Packed struct pthread_condattr_t                                           Total size: 4 bytes              |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |       4           | __attr                                                                                  |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: struct pthread_cond_t                                                       Total size: 48 bytes             |
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   296


                                   * * * * *   S T R U C T U R E   M A P S   * * * * *

|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |      48           | __u                                                                                     |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: _Packed struct pthread_cond_t                                               Total size: 48 bytes             |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |      48           | __u                                                                                     |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: struct pthread_mutex_t                                                      Total size: 40 bytes             |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |      40           | __u                                                                                     |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: _Packed struct pthread_mutex_t                                              Total size: 40 bytes             |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |      40           | __u                                                                                     |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: struct pthread_mutexattr_t                                                  Total size: 4 bytes              |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |       4           | __attr                                                                                  |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: _Packed struct pthread_mutexattr_t                                          Total size: 4 bytes              |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |       4           | __attr                                                                                  |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: struct pthread_rwlock_t                                                     Total size: 56 bytes             |
|=================================================================================================================================|
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   297


                                   * * * * *   S T R U C T U R E   M A P S   * * * * *

|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |      56           | __u                                                                                     |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: _Packed struct pthread_rwlock_t                                             Total size: 56 bytes             |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |      56           | __u                                                                                     |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: struct pthread_rwlockattr_t                                                 Total size: 8 bytes              |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |       8           | __attr[2]                                                                               |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: _Packed struct pthread_rwlockattr_t                                         Total size: 8 bytes              |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |       8           | __attr[2]                                                                               |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: struct                                                                      Total size: 48 bytes             |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |       4           | val                                                                                     |
|       4           |       4           | ***PADDING***                                                                           |
|       8           |      40           | lock                                                                                    |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: struct                                                                      Total size: 48 bytes             |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |       8           | val                                                                                     |
|       8           |      40           | lock                                                                                    |
===================================================================================================================================

===================================================================================================================================
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   298


                                   * * * * *   S T R U C T U R E   M A P S   * * * * *

| Aggregate map for: struct rd_atomic32_t                                                        Total size: 48 bytes             |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |       4           | val                                                                                     |
|       4           |       4           | ***PADDING***                                                                           |
|       8           |      40           | lock                                                                                    |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: _Packed struct rd_atomic32_t                                                Total size: 44 bytes             |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |       4           | val                                                                                     |
|       4           |      40           | lock                                                                                    |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: struct rd_atomic64_t                                                        Total size: 48 bytes             |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |       8           | val                                                                                     |
|       8           |      40           | lock                                                                                    |
===================================================================================================================================

===================================================================================================================================
| Aggregate map for: _Packed struct rd_atomic64_t                                                Total size: 48 bytes             |
|=================================================================================================================================|
|      Offset       |      Length       | Member Name                                                                             |
|    Bytes(Bits)    |    Bytes(Bits)    |                                                                                         |
|===================|===================|=========================================================================================|
|       0           |       8           | val                                                                                     |
|       8           |      40           | lock                                                                                    |
===================================================================================================================================
                           * * * * *   E N D   O F   S T R U C T U R E   M A P S   * * * * *
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   299

                               * * * * *   S T O R A G E   O F F S E T   L I S T I N G   * * * * *

IDENTIFIER          DEFINITION      ATTRIBUTES


                         * * * * *   E N D   O F   S T O R A G E   O F F S E T   L I S T I N G   * * * * *
Dignus Systems/C V2.25.07 Mar  6 2021 08:51:07          C:\asgkafka\librdkafka\src\rdatomic.h         04/28/2021 14:00:00 Page   300

                                           * * * * *   S T A T I C     M A P   * * * * *

OFFSET (HEX)   LENGTH (HEX)   NAME

                                  * * * * *   E N D     O F     S T A T I C     M A P   * * * * *

                              * * * * *   E N D   O F   C O M P I L A T I O N   * * * * *
